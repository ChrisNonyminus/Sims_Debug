/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'Sims_Debug.exe'
*/

/*
Do not include this file in any source file. It is not usable.
This file is simply for reference regarding what structs are what.
 */

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

#include <windows.h>

struct tagRECT;
struct HWND__;
union _LARGE_INTEGER;
struct _devicemodeA;
struct tagWNDCLASSEXA;
struct HINSTANCE__;
struct HICON__;
struct HBRUSH__;
struct _DOCINFOA;
struct _GUID;
struct _RTL_CRITICAL_SECTION_DEBUG;
struct tagWINDOWPLACEMENT;
struct tagSAFEARRAYBOUND;
struct HDC__;
struct tagLOGFONTA;
struct _SHFILEINFOA;
struct tagSTGMEDIUM;
struct HBITMAP__;
struct HENHMETAFILE__;
struct IStream;
struct IStreamVtbl;
union _ULARGE_INTEGER;
struct tagSTATSTG;
struct IStorage;
struct IStorageVtbl;
struct IEnumSTATSTG;
struct IEnumSTATSTGVtbl;
struct IUnknown;
struct IUnknownVtbl;
struct tagVARIANT;
struct IDispatch;
struct IDispatchVtbl;
struct ITypeInfo;
struct ITypeInfoVtbl;
struct tagTYPEATTR;
struct tagTYPEDESC;
struct tagARRAYDESC;
struct ITypeComp;
struct ITypeCompVtbl;
union tagBINDPTR;
struct tagFUNCDESC;
struct tagELEMDESC;
struct tagPARAMDESCEX;
struct tagVARDESC;
struct tagDISPPARAMS;
struct tagEXCEPINFO;
struct ITypeLib;
struct ITypeLibVtbl;
struct tagTLIBATTR;
struct tagSAFEARRAY;
struct tagDEC;
struct IRecordInfo;
struct IRecordInfoVtbl;
struct _s_ThrowInfo;
struct _s_CatchableTypeArray;
struct _s_CatchableType;
struct _iobuf;
struct HACCEL__;
struct ostream;
struct tagSCROLLINFO;
struct ios_vtbl;
struct streambuf_vtbl;
struct tagMODULEENTRY32;
struct _CRT_CRITICAL_SECTION_DEBUG;
struct cRZCmdLine;
struct cSimsApp;
struct cRZLanguageUtility_vtbl;
struct cGZFrameWorkW95;
struct cGZFontSys_vtbl;
struct cWinMemView;
struct cGZFrameWorkW95_vtbl;
struct cGZWin_vtbl;
struct cGZWin;
struct cGZWinMgrW95;
struct cRZFile;
struct cWinCPanel;
struct CPState;
struct cGZWinSplashScreen;
struct PalWrap;
struct ObjectFolder;
struct StdResFile;
struct ObjResFile;
struct House;

/* 1 */
enum __TI_flags {
  TI_IsConst = 0x1,
  TI_IsVolatile = 0x2,
  TI_IsUnaligned = 0x4,
  TI_IsPure = 0x8,
  TI_IsWinRT = 0x10,
};

/* 2 */
enum __CT_flags {
  CT_IsSimpleType = 0x1,
  CT_ByReferenceOnly = 0x2,
  CT_HasVirtualBase = 0x4,
  CT_IsWinRTHandle = 0x8,
  CT_IsStdBadAlloc = 0x10,
};

/* 3 */
struct _SCOPETABLE_ENTRY {
  int EnclosingLevel;
  void *FilterFunc;
  void *HandlerFunc;
};

/* 4 */
typedef struct _SCOPETABLE_ENTRY *PSCOPETABLE_ENTRY;

/* 39 */
typedef void *PVOID;

/* 22 */
typedef unsigned int DWORD;

/* 5 */
struct _EH3_EXCEPTION_REGISTRATION {
  struct _EH3_EXCEPTION_REGISTRATION *Next;
  PVOID ExceptionHandler;
  PSCOPETABLE_ENTRY ScopeTable;
  DWORD TryLevel;
};

/* 6 */
typedef struct _EH3_EXCEPTION_REGISTRATION EH3_EXCEPTION_REGISTRATION;

/* 7 */
typedef struct _EH3_EXCEPTION_REGISTRATION *PEH3_EXCEPTION_REGISTRATION;

/* 8 */
struct CPPEH_RECORD {
  DWORD old_esp;
  EXCEPTION_POINTERS *exc_ptr;
  struct _EH3_EXCEPTION_REGISTRATION registration;
};

/* 9 */
typedef struct tagRECT RECT;

/* 11 */
typedef int LONG;

/* 10 */
struct tagRECT {
  LONG left;
  LONG top;
  LONG right;
  LONG bottom;
};

/* 12 */
struct tagPOINT {
  LONG x;
  LONG y;
};

/* 13 */
struct tagSIZE {
  LONG cx;
  LONG cy;
};

/* 15 */
typedef struct HWND__ *HWND;

/* 17 */
typedef unsigned int UINT;

/* 19 */
typedef unsigned int UINT_PTR;

/* 18 */
typedef UINT_PTR WPARAM;

/* 21 */
typedef int LONG_PTR;

/* 20 */
typedef LONG_PTR LPARAM;

/* 23 */
typedef struct tagPOINT POINT;

/* 14 */
struct tagMSG {
  HWND hwnd;
  UINT message;
  WPARAM wParam;
  LPARAM lParam;
  DWORD time;
  POINT pt;
};

/* 16 */
struct HWND__ {
  int unused;
};

/* 25 */
typedef unsigned __int8 BYTE;

/* 24 */
#pragma pack(push, 4)
struct tagTEXTMETRICA {
  LONG tmHeight;
  LONG tmAscent;
  LONG tmDescent;
  LONG tmInternalLeading;
  LONG tmExternalLeading;
  LONG tmAveCharWidth;
  LONG tmMaxCharWidth;
  LONG tmWeight;
  LONG tmOverhang;
  LONG tmDigitizedAspectX;
  LONG tmDigitizedAspectY;
  BYTE tmFirstChar;
  BYTE tmLastChar;
  BYTE tmDefaultChar;
  BYTE tmBreakChar;
  BYTE tmItalic;
  BYTE tmUnderlined;
  BYTE tmStruckOut;
  BYTE tmPitchAndFamily;
  BYTE tmCharSet;
};
#pragma pack(pop)

/* 26 */
typedef union _LARGE_INTEGER LARGE_INTEGER;

/* 28 */
struct _LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E {
  DWORD LowPart;
  LONG HighPart;
};

/* 29 */
typedef __int64 LONGLONG;

/* 27 */
union _LARGE_INTEGER {
  struct {
    DWORD LowPart;
    LONG HighPart;
  };
  struct _LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E u;
  LONGLONG QuadPart;
};

/* 31 */
typedef unsigned __int16 WORD;

/* 30 */
struct _SYSTEMTIME {
  WORD wYear;
  WORD wMonth;
  WORD wDayOfWeek;
  WORD wDay;
  WORD wHour;
  WORD wMinute;
  WORD wSecond;
  WORD wMilliseconds;
};

/* 34 */
struct _SYSTEM_INFO::$A707B71C060B6D10F73A71917EA8473F::
    $AA04DEB0C6383F89F13D312A174572A9 {
  WORD wProcessorArchitecture;
  WORD wReserved;
};

/* 33 */
union _SYSTEM_INFO::$A707B71C060B6D10F73A71917EA8473F {
  DWORD dwOemId;
  struct {
    WORD wProcessorArchitecture;
    WORD wReserved;
  };
};

/* 35 */
typedef void *LPVOID;

/* 37 */
typedef unsigned int ULONG_PTR;

/* 36 */
typedef ULONG_PTR DWORD_PTR;

/* 32 */
struct _SYSTEM_INFO {
  union {
    DWORD dwOemId;
    struct {
      WORD wProcessorArchitecture;
      WORD wReserved;
    };
  };
  DWORD dwPageSize;
  LPVOID lpMinimumApplicationAddress;
  LPVOID lpMaximumApplicationAddress;
  DWORD_PTR dwActiveProcessorMask;
  DWORD dwNumberOfProcessors;
  DWORD dwProcessorType;
  DWORD dwAllocationGranularity;
  WORD wProcessorLevel;
  WORD wProcessorRevision;
};

/* 40 */
typedef ULONG_PTR SIZE_T;

/* 38 */
struct _MEMORY_BASIC_INFORMATION {
  PVOID BaseAddress;
  PVOID AllocationBase;
  DWORD AllocationProtect;
  SIZE_T RegionSize;
  DWORD State;
  DWORD Protect;
  DWORD Type;
};

/* 41 */
typedef struct _devicemodeA DEVMODEA;

/* 42 */
struct _devicemodeA {
  BYTE dmDeviceName[32];
  WORD dmSpecVersion;
  WORD dmDriverVersion;
  WORD dmSize;
  WORD dmDriverExtra;
  DWORD dmFields;
  union {
    struct {
      __int16 dmOrientation;
      __int16 dmPaperSize;
      __int16 dmPaperLength;
      __int16 dmPaperWidth;
      __int16 dmScale;
      __int16 dmCopies;
      __int16 dmDefaultSource;
      __int16 dmPrintQuality;
    };
    struct {
      POINTL dmPosition;
      DWORD dmDisplayOrientation;
      DWORD dmDisplayFixedOutput;
    };
  };
  __int16 dmColor;
  __int16 dmDuplex;
  __int16 dmYResolution;
  __int16 dmTTOption;
  __int16 dmCollate;
  BYTE dmFormName[32];
  WORD dmLogPixels;
  DWORD dmBitsPerPel;
  DWORD dmPelsWidth;
  DWORD dmPelsHeight;
  union {
    DWORD dmDisplayFlags;
    DWORD dmNup;
  };
  DWORD dmDisplayFrequency;
  DWORD dmICMMethod;
  DWORD dmICMIntent;
  DWORD dmMediaType;
  DWORD dmDitherType;
  DWORD dmReserved1;
  DWORD dmReserved2;
  DWORD dmPanningWidth;
  DWORD dmPanningHeight;
};

/* 49 */
typedef struct tagWNDCLASSEXA WNDCLASSEXA;

/* 52 */
typedef LONG_PTR LRESULT;

/* 51 */
typedef LRESULT(__stdcall *WNDPROC)(HWND, UINT, WPARAM, LPARAM);

/* 53 */
typedef struct HINSTANCE__ *HINSTANCE;

/* 55 */
typedef struct HICON__ *HICON;

/* 57 */
typedef HICON HCURSOR;

/* 58 */
typedef struct HBRUSH__ *HBRUSH;

/* 61 */
typedef char CHAR;

/* 60 */
typedef const CHAR *LPCSTR;

/* 50 */
struct tagWNDCLASSEXA {
  UINT cbSize;
  UINT style;
  WNDPROC lpfnWndProc;
  int cbClsExtra;
  int cbWndExtra;
  HINSTANCE hInstance;
  HICON hIcon;
  HCURSOR hCursor;
  HBRUSH hbrBackground;
  LPCSTR lpszMenuName;
  LPCSTR lpszClassName;
  HICON hIconSm;
};

/* 54 */
struct HINSTANCE__ {
  int unused;
};

/* 56 */
struct HICON__ {
  int unused;
};

/* 59 */
struct HBRUSH__ {
  int unused;
};

/* 62 */
typedef struct _DOCINFOA DOCINFOA;

/* 63 */
struct _DOCINFOA {
  int cbSize;
  LPCSTR lpszDocName;
  LPCSTR lpszOutput;
  LPCSTR lpszDatatype;
  DWORD fwType;
};

/* 65 */
typedef struct _GUID GUID;

/* 64 */
typedef GUID IID;

/* 66 */
struct _GUID {
  unsigned int Data1;
  unsigned __int16 Data2;
  unsigned __int16 Data3;
  unsigned __int8 Data4[8];
};

/* 68 */
typedef struct _RTL_CRITICAL_SECTION_DEBUG *PRTL_CRITICAL_SECTION_DEBUG;

/* 72 */
typedef void *HANDLE;

/* 67 */
#pragma pack(push, 8)
struct _RTL_CRITICAL_SECTION {
  PRTL_CRITICAL_SECTION_DEBUG DebugInfo;
  LONG LockCount;
  LONG RecursionCount;
  HANDLE OwningThread;
  HANDLE LockSemaphore;
  ULONG_PTR SpinCount;
};
#pragma pack(pop)

/* 71 */
struct _LIST_ENTRY {
  struct _LIST_ENTRY *Flink;
  struct _LIST_ENTRY *Blink;
};

/* 70 */
typedef struct _LIST_ENTRY LIST_ENTRY;

/* 69 */
struct _RTL_CRITICAL_SECTION_DEBUG {
  WORD Type;
  WORD CreatorBackTraceIndex;
  struct _RTL_CRITICAL_SECTION *CriticalSection;
  LIST_ENTRY ProcessLocksList;
  DWORD EntryCount;
  DWORD ContentionCount;
  DWORD Flags;
  WORD CreatorBackTraceIndexHigh;
  WORD SpareWORD;
};

/* 73 */
typedef struct tagWINDOWPLACEMENT WINDOWPLACEMENT;

/* 74 */
struct tagWINDOWPLACEMENT {
  UINT length;
  UINT flags;
  UINT showCmd;
  POINT ptMinPosition;
  POINT ptMaxPosition;
  RECT rcNormalPosition;
};

/* 75 */
typedef GUID CLSID;

/* 80 */
typedef unsigned __int16 wchar_t;

/* 79 */
typedef wchar_t WCHAR;

/* 78 */
typedef WCHAR OLECHAR;

/* 77 */
typedef OLECHAR *LPOLESTR;

/* 84 */
typedef unsigned int ULONG;

/* 83 */
struct tagCY::$3EA7BC8C29B528C7CA1203FC489E132F {
  ULONG Lo;
  LONG Hi;
};

/* 82 */
union tagCY {
  struct {
    ULONG Lo;
    LONG Hi;
  };
  LONGLONG int64;
};

/* 81 */
typedef union tagCY CY;

/* 85 */
typedef __int16 SHORT;

/* 86 */
typedef int BOOL;

/* 76 */
#pragma pack(push, 8)
struct tagFONTDESC {
  UINT cbSizeofstruct;
  LPOLESTR lpstrName;
  CY cySize;
  SHORT sWeight;
  SHORT sCharset;
  BOOL fItalic;
  BOOL fUnderline;
  BOOL fStrikethrough;
};
#pragma pack(pop)

/* 87 */
typedef struct tagSAFEARRAYBOUND SAFEARRAYBOUND;

/* 88 */
#pragma pack(push, 8)
struct tagSAFEARRAYBOUND {
  ULONG cElements;
  LONG lLbound;
};
#pragma pack(pop)

/* 89 */
struct _FILETIME {
  DWORD dwLowDateTime;
  DWORD dwHighDateTime;
};

/* 91 */
typedef struct _SYSTEMTIME SYSTEMTIME;

/* 90 */
struct _TIME_ZONE_INFORMATION {
  LONG Bias;
  WCHAR StandardName[32];
  SYSTEMTIME StandardDate;
  LONG StandardBias;
  WCHAR DaylightName[32];
  SYSTEMTIME DaylightDate;
  LONG DaylightBias;
};

/* 92 */
struct _cpinfo {
  UINT MaxCharSize;
  BYTE DefaultChar[2];
  BYTE LeadByte[12];
};

/* 94 */
typedef CHAR *LPSTR;

/* 95 */
typedef BYTE *LPBYTE;

/* 93 */
struct _STARTUPINFOA {
  DWORD cb;
  LPSTR lpReserved;
  LPSTR lpDesktop;
  LPSTR lpTitle;
  DWORD dwX;
  DWORD dwY;
  DWORD dwXSize;
  DWORD dwYSize;
  DWORD dwXCountChars;
  DWORD dwYCountChars;
  DWORD dwFillAttribute;
  DWORD dwFlags;
  WORD wShowWindow;
  WORD cbReserved2;
  LPBYTE lpReserved2;
  HANDLE hStdInput;
  HANDLE hStdOutput;
  HANDLE hStdError;
};

/* 96 */
struct _OSVERSIONINFOA {
  DWORD dwOSVersionInfoSize;
  DWORD dwMajorVersion;
  DWORD dwMinorVersion;
  DWORD dwBuildNumber;
  DWORD dwPlatformId;
  CHAR szCSDVersion[128];
};

/* 97 */
struct _SECURITY_ATTRIBUTES {
  DWORD nLength;
  LPVOID lpSecurityDescriptor;
  BOOL bInheritHandle;
};

/* 99 */
typedef struct _FILETIME FILETIME;

/* 98 */
struct _WIN32_FIND_DATAA {
  DWORD dwFileAttributes;
  FILETIME ftCreationTime;
  FILETIME ftLastAccessTime;
  FILETIME ftLastWriteTime;
  DWORD nFileSizeHigh;
  DWORD nFileSizeLow;
  DWORD dwReserved0;
  DWORD dwReserved1;
  CHAR cFileName[260];
  CHAR cAlternateFileName[14];
};

/* 100 */
struct _MEMORYSTATUS {
  DWORD dwLength;
  DWORD dwMemoryLoad;
  SIZE_T dwTotalPhys;
  SIZE_T dwAvailPhys;
  SIZE_T dwTotalPageFile;
  SIZE_T dwAvailPageFile;
  SIZE_T dwTotalVirtual;
  SIZE_T dwAvailVirtual;
};

/* 102 */
typedef struct HDC__ *HDC;

/* 101 */
struct tagPAINTSTRUCT {
  HDC hdc;
  BOOL fErase;
  RECT rcPaint;
  BOOL fRestore;
  BOOL fIncUpdate;
  BYTE rgbReserved[32];
};

/* 103 */
struct HDC__ {
  int unused;
};

/* 104 */
struct tagWNDCLASSA {
  UINT style;
  WNDPROC lpfnWndProc;
  int cbClsExtra;
  int cbWndExtra;
  HINSTANCE hInstance;
  HICON hIcon;
  HCURSOR hCursor;
  HBRUSH hbrBackground;
  LPCSTR lpszMenuName;
  LPCSTR lpszClassName;
};

/* 105 */
struct tagPALETTEENTRY {
  BYTE peRed;
  BYTE peGreen;
  BYTE peBlue;
  BYTE peFlags;
};

/* 106 */
struct _PROCESS_INFORMATION {
  HANDLE hProcess;
  HANDLE hThread;
  DWORD dwProcessId;
  DWORD dwThreadId;
};

/* 107 */
typedef struct tagLOGFONTA LOGFONTA;

/* 108 */
struct tagLOGFONTA {
  LONG lfHeight;
  LONG lfWidth;
  LONG lfEscapement;
  LONG lfOrientation;
  LONG lfWeight;
  BYTE lfItalic;
  BYTE lfUnderline;
  BYTE lfStrikeOut;
  BYTE lfCharSet;
  BYTE lfOutPrecision;
  BYTE lfClipPrecision;
  BYTE lfQuality;
  BYTE lfPitchAndFamily;
  CHAR lfFaceName[32];
};

/* 109 */
typedef struct _SHFILEINFOA SHFILEINFOA;

/* 110 */
#pragma pack(push, 1)
struct _SHFILEINFOA {
  HICON hIcon;
  int iIcon;
  DWORD dwAttributes;
  CHAR szDisplayName[260];
  CHAR szTypeName[80];
};
#pragma pack(pop)

/* 112 */
typedef struct tagSTGMEDIUM uSTGMEDIUM;

/* 111 */
typedef uSTGMEDIUM STGMEDIUM;

/* 115 */
typedef struct HBITMAP__ *HBITMAP;

/* 117 */
typedef void *HMETAFILEPICT;

/* 118 */
typedef struct HENHMETAFILE__ *HENHMETAFILE;

/* 120 */
typedef HANDLE HGLOBAL;

/* 113 */
#pragma pack(push, 8)
struct tagSTGMEDIUM {
  DWORD tymed;
#pragma pack(push, 8)
  union {
    HBITMAP hBitmap;
    HMETAFILEPICT hMetaFilePict;
    HENHMETAFILE hEnhMetaFile;
    HGLOBAL hGlobal;
    LPOLESTR lpszFileName;
    IStream *pstm;
    IStorage *pstg;
  };
#pragma pack(pop)
  IUnknown *pUnkForRelease;
};
#pragma pack(pop)

/* 116 */
struct HBITMAP__ {
  int unused;
};

/* 119 */
struct HENHMETAFILE__ {
  int unused;
};

/* 121 */
#pragma pack(push, 8)
struct IStream {
  struct IStreamVtbl *lpVtbl;
};
#pragma pack(pop)

/* 123 */
typedef int HRESULT;

/* 124 */
typedef union _ULARGE_INTEGER ULARGE_INTEGER;

/* 127 */
typedef unsigned __int64 ULONGLONG;

/* 128 */
typedef struct tagSTATSTG STATSTG;

/* 122 */
#pragma pack(push, 8)
struct IStreamVtbl {
  HRESULT(__stdcall *QueryInterface)
  (IStream *This, const IID *const riid, void **ppvObject);
  ULONG(__stdcall *AddRef)(IStream *This);
  ULONG(__stdcall *Release)(IStream *This);
  HRESULT(__stdcall *Read)(IStream *This, void *pv, ULONG cb, ULONG *pcbRead);
  HRESULT(__stdcall *Write)
  (IStream *This, const void *pv, ULONG cb, ULONG *pcbWritten);
  HRESULT(__stdcall *Seek)
  (IStream *This, LARGE_INTEGER dlibMove, DWORD dwOrigin,
   ULARGE_INTEGER *plibNewPosition);
  HRESULT(__stdcall *SetSize)(IStream *This, ULARGE_INTEGER libNewSize);
  HRESULT(__stdcall *CopyTo)
  (IStream *This, IStream *pstm, ULARGE_INTEGER cb, ULARGE_INTEGER *pcbRead,
   ULARGE_INTEGER *pcbWritten);
  HRESULT(__stdcall *Commit)(IStream *This, DWORD grfCommitFlags);
  HRESULT(__stdcall *Revert)(IStream *This);
  HRESULT(__stdcall *LockRegion)
  (IStream *This, ULARGE_INTEGER libOffset, ULARGE_INTEGER cb,
   DWORD dwLockType);
  HRESULT(__stdcall *UnlockRegion)
  (IStream *This, ULARGE_INTEGER libOffset, ULARGE_INTEGER cb,
   DWORD dwLockType);
  HRESULT(__stdcall *Stat)(IStream *This, STATSTG *pstatstg, DWORD grfStatFlag);
  HRESULT(__stdcall *Clone)(IStream *This, IStream **ppstm);
};
#pragma pack(pop)

/* 129 */
#pragma pack(push, 8)
struct tagSTATSTG {
  LPOLESTR pwcsName;
  DWORD type;
  ULARGE_INTEGER cbSize;
  FILETIME mtime;
  FILETIME ctime;
  FILETIME atime;
  DWORD grfMode;
  DWORD grfLocksSupported;
  CLSID clsid;
  DWORD grfStateBits;
  DWORD reserved;
};
#pragma pack(pop)

/* 130 */
#pragma pack(push, 8)
struct IStorage {
  struct IStorageVtbl *lpVtbl;
};
#pragma pack(pop)

/* 132 */
typedef LPOLESTR *SNB;

/* 131 */
#pragma pack(push, 8)
struct IStorageVtbl {
  HRESULT(__stdcall *QueryInterface)
  (IStorage *This, const IID *const riid, void **ppvObject);
  ULONG(__stdcall *AddRef)(IStorage *This);
  ULONG(__stdcall *Release)(IStorage *This);
  HRESULT(__stdcall *CreateStream)
  (IStorage *This, const OLECHAR *pwcsName, DWORD grfMode, DWORD reserved1,
   DWORD reserved2, IStream **ppstm);
  HRESULT(__stdcall *OpenStream)
  (IStorage *This, const OLECHAR *pwcsName, void *reserved1, DWORD grfMode,
   DWORD reserved2, IStream **ppstm);
  HRESULT(__stdcall *CreateStorage)
  (IStorage *This, const OLECHAR *pwcsName, DWORD grfMode, DWORD reserved1,
   DWORD reserved2, IStorage **ppstg);
  HRESULT(__stdcall *OpenStorage)
  (IStorage *This, const OLECHAR *pwcsName, IStorage *pstgPriority,
   DWORD grfMode, SNB snbExclude, DWORD reserved, IStorage **ppstg);
  HRESULT(__stdcall *CopyTo)
  (IStorage *This, DWORD ciidExclude, const IID *rgiidExclude, SNB snbExclude,
   IStorage *pstgDest);
  HRESULT(__stdcall *MoveElementTo)
  (IStorage *This, const OLECHAR *pwcsName, IStorage *pstgDest,
   const OLECHAR *pwcsNewName, DWORD grfFlags);
  HRESULT(__stdcall *Commit)(IStorage *This, DWORD grfCommitFlags);
  HRESULT(__stdcall *Revert)(IStorage *This);
  HRESULT(__stdcall *EnumElements)
  (IStorage *This, DWORD reserved1, void *reserved2, DWORD reserved3,
   IEnumSTATSTG **ppenum);
  HRESULT(__stdcall *DestroyElement)(IStorage *This, const OLECHAR *pwcsName);
  HRESULT(__stdcall *RenameElement)
  (IStorage *This, const OLECHAR *pwcsOldName, const OLECHAR *pwcsNewName);
  HRESULT(__stdcall *SetElementTimes)
  (IStorage *This, const OLECHAR *pwcsName, const FILETIME *pctime,
   const FILETIME *patime, const FILETIME *pmtime);
  HRESULT(__stdcall *SetClass)(IStorage *This, const IID *const clsid);
  HRESULT(__stdcall *SetStateBits)
  (IStorage *This, DWORD grfStateBits, DWORD grfMask);
  HRESULT(__stdcall *Stat)
  (IStorage *This, STATSTG *pstatstg, DWORD grfStatFlag);
};
#pragma pack(pop)

/* 133 */
#pragma pack(push, 8)
struct IEnumSTATSTG {
  struct IEnumSTATSTGVtbl *lpVtbl;
};
#pragma pack(pop)

/* 134 */
#pragma pack(push, 8)
struct IEnumSTATSTGVtbl {
  HRESULT(__stdcall *QueryInterface)
  (IEnumSTATSTG *This, const IID *const riid, void **ppvObject);
  ULONG(__stdcall *AddRef)(IEnumSTATSTG *This);
  ULONG(__stdcall *Release)(IEnumSTATSTG *This);
  HRESULT(__stdcall *Next)
  (IEnumSTATSTG *This, ULONG celt, STATSTG *rgelt, ULONG *pceltFetched);
  HRESULT(__stdcall *Skip)(IEnumSTATSTG *This, ULONG celt);
  HRESULT(__stdcall *Reset)(IEnumSTATSTG *This);
  HRESULT(__stdcall *Clone)(IEnumSTATSTG *This, IEnumSTATSTG **ppenum);
};
#pragma pack(pop)

/* 135 */
#pragma pack(push, 8)
struct IUnknown {
  struct IUnknownVtbl *lpVtbl;
};
#pragma pack(pop)

/* 136 */
#pragma pack(push, 8)
struct IUnknownVtbl {
  HRESULT(__stdcall *QueryInterface)
  (IUnknown *This, const IID *const riid, void **ppvObject);
  ULONG(__stdcall *AddRef)(IUnknown *This);
  ULONG(__stdcall *Release)(IUnknown *This);
};
#pragma pack(pop)

/* 138 */
typedef struct tagVARIANT VARIANT;

/* 137 */
typedef VARIANT VARIANTARG;

/* 142 */
typedef unsigned __int16 VARTYPE;

/* 144 */
typedef float FLOAT;

/* 145 */
typedef double DOUBLE;

/* 146 */
typedef __int16 VARIANT_BOOL;

/* 147 */
typedef LONG SCODE;

/* 148 */
typedef double DATE;

/* 149 */
typedef OLECHAR *BSTR;

/* 206 */
typedef struct tagSAFEARRAY SAFEARRAY;

/* 165 */
typedef unsigned __int16 USHORT;

/* 195 */
typedef int INT;

/* 208 */
typedef struct tagDEC DECIMAL;

/* 209 */
struct tagDEC {
  USHORT wReserved;
  union {
    struct {
      BYTE scale;
      BYTE sign;
    };
    USHORT signscale;
  };
  ULONG Hi32;
  union {
    struct {
      ULONG Lo32;
      ULONG Mid32;
    };
    ULONGLONG Lo64;
  };
};

/* 139 */
#pragma pack(push, 8)
struct tagVARIANT {
#pragma pack(push, 8)
  union {
#pragma pack(push, 8)
    struct {
      VARTYPE vt;
      WORD wReserved1;
      WORD wReserved2;
      WORD wReserved3;
#pragma pack(push, 8)
      union {
        LONGLONG llVal;
        LONG lVal;
        BYTE bVal;
        SHORT iVal;
        FLOAT fltVal;
        DOUBLE dblVal;
        VARIANT_BOOL boolVal;
        SCODE scode;
        CY cyVal;
        DATE date;
        BSTR bstrVal;
        IUnknown *punkVal;
        IDispatch *pdispVal;
        SAFEARRAY *parray;
        BYTE *pbVal;
        SHORT *piVal;
        LONG *plVal;
        LONGLONG *pllVal;
        FLOAT *pfltVal;
        DOUBLE *pdblVal;
        VARIANT_BOOL *pboolVal;
        SCODE *pscode;
        CY *pcyVal;
        DATE *pdate;
        BSTR *pbstrVal;
        IUnknown **ppunkVal;
        IDispatch **ppdispVal;
        SAFEARRAY **pparray;
        VARIANT *pvarVal;
        PVOID byref;
        CHAR cVal;
        USHORT uiVal;
        ULONG ulVal;
        ULONGLONG ullVal;
        INT intVal;
        UINT uintVal;
        DECIMAL *pdecVal;
        CHAR *pcVal;
        USHORT *puiVal;
        ULONG *pulVal;
        ULONGLONG *pullVal;
        INT *pintVal;
        UINT *puintVal;
#pragma pack(push, 8)
        struct {
          PVOID pvRecord;
          IRecordInfo *pRecInfo;
        };
#pragma pack(pop)
      };
#pragma pack(pop)
    };
#pragma pack(pop)
    DECIMAL decVal;
  };
#pragma pack(pop)
};
#pragma pack(pop)

/* 150 */
#pragma pack(push, 8)
struct IDispatch {
  struct IDispatchVtbl *lpVtbl;
};
#pragma pack(pop)

/* 152 */
typedef DWORD LCID;

/* 158 */
typedef LONG DISPID;

/* 196 */
typedef struct tagDISPPARAMS DISPPARAMS;

/* 198 */
typedef struct tagEXCEPINFO EXCEPINFO;

/* 151 */
#pragma pack(push, 8)
struct IDispatchVtbl {
  HRESULT(__stdcall *QueryInterface)
  (IDispatch *This, const IID *const riid, void **ppvObject);
  ULONG(__stdcall *AddRef)(IDispatch *This);
  ULONG(__stdcall *Release)(IDispatch *This);
  HRESULT(__stdcall *GetTypeInfoCount)(IDispatch *This, UINT *pctinfo);
  HRESULT(__stdcall *GetTypeInfo)
  (IDispatch *This, UINT iTInfo, LCID lcid, ITypeInfo **ppTInfo);
  HRESULT(__stdcall *GetIDsOfNames)
  (IDispatch *This, const IID *const riid, LPOLESTR *rgszNames, UINT cNames,
   LCID lcid, DISPID *rgDispId);
  HRESULT(__stdcall *Invoke)
  (IDispatch *This, DISPID dispIdMember, const IID *const riid, LCID lcid,
   WORD wFlags, DISPPARAMS *pDispParams, VARIANT *pVarResult,
   EXCEPINFO *pExcepInfo, UINT *puArgErr);
};
#pragma pack(pop)

/* 153 */
#pragma pack(push, 8)
struct ITypeInfo {
  struct ITypeInfoVtbl *lpVtbl;
};
#pragma pack(pop)

/* 155 */
typedef struct tagTYPEATTR TYPEATTR;

/* 175 */
typedef struct tagFUNCDESC FUNCDESC;

/* 190 */
typedef struct tagVARDESC VARDESC;

/* 157 */
typedef DISPID MEMBERID;

/* 166 */
typedef DWORD HREFTYPE;

/* 187 */
enum tagINVOKEKIND {
  INVOKE_FUNC = 0x1,
  INVOKE_PROPERTYGET = 0x2,
  INVOKE_PROPERTYPUT = 0x4,
  INVOKE_PROPERTYPUTREF = 0x8,
};

/* 186 */
typedef enum tagINVOKEKIND INVOKEKIND;

/* 154 */
#pragma pack(push, 8)
struct ITypeInfoVtbl {
  HRESULT(__stdcall *QueryInterface)
  (ITypeInfo *This, const IID *const riid, void **ppvObject);
  ULONG(__stdcall *AddRef)(ITypeInfo *This);
  ULONG(__stdcall *Release)(ITypeInfo *This);
  HRESULT(__stdcall *GetTypeAttr)(ITypeInfo *This, TYPEATTR **ppTypeAttr);
  HRESULT(__stdcall *GetTypeComp)(ITypeInfo *This, ITypeComp **ppTComp);
  HRESULT(__stdcall *GetFuncDesc)
  (ITypeInfo *This, UINT index, FUNCDESC **ppFuncDesc);
  HRESULT(__stdcall *GetVarDesc)
  (ITypeInfo *This, UINT index, VARDESC **ppVarDesc);
  HRESULT(__stdcall *GetNames)
  (ITypeInfo *This, MEMBERID memid, BSTR *rgBstrNames, UINT cMaxNames,
   UINT *pcNames);
  HRESULT(__stdcall *GetRefTypeOfImplType)
  (ITypeInfo *This, UINT index, HREFTYPE *pRefType);
  HRESULT(__stdcall *GetImplTypeFlags)
  (ITypeInfo *This, UINT index, INT *pImplTypeFlags);
  HRESULT(__stdcall *GetIDsOfNames)
  (ITypeInfo *This, LPOLESTR *rgszNames, UINT cNames, MEMBERID *pMemId);
  HRESULT(__stdcall *Invoke)
  (ITypeInfo *This, PVOID pvInstance, MEMBERID memid, WORD wFlags,
   DISPPARAMS *pDispParams, VARIANT *pVarResult, EXCEPINFO *pExcepInfo,
   UINT *puArgErr);
  HRESULT(__stdcall *GetDocumentation)
  (ITypeInfo *This, MEMBERID memid, BSTR *pBstrName, BSTR *pBstrDocString,
   DWORD *pdwHelpContext, BSTR *pBstrHelpFile);
  HRESULT(__stdcall *GetDllEntry)
  (ITypeInfo *This, MEMBERID memid, INVOKEKIND invKind, BSTR *pBstrDllName,
   BSTR *pBstrName, WORD *pwOrdinal);
  HRESULT(__stdcall *GetRefTypeInfo)
  (ITypeInfo *This, HREFTYPE hRefType, ITypeInfo **ppTInfo);
  HRESULT(__stdcall *AddressOfMember)
  (ITypeInfo *This, MEMBERID memid, INVOKEKIND invKind, PVOID *ppv);
  HRESULT(__stdcall *CreateInstance)
  (ITypeInfo *This, IUnknown *pUnkOuter, const IID *const riid, PVOID *ppvObj);
  HRESULT(__stdcall *GetMops)(ITypeInfo *This, MEMBERID memid, BSTR *pBstrMops);
  HRESULT(__stdcall *GetContainingTypeLib)
  (ITypeInfo *This, ITypeLib **ppTLib, UINT *pIndex);
  void(__stdcall *ReleaseTypeAttr)(ITypeInfo *This, TYPEATTR *pTypeAttr);
  void(__stdcall *ReleaseFuncDesc)(ITypeInfo *This, FUNCDESC *pFuncDesc);
  void(__stdcall *ReleaseVarDesc)(ITypeInfo *This, VARDESC *pVarDesc);
};
#pragma pack(pop)

/* 160 */
enum tagTYPEKIND {
  TKIND_ENUM = 0x0,
  TKIND_RECORD = 0x1,
  TKIND_MODULE = 0x2,
  TKIND_INTERFACE = 0x3,
  TKIND_DISPATCH = 0x4,
  TKIND_COCLASS = 0x5,
  TKIND_ALIAS = 0x6,
  TKIND_UNION = 0x7,
  TKIND_MAX = 0x8,
};

/* 159 */
typedef enum tagTYPEKIND TYPEKIND;

/* 162 */
#pragma pack(push, 8)
struct tagTYPEDESC {
#pragma pack(push, 8)
  union {
    struct tagTYPEDESC *lptdesc;
    struct tagARRAYDESC *lpadesc;
    HREFTYPE hreftype;
  };
#pragma pack(pop)
  VARTYPE vt;
};
#pragma pack(pop)

/* 161 */
typedef struct tagTYPEDESC TYPEDESC;

/* 168 */
#pragma pack(push, 8)
struct tagIDLDESC {
  ULONG_PTR dwReserved;
  USHORT wIDLFlags;
};
#pragma pack(pop)

/* 167 */
typedef struct tagIDLDESC IDLDESC;

/* 156 */
#pragma pack(push, 8)
struct tagTYPEATTR {
  GUID guid;
  LCID lcid;
  DWORD dwReserved;
  MEMBERID memidConstructor;
  MEMBERID memidDestructor;
  LPOLESTR lpstrSchema;
  ULONG cbSizeInstance;
  TYPEKIND typekind;
  WORD cFuncs;
  WORD cVars;
  WORD cImplTypes;
  WORD cbSizeVft;
  WORD cbAlignment;
  WORD wTypeFlags;
  WORD wMajorVerNum;
  WORD wMinorVerNum;
  TYPEDESC tdescAlias;
  IDLDESC idldescType;
};
#pragma pack(pop)

/* 164 */
#pragma pack(push, 8)
struct tagARRAYDESC {
  TYPEDESC tdescElem;
  USHORT cDims;
  SAFEARRAYBOUND rgbounds[1];
};
#pragma pack(pop)

/* 169 */
#pragma pack(push, 8)
struct ITypeComp {
  struct ITypeCompVtbl *lpVtbl;
};
#pragma pack(pop)

/* 172 */
enum tagDESCKIND {
  DESCKIND_NONE = 0x0,
  DESCKIND_FUNCDESC = 0x1,
  DESCKIND_VARDESC = 0x2,
  DESCKIND_TYPECOMP = 0x3,
  DESCKIND_IMPLICITAPPOBJ = 0x4,
  DESCKIND_MAX = 0x5,
};

/* 171 */
typedef enum tagDESCKIND DESCKIND;

/* 173 */
typedef union tagBINDPTR BINDPTR;

/* 170 */
#pragma pack(push, 8)
struct ITypeCompVtbl {
  HRESULT(__stdcall *QueryInterface)
  (ITypeComp *This, const IID *const riid, void **ppvObject);
  ULONG(__stdcall *AddRef)(ITypeComp *This);
  ULONG(__stdcall *Release)(ITypeComp *This);
  HRESULT(__stdcall *Bind)
  (ITypeComp *This, LPOLESTR szName, ULONG lHashVal, WORD wFlags,
   ITypeInfo **ppTInfo, DESCKIND *pDescKind, BINDPTR *pBindPtr);
  HRESULT(__stdcall *BindType)
  (ITypeComp *This, LPOLESTR szName, ULONG lHashVal, ITypeInfo **ppTInfo,
   ITypeComp **ppTComp);
};
#pragma pack(pop)

/* 174 */
#pragma pack(push, 8)
union tagBINDPTR {
  FUNCDESC *lpfuncdesc;
  VARDESC *lpvardesc;
  ITypeComp *lptcomp;
};
#pragma pack(pop)

/* 177 */
typedef struct tagELEMDESC ELEMDESC;

/* 185 */
enum tagFUNCKIND {
  FUNC_VIRTUAL = 0x0,
  FUNC_PUREVIRTUAL = 0x1,
  FUNC_NONVIRTUAL = 0x2,
  FUNC_STATIC = 0x3,
  FUNC_DISPATCH = 0x4,
};

/* 184 */
typedef enum tagFUNCKIND FUNCKIND;

/* 189 */
enum tagCALLCONV {
  CC_FASTCALL = 0x0,
  CC_CDECL = 0x1,
  CC_MSCPASCAL = 0x2,
  CC_PASCAL = 0x2,
  CC_MACPASCAL = 0x3,
  CC_STDCALL = 0x4,
  CC_FPFASTCALL = 0x5,
  CC_SYSCALL = 0x6,
  CC_MPWCDECL = 0x7,
  CC_MPWPASCAL = 0x8,
  CC_MAX = 0x9,
};

/* 188 */
typedef enum tagCALLCONV CALLCONV;

/* 182 */
typedef struct tagPARAMDESCEX *LPPARAMDESCEX;

/* 181 */
#pragma pack(push, 8)
struct tagPARAMDESC {
  LPPARAMDESCEX pparamdescex;
  USHORT wParamFlags;
};
#pragma pack(pop)

/* 180 */
typedef struct tagPARAMDESC PARAMDESC;

/* 178 */
#pragma pack(push, 8)
struct tagELEMDESC {
  TYPEDESC tdesc;
#pragma pack(push, 8)
  union {
    IDLDESC idldesc;
    PARAMDESC paramdesc;
  };
#pragma pack(pop)
};
#pragma pack(pop)

/* 176 */
#pragma pack(push, 8)
struct tagFUNCDESC {
  MEMBERID memid;
  SCODE *lprgscode;
  ELEMDESC *lprgelemdescParam;
  FUNCKIND funckind;
  INVOKEKIND invkind;
  CALLCONV callconv;
  SHORT cParams;
  SHORT cParamsOpt;
  SHORT oVft;
  SHORT cScodes;
  ELEMDESC elemdescFunc;
  WORD wFuncFlags;
};
#pragma pack(pop)

/* 183 */
#pragma pack(push, 8)
struct tagPARAMDESCEX {
  ULONG cBytes;
  VARIANTARG varDefaultValue;
};
#pragma pack(pop)

/* 194 */
enum tagVARKIND {
  VAR_PERINSTANCE = 0x0,
  VAR_STATIC = 0x1,
  VAR_CONST = 0x2,
  VAR_DISPATCH = 0x3,
};

/* 193 */
typedef enum tagVARKIND VARKIND;

/* 191 */
#pragma pack(push, 8)
struct tagVARDESC {
  MEMBERID memid;
  LPOLESTR lpstrSchema;
#pragma pack(push, 8)
  union {
    ULONG oInst;
    VARIANT *lpvarValue;
  };
#pragma pack(pop)
  ELEMDESC elemdescVar;
  WORD wVarFlags;
  VARKIND varkind;
};
#pragma pack(pop)

/* 197 */
#pragma pack(push, 8)
struct tagDISPPARAMS {
  VARIANTARG *rgvarg;
  DISPID *rgdispidNamedArgs;
  UINT cArgs;
  UINT cNamedArgs;
};
#pragma pack(pop)

/* 199 */
#pragma pack(push, 8)
struct tagEXCEPINFO {
  WORD wCode;
  WORD wReserved;
  BSTR bstrSource;
  BSTR bstrDescription;
  BSTR bstrHelpFile;
  DWORD dwHelpContext;
  PVOID pvReserved;
  HRESULT(__stdcall *pfnDeferredFillIn)(struct tagEXCEPINFO *);
  SCODE scode;
};
#pragma pack(pop)

/* 200 */
#pragma pack(push, 8)
struct ITypeLib {
  struct ITypeLibVtbl *lpVtbl;
};
#pragma pack(pop)

/* 202 */
typedef struct tagTLIBATTR TLIBATTR;

/* 201 */
#pragma pack(push, 8)
struct ITypeLibVtbl {
  HRESULT(__stdcall *QueryInterface)
  (ITypeLib *This, const IID *const riid, void **ppvObject);
  ULONG(__stdcall *AddRef)(ITypeLib *This);
  ULONG(__stdcall *Release)(ITypeLib *This);
  UINT(__stdcall *GetTypeInfoCount)(ITypeLib *This);
  HRESULT(__stdcall *GetTypeInfo)
  (ITypeLib *This, UINT index, ITypeInfo **ppTInfo);
  HRESULT(__stdcall *GetTypeInfoType)
  (ITypeLib *This, UINT index, TYPEKIND *pTKind);
  HRESULT(__stdcall *GetTypeInfoOfGuid)
  (ITypeLib *This, const GUID *const guid, ITypeInfo **ppTinfo);
  HRESULT(__stdcall *GetLibAttr)(ITypeLib *This, TLIBATTR **ppTLibAttr);
  HRESULT(__stdcall *GetTypeComp)(ITypeLib *This, ITypeComp **ppTComp);
  HRESULT(__stdcall *GetDocumentation)
  (ITypeLib *This, INT index, BSTR *pBstrName, BSTR *pBstrDocString,
   DWORD *pdwHelpContext, BSTR *pBstrHelpFile);
  HRESULT(__stdcall *IsName)
  (ITypeLib *This, LPOLESTR szNameBuf, ULONG lHashVal, BOOL *pfName);
  HRESULT(__stdcall *FindName)
  (ITypeLib *This, LPOLESTR szNameBuf, ULONG lHashVal, ITypeInfo **ppTInfo,
   MEMBERID *rgMemId, USHORT *pcFound);
  void(__stdcall *ReleaseTLibAttr)(ITypeLib *This, TLIBATTR *pTLibAttr);
};
#pragma pack(pop)

/* 205 */
enum tagSYSKIND {
  SYS_WIN16 = 0x0,
  SYS_WIN32 = 0x1,
  SYS_MAC = 0x2,
  SYS_WIN64 = 0x3,
};

/* 204 */
typedef enum tagSYSKIND SYSKIND;

/* 203 */
#pragma pack(push, 8)
struct tagTLIBATTR {
  GUID guid;
  LCID lcid;
  SYSKIND syskind;
  WORD wMajorVerNum;
  WORD wMinorVerNum;
  WORD wLibFlags;
};
#pragma pack(pop)

/* 207 */
#pragma pack(push, 8)
struct tagSAFEARRAY {
  USHORT cDims;
  USHORT fFeatures;
  ULONG cbElements;
  ULONG cLocks;
  PVOID pvData;
  SAFEARRAYBOUND rgsabound[1];
};
#pragma pack(pop)

/* 215 */
#pragma pack(push, 8)
struct IRecordInfo {
  struct IRecordInfoVtbl *lpVtbl;
};
#pragma pack(pop)

/* 217 */
typedef const OLECHAR *LPCOLESTR;

/* 216 */
#pragma pack(push, 8)
struct IRecordInfoVtbl {
  HRESULT(__stdcall *QueryInterface)
  (IRecordInfo *This, const IID *const riid, void **ppvObject);
  ULONG(__stdcall *AddRef)(IRecordInfo *This);
  ULONG(__stdcall *Release)(IRecordInfo *This);
  HRESULT(__stdcall *RecordInit)(IRecordInfo *This, PVOID pvNew);
  HRESULT(__stdcall *RecordClear)(IRecordInfo *This, PVOID pvExisting);
  HRESULT(__stdcall *RecordCopy)
  (IRecordInfo *This, PVOID pvExisting, PVOID pvNew);
  HRESULT(__stdcall *GetGuid)(IRecordInfo *This, GUID *pguid);
  HRESULT(__stdcall *GetName)(IRecordInfo *This, BSTR *pbstrName);
  HRESULT(__stdcall *GetSize)(IRecordInfo *This, ULONG *pcbSize);
  HRESULT(__stdcall *GetTypeInfo)(IRecordInfo *This, ITypeInfo **ppTypeInfo);
  HRESULT(__stdcall *GetField)
  (IRecordInfo *This, PVOID pvData, LPCOLESTR szFieldName, VARIANT *pvarField);
  HRESULT(__stdcall *GetFieldNoCopy)
  (IRecordInfo *This, PVOID pvData, LPCOLESTR szFieldName, VARIANT *pvarField,
   PVOID *ppvDataCArray);
  HRESULT(__stdcall *PutField)
  (IRecordInfo *This, ULONG wFlags, PVOID pvData, LPCOLESTR szFieldName,
   VARIANT *pvarField);
  HRESULT(__stdcall *PutFieldNoCopy)
  (IRecordInfo *This, ULONG wFlags, PVOID pvData, LPCOLESTR szFieldName,
   VARIANT *pvarField);
  HRESULT(__stdcall *GetFieldNames)
  (IRecordInfo *This, ULONG *pcNames, BSTR *rgBstrNames);
  BOOL(__stdcall *IsMatchingType)(IRecordInfo *This, IRecordInfo *pRecordInfo);
  PVOID(__stdcall *RecordCreate)(IRecordInfo *This);
  HRESULT(__stdcall *RecordCreateCopy)
  (IRecordInfo *This, PVOID pvSource, PVOID *ppvDest);
  HRESULT(__stdcall *RecordDestroy)(IRecordInfo *This, PVOID pvRecord);
};
#pragma pack(pop)

/* 218 */
struct FuncInfoV1 {
  int magicNumber;
  int maxState;
  void *pUnwindMap;
  int nTryBlocks;
  void *pTryBlockMap;
  int nIPMapEntries;
  void *pIPtoStateMap;
};

/* 219 */
struct UnwindMapEntry {
  int toState;
  void *action;
};

/* 220 */
struct TryBlockMapEntry {
  int tryLow;
  int tryHigh;
  int catchHigh;
  int nCatches;
  void *pHandlerArray;
};

/* 221 */
struct HandlerType {
  int adjectives;
  void *pType;
  int dispCatchObj;
  void *addressOfHandler;
};

/* 222 */
struct TypeDescriptor {
  void *pVFTable;
  void *spare;
  char name[];
};

/* 224 */
typedef const struct _s_ThrowInfo ThrowInfo;

/* 223 */
typedef ThrowInfo _ThrowInfo;

/* 226 */
typedef void(__cdecl *PMFN)(void *);

/* 227 */
typedef const struct _s_CatchableTypeArray CatchableTypeArray;

/* 225 */
#pragma pack(push, 4)
struct _s_ThrowInfo {
  unsigned int attributes;
  PMFN pmfnUnwind;
  int(__cdecl *pForwardCompat)();
  CatchableTypeArray *pCatchableTypeArray;
};
#pragma pack(pop)

/* 229 */
typedef const struct _s_CatchableType CatchableType;

/* 228 */
#pragma pack(push, 4)
struct _s_CatchableTypeArray {
  int nCatchableTypes;
  CatchableType *arrayOfCatchableTypes[];
};
#pragma pack(pop)

/* 231 */
#pragma pack(push, 4)
struct PMD {
  int mdisp;
  int pdisp;
  int vdisp;
};
#pragma pack(pop)

/* 230 */
#pragma pack(push, 4)
struct _s_CatchableType {
  unsigned int properties;
  TypeDescriptor *pType;
  PMD thisDisplacement;
  int sizeOrOffset;
  PMFN copyFunction;
};
#pragma pack(pop)

/* 232 */
typedef struct _iobuf FILE;

/* 233 */
struct _iobuf {
  char *_ptr;
  int _cnt;
  char *_base;
  int _flag;
  int _file;
  int _charbuf;
  int _bufsiz;
  char *_tmpfname;
};

/* 234 */
#pragma pack(push, 8)
struct tm {
  int tm_sec;
  int tm_min;
  int tm_hour;
  int tm_mday;
  int tm_mon;
  int tm_year;
  int tm_wday;
  int tm_yday;
  int tm_isdst;
};
#pragma pack(pop)

/* 236 */
typedef struct HACCEL__ *HACCEL;

/* 235 */
#pragma pack(push, 8)
struct tagOIFI {
  UINT cb;
  BOOL fMDIApp;
  HWND hwndFrame;
  HACCEL haccel;
  UINT cAccelEntries;
};
#pragma pack(pop)

/* 237 */
struct HACCEL__ {
  int unused;
};

/* 238 */
typedef struct tagMSG MSG;

/* 239 */
struct _OFSTRUCT {
  BYTE cBytes;
  BYTE fFixedDisk;
  WORD nErrCode;
  WORD Reserved1;
  WORD Reserved2;
  CHAR szPathName[128];
};

/* 240 */
struct CTypeLibCache;

/* 241 */
struct CDataBoundProperty;

/* 242 */
struct AFX_EVENT;

/* 419 */
struct _CRT_CRITICAL_SECTION {
  _CRT_CRITICAL_SECTION_DEBUG *DebugInfo;
  int LockCount;
  int RecursionCount;
  void *OwningThread;
  void *LockSemaphore;
  unsigned int Reserved;
};

/* 243 */
struct __cppobj streambuf {
  streambuf_vtbl *__vftable /*VFT*/;
  int _fAlloc;
  int _fUnbuf;
  int x_lastc;
  char *_base;
  char *_ebuf;
  char *_pbase;
  char *_pptr;
  char *_epptr;
  char *_eback;
  char *_gptr;
  char *_egptr;
  int LockFlg;
  _CRT_CRITICAL_SECTION x_lock;
};

/* 244 */
struct ATL::CManualAccessor;

/* 245 */
struct COleControlLock;

/* 246 */
struct Concurrency::details::SchedulerProxy;

/* 247 */
struct type_info;

/* 248 */
struct Concurrency::details::UMSFreeVirtualProcessorRoot;

/* 249 */
struct exception;

/* 250 */
struct Concurrency::details::platform;

/* 251 */
#pragma pack(push, 8)
struct __cppobj ios {
  ios_vtbl *__vftable /*VFT*/;
  streambuf *bp;
  int state;
  int ispecial;
  int ospecial;
  int isfx_special;
  int osfx_special;
  int x_delbuf;
  ostream *x_tie;
  __int32 x_flags;
  int x_precision;
  char x_fill;
  int x_width;
};
#pragma pack(pop)

/* 252 */
#pragma pack(push, 8)
struct __cppobj istream : virtual ios {
  int _fGline;
  int x_gcount;
};
#pragma pack(pop)

/* 253 */
struct Concurrency::details::_CancellationTokenRegistration;

/* 254 */
struct Concurrency::details::ExecutionResource;

/* 255 */
struct CPaneContainer;

/* 256 */
struct strstreambuf;

/* 257 */
struct CColorDialog;

/* 258 */
struct COlePropertyPage::XPropNotifySink;

/* 259 */
struct CWinApp;

/* 260 */
struct std::_Ref_count_base;

/* 261 */
struct CCmdTarget;

/* 262 */
struct CCmdUI;

/* 263 */
struct CException;

/* 264 */
struct Concurrency::details::UMSFreeVirtualProcessorRoot::InitialThreadParam;

/* 265 */
struct CDC;

/* 266 */
struct CSingleDocTemplate;

/* 267 */
struct CRect;

/* 268 */
struct Concurrency::details::VirtualProcessor;

/* 269 */
struct CMFCToolBarImages;

/* 270 */
struct ATL::CComVariant;

/* 271 */
struct CLongBinary;

/* 272 */
struct _AFX_OLE_STATE;

/* 273 */
struct CWinThread;

/* 274 */
struct CDockBar;

/* 275 */
struct CMemoryException;

/* 276 */
struct CNotSupportedException;

/* 277 */
struct _AFX_PROPPAGEFONTINFO;

/* 278 */
struct CMFCRibbonPanel;

/* 279 */
struct COleDialog;

/* 280 */
struct COleDataSource::XDataObject;

/* 281 */
struct COleDropSource;

/* 282 */
struct COleDropSource::XDropSource;

/* 283 */
struct COleServerDoc;

/* 284 */
struct COleServerItem::XOleObject;

/* 285 */
struct COleDispatchDriver;

/* 286 */
struct CPrintPreviewState;

/* 287 */
struct CPreviewView::PAGE_INFO;

/* 288 */
struct CMetaFileDC;

/* 289 */
#pragma pack(push, 8)
struct __cppobj ostream : virtual ios {
  int x_floatused;
};
#pragma pack(pop)

/* 290 */
struct filebuf;

/* 291 */
struct _AFX_COLOR_STATE;

/* 292 */
struct CFileStatus;

/* 293 */
struct _AFX_CONTROLPOS;

/* 294 */
struct CDaoIndexFieldInfo;

/* 295 */
struct CNewTypeDlg;

/* 296 */
struct fstream;

/* 297 */
struct CSimpleList;

/* 298 */
struct AFX_CLASSINIT;

/* 299 */
struct CEnumUnknown;

/* 300 */
struct CHandleMap;

/* 301 */
struct CTypeLibCacheMap;

/* 302 */
struct COleCmdUI;

/* 303 */
struct Concurrency::scheduler_worker_creation_error;

/* 304 */
struct __non_rtti_object;

/* 305 */
struct bad_typeid;

/* 306 */
struct bad_cast;

/* 307 */
struct __cppobj ostream_withassign : ostream {};

/* 308 */
#pragma pack(push, 8)
struct __cppobj istream_withassign : istream {};
#pragma pack(pop)

/* 309 */
struct istrstream;

/* 310 */
struct ostrstream;

/* 311 */
struct strstream;

/* 312 */
struct ofstream;

/* 313 */
struct ifstream;

/* 314 */
#pragma pack(push, 8)
struct __cppobj iostream : istream, ostream {};
#pragma pack(pop)

/* 315 */
struct CSimpleException;

/* 316 */
struct _AFX_DEBUG_STATE;

/* 317 */
struct CTraceClipboardData;

/* 318 */
struct CFileDialog;

/* 319 */
struct Concurrency::details::_NonReentrantPPLLock;

/* 320 */
struct CFormView;

/* 321 */
typedef struct tagWNDCLASSA WNDCLASSA;

/* 322 */
typedef struct tagSCROLLINFO SCROLLINFO;

/* 323 */
struct tagSCROLLINFO {
  UINT cbSize;
  UINT fMask;
  int nMin;
  int nMax;
  UINT nPage;
  int nPos;
  int nTrackPos;
};

/* 324 */
struct CString;

/* 325 */
struct AUX_DATA;

/* 326 */
struct CFile;

/* 327 */
struct CMemFile;

/* 328 */
struct CMirrorFile;

/* 329 */
struct CCtrlView;

/* 330 */
struct std::ios_base;

/* 331 */
struct CArchiveException;

/* 332 */
struct CDocManager;

/* 333 */
struct CStatusBar;

/* 334 */
struct CMiniDockFrameWnd;

/* 335 */
struct CSharedFile;

/* 336 */
struct CSessionMapPtrToPtr;

/* 337 */
struct CBitmapButton;

/* 338 */
struct _AFX_BASE_MODULE_STATE;

/* 339 */
struct _AFX_WIN_STATE;

/* 340 */
struct _AFX_CTL3D_STATE;

/* 341 */
struct _AFX_CTL3D_THREAD;

/* 342 */
struct COleObjectFactory;

/* 343 */
struct COleMessageFilter;

/* 344 */
struct COleBusyDialog;

/* 345 */
struct COleDataSource;

/* 346 */
struct CPrintingDialog;

/* 347 */
enum AlphaZSpriteBlitter::PixelType {
  kP16_565 = 2,
};

/* 348 */
#pragma pack(push, 1)
struct ObjectDefinition {
  _DWORD field_0;
  _BYTE gap_4[14];
  _WORD type;
  _BYTE gap_14[62];
  __int16 field_52;
  _BYTE gap_54[54];
  _WORD buildModeType;
  _BYTE gap_8C[42];
  _DWORD field_B6;
};
#pragma pack(pop)

/* 349 */
struct /*VFT*/ TreeTable_vtbl {
  int(__stdcall *sub_40F682)(int a1);
};

/* 350 */
struct __unaligned __declspec(align(2)) TreeTable {
  TreeTable_vtbl *__vftable /*VFT*/;
  int fNumEntries;
  int fNumAds;
  char field_C;
  _BYTE gap_D[3];
  int field_10;
  int field_14;
  __int16 field_18;
};

/* 351 */
struct /*VFT*/ StringSet_vtbl {
  int(__stdcall *sub_40344A)(int a1);
};

/* 352 */
#pragma pack(push, 1)
struct StringSet {
  StringSet_vtbl *__vftable /*VFT*/;
  int field_4;
  _BYTE field_8[72];
  __int16 field_50;
  _BYTE gap_52[2];
  int field_54;
  char field_58;
  char field_59;
  _BYTE gap_5A[2];
  _BYTE field_5C;
};
#pragma pack(pop)

/* 353 */
struct _PMD {
  int mdisp;
  int pdisp;
  int vdisp;
};

/* 354 */
struct _RTTIClassHierarchyDescriptor {
  int signature;
  int attributes;
  int numBaseClasses;
  void *baseClassArray;
};

/* 355 */
struct _RTTIBaseClassDescriptor {
  void *typeDescriptor;
  int numContainedBases;
  _PMD pmd;
  int attributes;
};

/* 356 */
struct _RTTICompleteObjectLocator {
  int signature;
  int offset;
  int cdOffset;
  void *typeDescriptor;
  void *classDescriptor;
};

/* 357 */
#pragma pack(push, 1)
struct bstring {
  _DWORD field_0;
  basic_string_ref<char> *field_4;
};
#pragma pack(pop)

/* 358 */
#pragma pack(push, 1)
struct basic_string_ref {
  _DWORD field_0;
  int field_4;
  int field_8;
  int field_C;
};
#pragma pack(pop)

/* 359 */
typedef unsigned __int16 wint_t;

/* 360 */
typedef unsigned __int16 wctype_t;

/* 361 */
typedef int ptrdiff_t;

/* 362 */
typedef int (*_onexit_t)(void);

/* 363 */
#pragma pack(push, 8)
struct _div_t {
  int quot;
  int rem;
};
#pragma pack(pop)

/* 364 */
typedef _div_t div_t;

/* 365 */
#pragma pack(push, 8)
struct _ldiv_t {
  __int32 quot;
  __int32 rem;
};
#pragma pack(pop)

/* 366 */
typedef _ldiv_t ldiv_t;

/* 367 */
typedef int streamoff;

/* 368 */
typedef int streampos;

/* 369 */
struct /*VFT*/ ios_vtbl {
  void(__thiscall * ~ios)(ios *this);
};

/* 370 */
enum ios::seek_dir : __int32 {
  beg = 0x0,
  cur = 0x1,
  end = 0x2,
};

/* 371 */
struct /*VFT*/ streambuf_vtbl {
  void(__thiscall * ~streambuf)(streambuf *this);
  int(__thiscall *sync)(streambuf *this);
  streambuf *(__thiscall *setbuf)(streambuf *this, char *, int);
  int(__thiscall *seekoff)(streambuf *this, int, ios::seek_dir, int);
  int(__thiscall *seekpos)(streambuf *this, int, int);
  int(__thiscall *xsputn)(streambuf *this, const char *, int);
  int(__thiscall *xsgetn)(streambuf *this, char *, int);
  int(__thiscall *overflow)(streambuf *this, int);
  int(__thiscall *underflow)(streambuf *this);
  int(__thiscall *pbackfail)(streambuf *this, int);
  int(__thiscall *doallocate)(streambuf *this);
};

/* 372 */
#pragma pack(push, 8)
struct __cppobj Iostream_init {};
#pragma pack(pop)

/* 373 */
struct input_iterator_tag {};

/* 374 */
struct output_iterator_tag {};

/* 375 */
struct forward_iterator_tag {};

/* 376 */
struct bidirectional_iterator_tag {};

/* 377 */
struct __cppobj random_access_iterator_tag {};

/* 378 */
struct output_iterator {};

/* 379 */
typedef void (*new_handler)(void);

/* 427 */
typedef unsigned int size_t;

/* 380 */
typedef int(__cdecl *_PNH)(size_t);

/* 381 */
struct __cppobj allocator<void> {};

/* 382 */
enum capacity : __int32 {
  default_size = 0x0,
  reserve = 0x1,
};

/* 383 */
struct __cppobj string_char_baggage<char> {};

/* 384 */
typedef char string_char_baggage<char>::char_type;

/* 405 */
typedef basic_string_ref<char> *basic_string<char>::reference_pointer;

/* 385 */
struct __cppobj basic_string<char> {
  char *c_str_ptr;
  basic_string<char>::reference_pointer reference;
};

/* 387 */
typedef char *allocator<char>::pointer;

/* 388 */
typedef allocator<char>::pointer vector<char>::iterator;

/* 386 */
struct __cppobj vector<char> {
  vector<char>::iterator start;
  vector<char>::iterator finish;
  vector<char>::iterator end_of_storage;
};

/* 389 */
typedef char *allocator<char>::const_pointer;

/* 390 */
typedef allocator<char>::const_pointer vector<char>::const_iterator;

/* 392 */
struct random_access_iterator<char, int> {};

/* 391 */
struct __cppobj reverse_iterator<char *, char, char &, int>
    : random_access_iterator<char, int> {
  char *current;
};

/* 393 */
typedef reverse_iterator<char *, char, char &, int>
    reverse_iterator<char *, char, char &, int>::self;

/* 394 */
typedef reverse_iterator<char *, char, char &, int>
    vector<char>::reverse_iterator;

/* 395 */
struct __cppobj reverse_iterator<const char *, char, const char &, int>
    : random_access_iterator<char, int> {
  const char *current;
};

/* 396 */
typedef reverse_iterator<const char *, char, const char &, int>
    reverse_iterator<const char *, char, const char &, int>::self;

/* 397 */
typedef reverse_iterator<const char *, char, const char &, int>
    vector<char>::const_reverse_iterator;

/* 398 */
typedef size_t allocator<char>::size_type;

/* 399 */
typedef allocator<char>::size_type vector<char>::size_type;

/* 400 */
typedef char *allocator<char>::reference;

/* 401 */
typedef allocator<char>::reference vector<char>::reference;

/* 402 */
typedef char *allocator<char>::const_reference;

/* 403 */
typedef allocator<char>::const_reference vector<char>::const_reference;

/* 404 */
struct __cppobj basic_string_ref<char> {
  char *ptr;
  size_t len;
  size_t res;
  size_t count;
};

/* 406 */
typedef basic_string<char> cstring;

/* 407 */
typedef basic_string<char> string;

/* 408 */
typedef struct tagMODULEENTRY32 MODULEENTRY32;

/* 410 */
typedef HINSTANCE HMODULE;

/* 409 */
struct tagMODULEENTRY32 {
  DWORD dwSize;
  DWORD th32ModuleID;
  DWORD th32ProcessID;
  DWORD GlblcntUsage;
  DWORD ProccntUsage;
  BYTE *modBaseAddr;
  DWORD modBaseSize;
  HMODULE hModule;
  char szModule[256];
  char szExePath[260];
};

/* 411 */
enum std::_Uninitialized : __int32 {
  _Noinit = 0x0,
};

/* 412 */
enum ios::io_state : __int32 {
  goodbit = 0x0,
  eofbit = 0x1,
  failbit = 0x2,
  badbit = 0x4,
};

/* 413 */
enum ios::open_mode : __int32 {
  in = 0x1,
  out = 0x2,
  ate = 0x4,
  app = 0x8,
  trunc = 0x10,
  nocreate = 0x20,
  noreplace = 0x40,
  binary = 0x80,
};

/* 414 */
enum $293D9E1A693412C16EF8A8E66AF72A55 : __int32 {};

/* 415 */
enum $A53895B26F1AB238F5D10DD3542A1DE0 : __int32 {};

/* 416 */
const struct __cppobj allocator<char> {};

/* 417 */
struct __cppobj std::ios_base::Init {};

/* 418 */
struct __cppobj std::_Winit {};

/* 420 */
struct __CRT_LIST_ENTRY {
  __CRT_LIST_ENTRY *Flink;
  __CRT_LIST_ENTRY *Blink;
};

/* 421 */
struct _CRT_CRITICAL_SECTION_DEBUG {
  unsigned __int16 Type;
  unsigned __int16 CreatorBackTraceIndex;
  _CRT_CRITICAL_SECTION *CriticalSection;
  __CRT_LIST_ENTRY ProcessLocksList;
  unsigned int EntryCount;
  unsigned int ContentionCount;
  unsigned int Depth;
  void *OwnerBackTrace[5];
};

/* 422 */
typedef unsigned __int8 _Bool;

/* 423 */
typedef int _off_t;

/* 424 */
typedef char *va_list;

/* 425 */
typedef int streamsize;

/* 426 */
typedef int time_t;

/* 428 */
typedef __int64 fpos_t;

/* 429 */
typedef unsigned int _dev_t;

/* 430 */
typedef unsigned int _fsize_t;

/* 431 */
typedef int mbstate_t;

/* 432 */
typedef unsigned __int8 bool;

/* 433 */
typedef unsigned __int16 _ino_t;

/* 434 */
struct /*VFT*/ cRZString_vtbl {
  char *(__thiscall *sub_40F178)(char *this, char a2);
  size_t(__thiscall *sub_888D60)(int this);
  size_t(__thiscall *sub_888DF0)(int this);
  int(__thiscall *sub_888E80)(void *this);
};

/* 435 */
struct cRZString {
  cRZString_vtbl *__vftable /*VFT*/;
  basic_string<char> str;
  int field_C;
};

/* 436 */
struct /*VFT*/ ostream_vtbl {
  void(__thiscall * ~ostream)(ostream *this);
};

/* 437 */
struct /*VFT*/ ostream_withassign_vtbl {
  void(__thiscall * ~ostream_withassign)(ostream_withassign *this);
};

/* 438 */
struct /*VFT*/ istream_vtbl {
  void(__thiscall * ~istream)(istream *this);
};

/* 439 */
enum _293D9E1A693412C16EF8A8E66AF72A55 : __int32 {
  skipws = 0x1,
  left = 0x2,
  right = 0x4,
  internal = 0x8,
  dec = 0x10,
  oct = 0x20,
  hex = 0x40,
  showbase = 0x80,
  showpoint = 0x100,
  uppercase = 0x200,
  showpos = 0x400,
  scientific = 0x800,
  fixed = 0x1000,
  unitbuf = 0x2000,
  stdio = 0x4000,
};

/* 440 */
enum _A53895B26F1AB238F5D10DD3542A1DE0 : __int32 {
  skipping = 0x0,
  tied = 0x1,
};

/* 441 */
typedef _293D9E1A693412C16EF8A8E66AF72A55 $94C30B5E87D2030C8855BA9FB73F4120;

/* 442 */
typedef _A53895B26F1AB238F5D10DD3542A1DE0 $9AEE1B0C7E095F81E0C69875BEA21555;

/* 443 */
const struct __cppobj allocator<basic_string<char>> {};

/* 444 */
const struct __cppobj vector<basic_string<char>> {
  basic_string<char> *start;
  basic_string<char> *finish;
  basic_string<char> *end_of_storage;
};

/* 445 */
struct /*VFT*/ cRZCmdLine_vtbl {
  int(__stdcall *sub_40BA0A)(int a1);
  int(__stdcall *sub_405D30)(int a1);
  void(__thiscall *sub_404C55)(cRZCmdLine *, int);
  int(__stdcall *sub_40434A)();
  unsigned int(__thiscall *sub_8ED8C0)(int this, char *Str1);
};

/* 446 */
struct cRZCmdLine {
  cRZCmdLine_vtbl *__vftable /*VFT*/;
  vector<basic_string<char>> args;
  cRZString cmdLine;
};

/* 447 */
struct /*VFT*/ cGZApp_vtbl {
  int(__stdcall *cGZApp_vtbl_func_0)(int a1);
  int(__stdcall *cGZApp_vtbl_func_1)();
  char(__stdcall *cGZApp_vtbl_func_2)();
  char(__stdcall *cGZApp_vtbl_func_3)();
  char(__stdcall *cGZApp_vtbl_func_4)();
  char(__stdcall *cGZApp_vtbl_func_5)();
  int(__stdcall *cGZApp_vtbl_func_6)();
  void(__stdcall __noreturn *__purecall)();
  void *(__stdcall *duplicate_7_1)();
  void *(__stdcall *duplicate_7_2)();
  char(__fastcall *gzapp_008f90c6)(int a1, int a2);
  void *(__stdcall *duplicate_7_3)();
  void *(__stdcall *duplicate_7_4)();
  void *(__stdcall *duplicate_7_5)();
  void *(__stdcall *duplicate_7_6)();
  void *(__stdcall *duplicate_7_7)();
  void *(__stdcall *duplicate_7_8)();
};

/* 448 */
struct /*VFT*/ cSimsApp_vtbl {
  int(__thiscall *cSimsApp_vtbl_func_0)(_DWORD *this);
  int(__stdcall *cSimsApp_vtbl_func_1)(char a1);
  char(__thiscall *j_SimsApp_0063f99d)(cSimsApp *this);
  int(__stdcall *cSimsApp_vtbl_func_3)(int a1);
  int(__stdcall *cSimsApp_vtbl_func_4)();
  int(__stdcall *cSimsApp_vtbl_func_5)();
  int(__stdcall *cSimsApp_vtbl_func_6)();
  int(__stdcall *cSimsApp_vtbl_func_7)();
  int(__stdcall *cSimsApp_vtbl_func_8)();
  int(__stdcall *cSimsApp_vtbl_func_9)(int a1);
  int(__stdcall *cSimsApp_vtbl_func_10)();
  int(__stdcall *j_SimsApp_006493b2)();
  int(__stdcall *cSimsApp_vtbl_func_12)();
  void(__thiscall *j_cGZWinCtrlMgrInit)(void *this);
  int(__stdcall *cSimsApp_vtbl_func_14)();
};

/* 449 */
struct cSimsApp {
  cSimsApp_vtbl *__vftable /*VFT*/;
  cSimsApp_vtbl *__vftable_4;
  cSimsApp_vtbl *__vftable_8;
  _BYTE gap_C[4];
  cSimsApp_vtbl *__vftable_10;
  _BYTE gap_14[52];
  cSimsApp_vtbl *__vftable_48;
  char byte_4c;
  _BYTE gap_4D[15];
  cRZString field_5c;
  cSimsApp_vtbl *__vftable_6C;
  _BYTE gap_70[12];
  cGZWin *mpMainWindow;
  int dword_80;
  cWinCPanel *mpWinCPanel;
  int dword_88;
  cGZWin *mNghWin;
  cRZString field_90;
  CPState *mCPState;
  cRZString field_a4;
  cRZString field_b4;
  cRZString field_c4;
  cRZString field_d4;
  char byte_e4;
  char byte_e5;
  char byte_e6;
  char byte_e7;
  char byte_e8;
  _BYTE gap_E9;
  __unaligned __declspec(align(1)) int dword_ea;
  _BYTE gap_EE[2];
  char byte_f0;
  char byte_f1;
  _BYTE gap_F2[2];
  cWinMemView *mpMemView;
  char byte_f8;
  _BYTE gap_F9[3];
  cGZWinSplashScreen *mpSplashScreen;
  StringSet *dword_100;
  char byte_104;
  _BYTE gap_105[3];
  int dword_108;
  int dword_10c;
  int dword_110;
  int mpLoadLoopSnd;
  int dword_118;
};

/* 450 */
struct /*VFT*/ cGZSystemService_vtbl {
  char *(__thiscall *cGZSystemService_vtbl_func_0)(char *this, char a2);
};

/* 451 */
struct cGZSystemService {
  cGZSystemService_vtbl *__vftable /*VFT*/;
  cGZSystemService_vtbl *__vftable_4;
  cGZSystemService_vtbl *__vftable_8;
  _BYTE gap_C[4];
  cGZSystemService_vtbl *__vftable_10;
  _BYTE gap_14[8];
  _DWORD field_1C;
  cRZString field_20;
  _DWORD field_30;
  cRZString field_34;
  int dword_44;
};

/* 452 */
struct /*VFT*/ cRZRefCount_vtbl {
  void *(__thiscall *cRZRefCount_vtbl_func_0)(void *this, char a2);
  int(__thiscall *cRZRefCount_vtbl_func_1)(void *this);
  int(__thiscall *cRZRefCount_vtbl_func_2)(_DWORD *this);
  int(__thiscall *cGZSystemService_vtbl_func_3)(_DWORD *this);
  int(__stdcall *cGZApp_vtbl_func_4)();
};

/* 453 */
#pragma pack(push, 1)
struct cRZRefCount {
  cRZRefCount_vtbl *__vftable /*VFT*/;
  int dword_4;
};
#pragma pack(pop)

/* 454 */
struct /*VFT*/ cRZUnknown_vtbl {
  int(__thiscall *cRZUnknown_vtbl_func_0)(_DWORD *this);
  int(__thiscall *cRZUnknown_vtbl_func_1)(int this);
};

/* 455 */
#pragma pack(push, 1)
struct cRZUnknown {
  cRZUnknown_vtbl *__vftable /*VFT*/;
  cRZRefCount field_4;
};
#pragma pack(pop)

/* 456 */
struct /*VFT*/ cGZSystemServiceList_vtbl {
  void *(__thiscall *cGZSystemServiceList_vtbl_func_0)(void *this, char a2);
  char(__thiscall *cGZSystemServiceList_vtbl_func_1)(
      void *this, int(__thiscall ***a2)(_DWORD));
  int(__thiscall *cGZSystemServiceList_vtbl_func_2)(void *this, int a2);
  int(__thiscall *cGZSystemServiceList_vtbl_func_3)(void *this);
  int(__thiscall *cGZSystemServiceList_vtbl_func_4)(void *this, int a2);
  int(__thiscall *cGZSystemServiceList_vtbl_func_5)(void *this);
};

/* 457 */
#pragma pack(push, 1)
struct cGZSystemServiceList {
  cGZSystemServiceList_vtbl *__vftable /*VFT*/;
  _DWORD dword_4;
};
#pragma pack(pop)

/* 458 */
#pragma pack(push, 1)
struct struc_942080 {
  _DWORD dword_0;
  _BYTE byte_4;
  _BYTE gap_5[3];
  int dword_8;
};
#pragma pack(pop)

/* 459 */
struct /*VFT*/ cGZMessageQueueManager_vtbl {
  int(__thiscall *cGZMessageQueueManager_vtbl_func_0)(char *this);
  int(__thiscall *cGZMessageQueueManager_vtbl_func_1)(char *this);
  bool(__thiscall *cGZMessageQueueManager_vtbl_func_2)(char *this, char a2,
                                                       _DWORD *a3);
  char(__thiscall *GZMessage_0093efc7)(char *this, char a2, int a3);
  char(__thiscall *cGZMessageQueueManager_vtbl_func_4)(char *this, char a2);
  char(__thiscall *GZMessage_0093f217)(char *this,
                                       void(__thiscall ***a2)(_DWORD), char a3);
  char(__thiscall *cGZMessageQueueManager_vtbl_func_6)(char *this, char a2,
                                                       char a3);
  char(__thiscall *cGZMessageQueueManager_vtbl_func_7)(char *this, char a2);
  int(__thiscall *cGZMessageQueueManager_vtbl_func_8)(char *this);
};

/* 460 */
struct __unaligned __declspec(align(1)) cGZMessageQueueManager {
  cGZSystemService base;
  cGZMessageQueueManager_vtbl *__vftable_48;
  int dword_4c;
  char byte_50;
};

/* 461 */
struct /*VFT*/ cRZCriticalSection_vtbl {
  int(__thiscall *cRZCriticalSection_vtbl_func_0)(void *this);
  int(__thiscall *cRZCriticalSection_vtbl_func_1)(int this);
  int(__thiscall *cRZCriticalSection_vtbl_func_2)(int this);
  int(__thiscall *cRZCriticalSection_vtbl_func_3)(int this);
  int(__thiscall *cRZCriticalSection_vtbl_func_4)(_DWORD *this);
  int(__thiscall *cRZCriticalSection_vtbl_func_5)(_DWORD *this);
  void *(__thiscall *cRZCriticalSection_vtbl_func_6)(void *this, char a2);
  int(__thiscall *cRZCriticalSection_vtbl_func_7)(int this, void *a2);
};

/* 462 */
struct cRZCriticalSection {
  cRZCriticalSection_vtbl *__vftable /*VFT*/;
  struct _RTL_CRITICAL_SECTION criticalSection;
  int dword_1c;
  int dword_20;
};

/* 463 */
struct /*VFT*/ cIGZThreadSignal_vtbl {
  void(__stdcall __noreturn *__purecall)();
  void *(__stdcall *duplicate_0_1)();
  void *(__stdcall *duplicate_0_2)();
  void *(__stdcall *duplicate_0_3)();
  void *(__stdcall *duplicate_0_4)();
};

/* 464 */
struct /*VFT*/ cRZThreadSignal_vtbl {
  char *(__thiscall *cRZThreadSignal_vtbl_func_0)(char *this, char a2);
};

/* 465 */
struct cRZThreadSignal {
  cIGZThreadSignal_vtbl *__vftable /*VFT*/;
  cRZThreadSignal_vtbl *__vftable_4;
  _BYTE gap_8[40];
  HANDLE mhEvent;
  BOOL dword_34;
  int mbEventMade;
};

/* 466 */
struct /*VFT*/ cGZMessageQueue_vtbl {
  int(__thiscall *cGZMessageQueue_vtbl_func_0)(void *this);
  int(__thiscall *cGZMessageQueue_vtbl_func_1)(char *this, int a2);
  int(__thiscall *cGZMessageQueue_vtbl_func_2)(char *this, int a2);
  char(__thiscall *cGZMessageQueue_vtbl_func_3)(char *this, int a2);
  char(__thiscall *cGZMessageQueue_vtbl_func_4)(char *this, int a2);
  char(__thiscall *cGZMessageQueue_vtbl_func_5)(char *this, int a2);
  char(__thiscall *cGZMessageQueue_vtbl_func_6)(char *this, int a2);
  int(__thiscall *cGZMessageQueue_vtbl_func_7)(char *this, int a2);
  int(__thiscall *cGZMessageQueue_vtbl_func_8)(char *this, int a2);
  int(__thiscall *cGZMessageQueue_vtbl_func_9)(char *this);
  int(__thiscall *cGZMessageQueue_vtbl_func_10)(char *this);
  int(__thiscall *cGZMessageQueue_vtbl_func_11)(char *this);
  char(__thiscall *cGZMessageQueue_vtbl_func_12)(char *this, int a2);
  int(__thiscall *cGZMessageQueue_vtbl_func_13)(char *this);
  int(__thiscall *cGZMessageQueue_vtbl_func_14)(char *this);
  char(__thiscall *cGZMessageQueue_vtbl_func_15)(char *this, int a2);
  int(__thiscall *cGZMessageQueue_vtbl_func_16)(char *this);
  int(__thiscall *cGZMessageQueue_vtbl_func_17)(char *this);
  int(__thiscall *cGZMessageQueue_vtbl_func_18)(void *this, int a2);
  char(__thiscall *cGZMessageQueue_vtbl_func_19)(char *this, int a2);
  char(__thiscall *cGZMessageQueue_vtbl_func_20)(char *this, int a2);
  char(__thiscall *cGZMessageQueue_vtbl_func_21)(char *this, int a2);
  int(__thiscall *cGZMessageQueue_vtbl_func_22)(_DWORD *this);
  int(__thiscall *cGZMessageQueue_vtbl_func_23)(_DWORD *this);
  char(__thiscall *cGZMessageQueue_vtbl_func_24)(_DWORD *this, int a2);
  char(__thiscall *cGZMessageQueue_vtbl_func_25)(_DWORD *this, int a2);
  void *(__thiscall *cGZMessageQueue_vtbl_func_26)(void *this, char a2);
};

/* 467 */
#pragma pack(push, 1)
struct cGZMessageQueue {
  cGZMessageQueue_vtbl *__vftable /*VFT*/;
  _DWORD dword_4;
  _BYTE gap_8[4];
  cRZCriticalSection field_c;
  cRZThreadSignal field_30;
};
#pragma pack(pop)

/* 468 */
struct /*VFT*/ cGZMessageServer_vtbl {
  char(__thiscall *cGZMessageServer_vtbl_func_0)(char *this, int *a2);
  char(__thiscall *cGZMessageServer_vtbl_func_1)(char *this, int a2, char a3);
  char(__thiscall *cGZMessageServer_vtbl_func_2)(char *this, char a2, char a3);
  char(__thiscall *cGZMessageServer_vtbl_func_3)(char *this, char a2, char a3);
  void *(__thiscall *cGZMessageServer_vtbl_func_4)(void *this, char a2);
  int(__stdcall *cGZMessageServer_vtbl_func_5)();
  int(__stdcall *cGZMessageServer_vtbl_func_6)();
  char(__thiscall *cGZMessageServer_vtbl_func_7)(
      void(__thiscall ***this)(int, char *), int a2);
};

/* 469 */
#pragma pack(push, 1)
struct cGZMessageServer {
  cGZMessageServer_vtbl *__vftable /*VFT*/;
  cRZCriticalSection field_4;
  cGZMessageQueue field_28;
  _BYTE byte_94;
};
#pragma pack(pop)

/* 470 */
struct /*VFT*/ cRZLanguageManager_vtbl {
  int(__thiscall *cRZLanguageManager_vtbl_func_0)(char *this);
  int(__thiscall *cRZLanguageManager_vtbl_func_1)(char *this);
  int(__thiscall *cRZLanguageManager_vtbl_func_2)(char *this);
  int(__thiscall *cRZLanguageManager_vtbl_func_3)(char *this);
  void(__fastcall *RZLanguage_00934bf3)(int a1, int a2, unsigned int a3);
  int(__fastcall *RZLanguage_00934c83)(int a1, int a2, unsigned int a3);
  int(__stdcall *cRZLanguageManager_vtbl_func_6)(unsigned int a1);
  int(__thiscall *cRZLanguageManager_vtbl_func_7)(_DWORD *this);
  char(__fastcall *RZLanguage_00934d38)(_DWORD *a1, int a2, unsigned int a3);
  int(__thiscall *cRZLanguageManager_vtbl_func_9)(void *this, int a2);
  int(__thiscall *cRZLanguageManager_vtbl_func_10)(void *this);
  char(__fastcall *RZLanguage_0093559c)(int a1, int a2, int a3,
                                        unsigned int a4);
  bool(__thiscall *cRZLanguageManager_vtbl_func_12)(void *this, _DWORD *a2);
  int(__thiscall *cRZLanguageManager_vtbl_func_13)(void *this, int a2, int a3);
  char(__fastcall *RZLanguage_009359a5)(int a1, int a2, int a3,
                                        unsigned int a4);
  char(__fastcall *RZLanguage_00935c95)(int a1, int a2, int a3,
                                        unsigned int a4);
  char(__thiscall *cRZLanguageManager_vtbl_func_16)(_DWORD *this, int a2,
                                                    unsigned int *a3);
  char(__thiscall *cRZLanguageManager_vtbl_func_17)(_DWORD *this, int a2,
                                                    unsigned int *a3);
  char(__thiscall *cRZLanguageManager_vtbl_func_18)(void *this, int a2, int a3);
  int(__thiscall *cRZLanguageManager_vtbl_func_19)(void *this, int a2, int a3);
  int(__thiscall *cRZLanguageManager_vtbl_func_20)(void *this, int a2, int a3);
  int(__thiscall *cRZLanguageManager_vtbl_func_21)(_DWORD *this, int a2);
  char *(__thiscall *cRZLanguageManager_vtbl_func_22)(char *this, int a2);
  int(__stdcall *cRZLanguageManager_vtbl_func_23)(int a1);
  double(__stdcall *cRZLanguageManager_vtbl_func_24)(int a1);
  void *(__thiscall *cRZLanguageManager_vtbl_func_25)(void *this, int a2,
                                                      int a3);
  char(__stdcall *cRZLanguageManager_vtbl_func_26)(int a1, int a2, int a3,
                                                   int a4);
  char(__stdcall *cRZLanguageManager_vtbl_func_27)(int a1, int a2, int a3);
  char(__stdcall *cRZLanguageManager_vtbl_func_28)(int a1, int a2, int a3,
                                                   int a4, int a5);
  char(__stdcall *cRZLanguageManager_vtbl_func_29)(int a1, int a2, int a3,
                                                   int a4);
  int(__thiscall *cRZLanguageManager_vtbl_func_30)(_DWORD *this, char a2,
                                                   int a3);
  int(__thiscall *cRZLanguageManager_vtbl_func_31)(_DWORD *this, int a2, int a3,
                                                   int a4);
  char(__thiscall *cRZLanguageManager_vtbl_func_32)(_DWORD *this, int a2,
                                                    int a3, int a4, char a5,
                                                    char a6);
  char(__thiscall *cRZLanguageManager_vtbl_func_33)(void *this, int a2);
  bool(__thiscall *cRZLanguageManager_vtbl_func_34)(void *this, int a2);
};

/* 473 */
#pragma pack(push, 1)
struct cRZLanguageUtility {
  cRZLanguageUtility_vtbl *__vftable /*VFT*/;
  int dword_4;
  int dword_8;
  char byte_c;
};
#pragma pack(pop)

/* 471 */
struct __unaligned __declspec(align(1)) cRZLanguageManager {
  cGZSystemService base;
  cRZLanguageManager_vtbl *__vftable_48;
  int dword_4c;
  _BYTE gap_50[8];
  int dword_58;
  cRZLanguageUtility mUtility;
};

/* 472 */
struct /*VFT*/ __declspec(align(4)) cRZLanguageUtility_vtbl {
  int(__thiscall *cRZLanguageUtility_vtbl_func_0)(_DWORD *this);
  int(__thiscall *cRZLanguageUtility_vtbl_func_1)(_DWORD *this);
  char(__stdcall *cRZLanguageUtility_vtbl_func_2)();
  char(__stdcall *cRZLanguageUtility_vtbl_func_3)();
  char(__fastcall *RZLanguage_009366fb)(int a1, int a2, unsigned __int8 a3,
                                        int a4);
  char(__thiscall *cRZLanguageUtility_vtbl_func_5)(_DWORD *this, char a2,
                                                   int a3);
  char(__fastcall *RZLanguage_00937f2b)(int a1, int a2, unsigned __int8 a3,
                                        int a4);
  char(__fastcall *RZLanguage_009392fa)(int a1, int a2, unsigned __int8 a3,
                                        int a4);
  char(__thiscall *RZLanguage_0093c11a)(_DWORD *this, int a2, int a3, int a4,
                                        int a5, int a6);
  char(__thiscall *cRZLanguageUtility_vtbl_func_9)(int this, int a2);
  char(__stdcall *cRZLanguageUtility_vtbl_func_10)();
  char(__stdcall *cRZLanguageUtility_vtbl_func_11)();
  char(__thiscall *cRZLanguageUtility_vtbl_func_12)(_DWORD *this, int a2);
  char(__thiscall *cRZLanguageUtility_vtbl_func_13)(_DWORD *this, __int64 a2,
                                                    int a3);
  int(__thiscall *cRZLanguageUtility_vtbl_func_14)(void *this, int a2, int a3);
  char(__thiscall *cRZLanguageUtility_vtbl_func_15)(_DWORD *this, __int64 a2,
                                                    int a3);
  char(__thiscall *cRZLanguageUtility_vtbl_func_16)(_DWORD *this, int a2,
                                                    int a3);
  int(__stdcall *cRZLanguageUtility_vtbl_func_17)(_BYTE *a1);
  void(__thiscall *cRZLanguageUtility_vtbl_func_18)(void *this, int a2);
  int(__stdcall *cRZLanguageUtility_vtbl_func_19)(_BYTE *a1);
  void(__thiscall *cRZLanguageUtility_vtbl_func_20)(void *this, int a2);
  BOOL(__stdcall *cRZLanguageUtility_vtbl_func_21)(char a1);
  BOOL(__stdcall *cRZLanguageUtility_vtbl_func_22)(char a1);
  BOOL(__stdcall *cRZLanguageUtility_vtbl_func_23)(char a1);
  BOOL(__stdcall *cRZLanguageUtility_vtbl_func_24)(char a1);
  BOOL(__stdcall *cRZLanguageUtility_vtbl_func_25)(char a1);
  BOOL(__stdcall *cRZLanguageUtility_vtbl_func_26)(char a1);
  char(__stdcall *cRZLanguageUtility_vtbl_func_27)(int a1);
  char(__stdcall *cRZLanguageUtility_vtbl_func_28)(int a1);
  BOOL(__stdcall *cRZLanguageUtility_vtbl_func_29)(char a1);
  int(__thiscall *cRZLanguageUtility_vtbl_func_30)(void *this, int a2);
  bool(__stdcall *cRZLanguageUtility_vtbl_func_31)(int a1);
  bool(__stdcall *cRZLanguageUtility_vtbl_func_32)(int a1);
  bool(__stdcall *cRZLanguageUtility_vtbl_func_33)(int a1);
  BOOL(__stdcall *cRZLanguageUtility_vtbl_func_34)(int a1);
  void *(__thiscall *cRZLanguageUtility_vtbl_func_35)(void *this, char a2);
  _DWORD *(__thiscall *cRZLanguageUtility_vtbl_func_36)(
      cRZLanguageUtility *this, int a2);
};

/* 474 */
struct /*VFT*/ cGZSndSys_vtbl {
  char *(__thiscall *cGZSndSys_vtbl_func_0)(char *this, char a2);
};

/* 475 */
#pragma pack(push, 1)
struct cGZSndSys {
  cGZSndSys_vtbl *__vftable /*VFT*/;
  cGZSndSys_vtbl *__vftable_4;
  cGZSndSys_vtbl *__vftable_8;
  cGZSndSys_vtbl *__vftable_C;
  _BYTE gap_10[4];
  cGZSndSys_vtbl *__vftable_14;
  _BYTE gap_18[52];
  int dword_4c;
  int dword_50;
  cRZString field_54;
  char byte_64;
  char byte_65;
  char byte_66;
  _BYTE gap_67;
  int dword_68;
  void *field_6c;
  int dword_70;
  int dword_74;
  int dword_78;
  int dword_7c;
  int dword_80;
  _BYTE gap_84[4];
  int dword_88;
  int dword_8c;
  _BYTE byte_90[12];
  _BYTE byte_9c[4];
  _DWORD dword_a0;
  _BYTE gap_A4[12];
  int dword_b0;
  cRZCriticalSection field_b4;
  char byte_d8;
};
#pragma pack(pop)

/* 476 */
struct /*VFT*/ cGZFrameWork_vtbl {
  int(__thiscall *cGZFrameWork_vtbl_func_0)(_DWORD *this);
  char *(__thiscall *cGZFrameWork_vtbl_func_1)(char *this);
  char *(__thiscall *cGZFrameWork_vtbl_func_2)(char *this);
  char *(__thiscall *cGZFrameWork_vtbl_func_3)(char *this);
  void(__stdcall __noreturn *__purecall)();
  int(__thiscall *cGZFrameWork_vtbl_func_5)(_DWORD *this);
  void *(__stdcall *duplicate_4_1)();
  void *(__stdcall *duplicate_4_2)();
  void *(__stdcall *duplicate_4_3)();
  void *(__stdcall *duplicate_4_4)();
  int(__thiscall *cGZFrameWork_vtbl_func_10)(void *this, int a2);
  int(__thiscall *cGZFrameWorkInit)(void *this);
  int(__thiscall *gzframe_008714c6)(_DWORD *this);
  char *(__thiscall *GetCommandLine)(cGZFrameWorkW95 *this);
  char *(__thiscall *cGZFrameWork_vtbl_func_14)(char *this);
  int(__thiscall *cGZFrameWork_vtbl_func_15)(_DWORD *this);
  void *(__stdcall *duplicate_4_5)();
};

/* 477 */
struct cGZFrameWork {
  cGZFrameWorkW95_vtbl *__vftable /*VFT*/;
  cRZUnknown field_4;
  int dword_10;
  cGZSystemServiceList mSystemServiceList;
  _BYTE gap_1C[8];
  cGZMessageQueueManager mMessageQueueMgr;
  _BYTE gap_75[11];
  cGZMessageServer mMessageServer;
  _BYTE gap_115[11];
  cRZCmdLine mCmdLine;
  cGZSndSys *mpSndSys;
  char mbPlaySound;
  _BYTE gap_145[3];
  cRZLanguageManager mLanguageManager;
  _BYTE gap_1B1[3];
  int dword_1b4;
};

/* 480 */
#pragma pack(push, 1)
struct cGZFontSys {
  cGZFontSys_vtbl *__vftable /*VFT*/;
  cGZSystemService base;
};
#pragma pack(pop)

/* 478 */
struct __unaligned __declspec(align(1)) cGZFrameWorkW95 {
  cGZFrameWork base;
  cRZCriticalSection mCriticalSection;
  _BYTE gap_1DC[36];
  _DWORD field_200;
  _BYTE gap_204[1216];
  __declspec(align(1)) cGZFontSys mFontSys;
};

/* 479 */
struct /*VFT*/ cGZFontSys_vtbl {
  int(__thiscall *cGZFontSys_vtbl_func_0)(_DWORD *this);
  int(__thiscall *cGZFontSys_vtbl_func_1)(_DWORD *this);
  char(__thiscall *cGZFontSys_vtbl_func_2)(_BYTE *this);
  char(__thiscall *cGZFontSysShutdown)(_BYTE *this);
  int(__thiscall *cGZFontSys_vtbl_func_4)(void *this, int a2, unsigned int a3,
                                          int a4, int a5);
  int(__thiscall *cGZFontSys_vtbl_func_5)(void *this, int a2);
  char(__thiscall *cGZFontSys_vtbl_func_6)(void *this, unsigned int a2, int a3);
  char(__thiscall *GZFontSys_0094e76d)(void *this, int a2, void *a3);
  int(__thiscall *GZFontSys_0094e85e)(void *this, int a2);
  void *(__thiscall *cGZFontSys_vtbl_func_9)(void *this, char a2);
};

/* 481 */
struct /*VFT*/ cWinMemView_vtbl {
  char(__thiscall *cWinMemView_vtbl_func_0)(void *this, _DWORD *a2);
  int(__thiscall *cWinMemView_vtbl_func_1)(_DWORD *this);
  int(__fastcall *GZWin_00889c06)(_DWORD *a1, int a2);
  int(__stdcall *cWinMemView_vtbl_func_3)();
  int(__stdcall *cWinMemView_vtbl_func_4)();
  int(__stdcall *cWinMemView_vtbl_func_5)(int a1);
  int(__thiscall *cWinMemView_vtbl_func_6)(_DWORD *this);
  char(__thiscall *cWinMemView_vtbl_func_7)(_DWORD *this, int a2);
  int(__thiscall *GZWin_0088a1f5)(void *this, int a2);
  int(__thiscall *GZWin_0088a2a5)(void *this, int a2);
  int(__thiscall *GZWin_0088a355)(void *this, int a2);
  bool(__thiscall *cWinMemView_vtbl_func_11)(void *this, int a2);
  BOOL(__thiscall *cWinMemView_vtbl_func_12)(char *this);
  char(__thiscall *cWinMemView_vtbl_func_13)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_14)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_15)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_16)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_17)(_DWORD **this);
  int(__thiscall *cWinMemView_vtbl_func_18)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_19)(char *this, int a2);
  char(__thiscall *GZWin_0088af45)(void *this, int a2);
  char(__fastcall *GZWin_0088ad71)(int a1, int a2, int a3, int a4);
  char(__thiscall *cWinMemView_vtbl_func_22)(_BYTE *this, char a2, char a3);
  int(__thiscall *cWinMemView_vtbl_func_23)(_BYTE *this, unsigned __int8 a2,
                                            char a3);
  int(__stdcall *cWinMemView_vtbl_func_24)(int a1, int a2, int a3, int a4);
  int(__thiscall *cWinMemView_vtbl_func_25)(void *this, _DWORD *a2);
  void(__thiscall *GZWin_0088a005)(void *this, _DWORD *a2);
  bool(__thiscall *cWinMemView_vtbl_func_27)(char *this, _DWORD *a2, int a3);
  int(__thiscall *cWinMemView_vtbl_func_28)(void *this, int a2, int a3);
  char(__thiscall *cWinMemView_vtbl_func_29)(_DWORD *this, int a2, int a3);
  BOOL(__stdcall *cWinMemView_vtbl_func_30)(int a1, int a2);
  bool(__stdcall *cWinMemView_vtbl_func_31)(int a1, int a2);
  int(__thiscall *cWinMemView_vtbl_func_32)(_DWORD *this, int a2, int a3);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_33)(_DWORD *this, _DWORD *a2,
                                                 _DWORD *a3);
  int(__thiscall *cWinMemView_vtbl_func_34)(_DWORD *this);
  BOOL(__thiscall *cWinMemView_vtbl_func_35)(_DWORD *this, int a2);
  int(__thiscall *cWinMemView_vtbl_func_36)(_DWORD *this, int a2, char a3);
  int(__stdcall *cWinMemView_vtbl_func_37)();
  int(__stdcall *cWinMemView_vtbl_func_38)();
  int(__thiscall *cWinMemView_vtbl_func_39)(void *this, int a2);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_40)(_DWORD *this, int a2);
  void(__stdcall *cWinMemView_vtbl_func_41)();
  int(__thiscall *GZWin_0088eff5)(int *this, unsigned __int8 a2, char a3,
                                  int a4);
  int(__thiscall *GZWin_0088f4ae)(_DWORD *this);
  char(__thiscall *GZWin_0088f41b)(float *this);
  char(__stdcall *cWinMemView_vtbl_func_45)();
  int(__thiscall *GZWin_0088d91b)(char *this);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_47)(void *this, _DWORD *a2, int a3,
                                                 char a4);
  int(__thiscall *cWinMemView_vtbl_func_48)(void *this, _DWORD *a2, int a3);
  void *(__thiscall *GZWin_0088df2a)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_50)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_51)(void *this, char a2);
  char(__fastcall *GZWin_0088c5f5)(_DWORD *a1, int a2, int a3, int a4);
  int(__thiscall *GZWin_0088e8e3)(void *this, int a2, unsigned __int8 a3);
  char(__thiscall *cWinMemView_vtbl_func_54)(_DWORD *this, char a2);
  int(__stdcall *cWinMemView_vtbl_func_55)(int a1, int a2);
  char(__thiscall *cWinMemView_vtbl_func_56)(_DWORD **this, int a2, int a3);
  int(__stdcall *cWinMemView_vtbl_func_57)(int a1, int a2, int a3);
  char(__thiscall *cWinMemView_vtbl_func_58)(_DWORD *this, int a2, int a3,
                                             int a4);
  int(__thiscall *cWinMemView_vtbl_func_59)(void *this, int a2, int a3, int a4);
  int(__thiscall *cWinMemView_vtbl_func_60)(void *this, int a2, int a3, int a4);
  int(__stdcall *cWinMemView_vtbl_func_61)(int a1, int a2, int a3);
  char(__thiscall *cWinMemView_vtbl_func_62)(_DWORD *this, int a2, int a3,
                                             int a4);
  int(__stdcall *j_WinMemView_00677c4a)(int a1, int a2, int a3);
  char(__thiscall *cWinMemView_vtbl_func_64)(_DWORD *this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_65)(_DWORD *this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_66)(_DWORD **this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_67)(_DWORD **this, int a2, int a3,
                                             int a4);
  int(__thiscall *cWinMemView_vtbl_func_68)(_DWORD **this, int a2, int a3,
                                            int a4, int a5);
  int(__thiscall *cWinMemView_vtbl_func_69)(_DWORD **this, int a2, int a3,
                                            int a4, int a5);
  int(__stdcall *j_WinMemView_00677444)();
  int(__stdcall *cWinMemView_vtbl_func_71)(int a1, int a2, int a3);
  int(__thiscall *cWinMemView_vtbl_func_72)(_DWORD *this, int a2, int a3,
                                            int a4);
  int(__thiscall *cWinMemView_vtbl_func_73)(void *this, int a2, int a3, int a4);
  bool(__thiscall *cWinMemView_vtbl_func_74)(void *this, int a2, int a3);
  int(__stdcall *cWinMemView_vtbl_func_75)(int a1, int a2);
  char(__stdcall *cWinMemView_vtbl_func_76)(int a1);
  char(__stdcall *cWinMemView_vtbl_func_77)(int a1);
  int(__thiscall *cWinMemView_vtbl_func_78)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_79)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_80)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_81)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_82)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_83)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_84)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_85)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_86)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_87)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_88)(void *this, char a2);
  int(__stdcall *cWinMemView_vtbl_func_89)(int a1);
  _BYTE *(__thiscall *cWinMemView_vtbl_func_90)(_BYTE *this);
  int(__thiscall *cWinMemView_vtbl_func_91)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_92)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_93)(_DWORD *this, char a2);
  int(__stdcall *cWinMemView_vtbl_func_94)(int a1);
  char(__stdcall *cWinMemView_vtbl_func_95)(int a1);
  int(__thiscall *cWinMemView_vtbl_func_96)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_97)(_DWORD *this);
  int(__fastcall *GZWin_0088d9c6)(int a1, int a2, int a3);
  int(__thiscall *cWinMemView_vtbl_func_99)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_100)(void *this);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_101)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_102)(void *this);
};

/* 485 */
struct cGZWin {
  cGZWin_vtbl *__vftable /*VFT*/;
  int dword_4;
  int dword_8;
  _DWORD dword_c;
  _BYTE gap_10[12];
  _DWORD dword_1c;
  _BYTE gap_20[12];
  int dword_2c;
  _DWORD dword_30;
  _BYTE gap_34[4];
  char byte_38;
  _BYTE gap_39[7];
  char byte_40;
  _BYTE gap_41[3];
  int dword_44;
  int dword_48;
  int dword_4c;
  cRZString name;
  int dword_60;
  int dword_64;
  char byte_68;
  char byte_69;
  _BYTE gap_6A[2];
  int dword_6c;
  int dword_70;
  char byte_74;
  _BYTE gap_75[3];
  cRZString field_78;
  RECT mrBounds;
  _DWORD dword_98;
  _BYTE gap_9C[12];
  int dword_a8;
  int dword_ac;
  int dword_b0;
  int dword_b4;
  int dword_b8;
  char byte_bc;
  _BYTE gap_BD[3];
  int dword_c0;
  _BYTE gap_C4[4];
  _DWORD dword_c8;
  _BYTE gap_CC[16];
  int dword_dc;
};

/* 482 */
struct __cppobj cWinMemView : cGZWin {
  float dword_e0;
  int dword_e4;
  int dword_e8;
  _DWORD dword_ec;
  _BYTE gap_F0[12];
  _DWORD dword_fc;
  _BYTE gap_100[12];
  _DWORD dword_10c;
  _BYTE gap_110[12];
  int mCursorPos;
  int dword_120;
  char byte_124;
  char byte_125;
  char byte_126;
  _BYTE gap_127;
  int dword_128;
  int dword_12c;
  int dword_130;
  _BYTE gap_134[24];
  _DWORD mBytes;
};

/* 483 */
struct /*VFT*/ cGZFrameWorkW95_vtbl {
  int(__thiscall *cGZFrameWork_vtbl_func_0)(_DWORD *this);
  char *(__thiscall *cGZFrameWork_vtbl_func_1)(char *this);
  char *(__thiscall *cGZFrameWork_vtbl_func_2)(char *this);
  char *(__thiscall *cGZFrameWork_vtbl_func_3)(char *this);
  int(__thiscall *cGZFrameWorkW95_vtbl_func_4)(void *this);
  int(__thiscall *cGZFrameWork_vtbl_func_5)(_DWORD *this);
  cGZWinMgrW95 *(__thiscall *cGZFrameWorkW95_vtbl_func_6)(cGZFrameWorkW95 *);
  int(__thiscall *cGZFrameWorkW95_vtbl_func_7)(void *this);
  void(__thiscall __noreturn *cGZFrameWorkW95_vtbl_func_8)(_DWORD *this);
  void(__stdcall *cGZFrameWorkW95_vtbl_func_9)(int nExitCode);
  void(__cdecl __noreturn *cGZFrameWorkW95_vtbl_func_10)(int Code);
  int(__thiscall *cGZFrameWorkW95_vtbl_func_11)(void *this);
  int(__thiscall *cGZFrameWorkW95_vtbl_func_12)(_DWORD *this);
  cRZCmdLine *(__thiscall *cGZFrameWork::GetCommandLine)(cGZFrameWork *this);
  char *(__thiscall *cGZFrameWork_vtbl_func_14)(char *this);
  int(__thiscall *cGZFrameWork_vtbl_func_15)(_DWORD *this);
  int(__thiscall *FWDispatchMessage)(int *this);
};

/* 484 */
struct /*VFT*/ cGZWin_vtbl {
  char(__stdcall *cGZWin_vtbl_func_0)(cGZWin *__hidden this, _DWORD *a2);
  int(__stdcall *cGZWin_vtbl_func_1)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_2)(cGZWin *__hidden this);
  char(__stdcall *cGZWin_vtbl_func_3)(cGZWin *__hidden this);
  char(__stdcall *cGZWin_vtbl_func_4)(cGZWin *__hidden this);
  void *(__stdcall *cGZWin_vtbl_func_5)(cGZWin *__hidden this, char a2);
  int(__stdcall *cGZWin_vtbl_func_6)(cGZWin *__hidden this);
  char(__stdcall *cGZWin_vtbl_func_7)(cGZWin *__hidden this, int a2);
  int(__stdcall *ChildAdd)(cGZWin *__hidden this, int a2);
  int(__stdcall *cGZWin_vtbl_func_9)(cGZWin *__hidden this, int a2);
  int(__stdcall *cGZWin_vtbl_func_10)(cGZWin *__hidden this, int a2);
  bool(__stdcall *cGZWin_vtbl_func_11)(cGZWin *__hidden this, int a2);
  BOOL(__stdcall *cGZWin_vtbl_func_12)(cGZWin *__hidden this);
  char(__stdcall *cGZWin_vtbl_func_13)(cGZWin *__hidden this, int a2);
  char(__stdcall *cGZWin_vtbl_func_14)(cGZWin *__hidden this, int a2);
  char(__stdcall *cGZWin_vtbl_func_15)(cGZWin *__hidden this, int a2);
  char(__stdcall *cGZWin_vtbl_func_16)(cGZWin *__hidden this, int a2);
  int(__stdcall *cGZWin_vtbl_func_17)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_18)(cGZWin *__hidden this);
  char(__stdcall *cGZWin_vtbl_func_19)(cGZWin *__hidden this, int a2);
  char(__stdcall *cGZWin_vtbl_func_20)(cGZWin *__hidden this, int a2);
  char(__stdcall *cGZWin_vtbl_func_21)(cGZWin *__hidden this, int a2, int a3);
  char(__stdcall *cGZWin_vtbl_func_22)(cGZWin *__hidden this, char a2, char a3);
  int(__stdcall *cGZWin_vtbl_func_23)(cGZWin *__hidden this, unsigned __int8 a2,
                                      char a3);
  int(__stdcall *Resize)(cGZWin *__hidden this, int a2, int a3, int a4, int a5);
  int(__stdcall *cGZWin_vtbl_func_25)(cGZWin *__hidden this, _DWORD *a2);
  void(__stdcall *cGZWin_vtbl_func_26)(cGZWin *__hidden this, _DWORD *a2);
  bool(__stdcall *cGZWin_vtbl_func_27)(cGZWin *__hidden this, _DWORD *a2,
                                       int a3);
  int(__stdcall *cGZWin_vtbl_func_28)(cGZWin *__hidden this, int a2);
  int(__stdcall *cGZWin_vtbl_func_29)(cGZWin *__hidden this, int a2);
  int(__stdcall *cGZWin_vtbl_func_30)(cGZWin *__hidden this, int a2);
  int(__stdcall *cGZWin_vtbl_func_31)(cGZWin *__hidden this, int a2);
  int(__stdcall *cGZWin_vtbl_func_32)(cGZWin *__hidden this, int a2);
  int(__stdcall *cGZWin_vtbl_func_33)(cGZWin *__hidden this, int a2);
  int(__stdcall *cGZWin_vtbl_func_34)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_35)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_36)(cGZWin *__hidden this, int a2, char a3);
  int(__stdcall *cGZWin_vtbl_func_37)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_38)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_39)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_40)(cGZWin *__hidden this);
  void(__stdcall *cGZWin_vtbl_func_41)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_42)(cGZWin *__hidden this, unsigned __int8 a2,
                                      char a3, int a4);
  int(__stdcall *cGZWin_vtbl_func_43)(cGZWin *__hidden this);
  char(__stdcall *cGZWin_vtbl_func_44)(cGZWin *__hidden this);
  char(__stdcall *cGZWin_vtbl_func_45)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_46)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_47)(cGZWin *__hidden this, int a2, int a3,
                                      char a4);
  int(__stdcall *cGZWin_vtbl_func_48)(cGZWin *__hidden this, int a2);
  int(__stdcall *cGZWin_vtbl_func_49)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_50)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_51)(cGZWin *__hidden this);
  char(__fastcall *cGZWin_vtbl_func_52)(cGZWin *__hidden this, int a2, int a3,
                                        int a4);
  int(__stdcall *cGZWin_vtbl_func_53)(cGZWin *__hidden this, int a2,
                                      unsigned __int8 a3);
  char(__stdcall *cGZWin_vtbl_func_54)(cGZWin *__hidden this, char a2);
  char(__stdcall *cGZWin_vtbl_func_55)(cGZWin *__hidden this, int a2, int a3);
  char(__stdcall *cGZWin_vtbl_func_56)(cGZWin *__hidden this, int a2, int a3);
  char(__stdcall *cGZWin_vtbl_func_57)(cGZWin *__hidden this, int a2, int a3,
                                       int a4);
  char(__stdcall *cGZWin_vtbl_func_58)(cGZWin *__hidden this, int a2, int a3,
                                       int a4);
  int(__stdcall *cGZWin_vtbl_func_59)(cGZWin *__hidden this, int a2, int a3,
                                      int a4);
  int(__stdcall *cGZWin_vtbl_func_60)(cGZWin *__hidden this, int a2, int a3,
                                      int a4);
  char(__stdcall *cGZWin_vtbl_func_61)(cGZWin *__hidden this, int a2, int a3,
                                       int a4);
  char(__stdcall *cGZWin_vtbl_func_62)(cGZWin *__hidden this, int a2, int a3,
                                       int a4);
  char(__stdcall *cGZWin_vtbl_func_63)(cGZWin *__hidden this, int a2, int a3,
                                       int a4);
  char(__stdcall *cGZWin_vtbl_func_64)(cGZWin *__hidden this, int a2, int a3,
                                       int a4);
  char(__stdcall *cGZWin_vtbl_func_65)(cGZWin *__hidden this, int a2, int a3,
                                       int a4);
  char(__stdcall *cGZWin_vtbl_func_66)(cGZWin *__hidden this, int a2, int a3,
                                       int a4);
  char(__stdcall *cGZWin_vtbl_func_67)(cGZWin *__hidden this, int a2, int a3,
                                       int a4);
  int(__stdcall *cGZWin_vtbl_func_68)(cGZWin *__hidden this, int a2, int a3,
                                      int a4, int a5);
  int(__stdcall *cGZWin_vtbl_func_69)(cGZWin *__hidden this, int a2, int a3,
                                      int a4, int a5);
  void(__stdcall *cGZWin_vtbl_func_70)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_71)(cGZWin *__hidden this, int a2, int a3,
                                      int a4);
  int(__stdcall *cGZWin_vtbl_func_72)(cGZWin *__hidden this, int a2, int a3,
                                      int a4);
  int(__stdcall *cGZWin_vtbl_func_73)(cGZWin *__hidden this, int a2, int a3,
                                      int a4);
  bool(__stdcall *cGZWin_vtbl_func_74)(cGZWin *__hidden this, int a2, int a3);
  char(__stdcall *cGZWin_vtbl_func_75)(cGZWin *__hidden this, int a2, int a3);
  char(__stdcall *cGZWin_vtbl_func_76)(cGZWin *__hidden this);
  char(__stdcall *cGZWin_vtbl_func_77)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_78)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_79)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_80)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_81)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_82)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_83)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_84)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_85)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_86)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_87)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_88)(cGZWin *__hidden this, char a2);
  int(__stdcall *cGZWin_vtbl_func_89)(cGZWin *__hidden this);
  _BYTE *(__stdcall *cGZWin_vtbl_func_90)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_91)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_92)(cGZWin *__hidden this, int a2);
  char(__stdcall *cGZWin_vtbl_func_93)(cGZWin *__hidden this, char a2);
  bool(__stdcall *cGZWin_vtbl_func_94)(cGZWin *__hidden this, char a2);
  char(__stdcall *cGZWin_vtbl_func_95)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_96)(cGZWin *__hidden this);
  int(__stdcall *GetPrivateBuffer)(cGZWin *__hidden this);
  int(__fastcall *cGZWin_vtbl_func_98)(cGZWin *__hidden this, int a2, int a3);
  int(__stdcall *cGZWin_vtbl_func_99)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_100)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_101)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_102)(cGZWin *__hidden this);
};

/* 486 */
struct /*VFT*/ cDefaultTTWindow_vtbl {
  char(__thiscall *cWinMemView_vtbl_func_0)(void *this, _DWORD *a2);
  int(__thiscall *cWinMemView_vtbl_func_1)(_DWORD *this);
  int(__fastcall *GZWin_00889c06)(_DWORD *a1, int a2);
  char(__thiscall *cGZWin_vtbl_func_3)(void *this);
  char(__thiscall *cGZWin_vtbl_func_4)(void(__thiscall ****this)(_DWORD, int));
  void *(__thiscall *cDefaultTTWindow_vtbl_func_5)(void *this, char a2);
  int(__thiscall *cWinMemView_vtbl_func_6)(_DWORD *this);
  char(__thiscall *cWinMemView_vtbl_func_7)(_DWORD *this, int a2);
  int(__thiscall *GZWin_0088a1f5)(void *this, int a2);
  int(__thiscall *GZWin_0088a2a5)(void *this, int a2);
  int(__thiscall *GZWin_0088a355)(void *this, int a2);
  bool(__thiscall *cWinMemView_vtbl_func_11)(void *this, int a2);
  BOOL(__thiscall *cWinMemView_vtbl_func_12)(char *this);
  char(__thiscall *cWinMemView_vtbl_func_13)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_14)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_15)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_16)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_17)(_DWORD **this);
  int(__thiscall *cWinMemView_vtbl_func_18)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_19)(char *this, int a2);
  char(__thiscall *GZWin_0088af45)(void *this, int a2);
  char(__fastcall *GZWin_0088ad71)(int a1, int a2, int a3, int a4);
  char(__thiscall *cWinMemView_vtbl_func_22)(_BYTE *this, char a2, char a3);
  int(__thiscall *cWinMemView_vtbl_func_23)(_BYTE *this, unsigned __int8 a2,
                                            char a3);
  int(__fastcall *GZWin_0088dafc)(_DWORD *a1, int a2, int a3, int a4, int a5,
                                  int a6);
  int(__thiscall *cWinMemView_vtbl_func_25)(void *this, _DWORD *a2);
  void(__thiscall *GZWin_0088a005)(void *this, _DWORD *a2);
  bool(__thiscall *cWinMemView_vtbl_func_27)(char *this, _DWORD *a2, int a3);
  int(__thiscall *cWinMemView_vtbl_func_28)(void *this, int a2, int a3);
  char(__thiscall *cWinMemView_vtbl_func_29)(_DWORD *this, int a2, int a3);
  BOOL(__stdcall *cWinMemView_vtbl_func_30)(int a1, int a2);
  bool(__stdcall *cWinMemView_vtbl_func_31)(int a1, int a2);
  int(__thiscall *cWinMemView_vtbl_func_32)(_DWORD *this, int a2, int a3);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_33)(_DWORD *this, _DWORD *a2,
                                                 _DWORD *a3);
  int(__thiscall *cWinMemView_vtbl_func_34)(_DWORD *this);
  BOOL(__thiscall *cWinMemView_vtbl_func_35)(_DWORD *this, int a2);
  int(__thiscall *cWinMemView_vtbl_func_36)(cWinMemView *this, int a2, char a3);
  int(__thiscall *cGZWin_vtbl_func_37)(void *this);
  int(__thiscall *cGZWin_vtbl_func_38)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_39)(void *this, int a2);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_40)(_DWORD *this, int a2);
  void(__stdcall *cWinMemView_vtbl_func_41)();
  int(__thiscall *GZWin_0088eff5)(int *this, unsigned __int8 a2, char a3,
                                  int a4);
  int(__thiscall *GZWin_0088f4ae)(_DWORD *this);
  char(__thiscall *GZWin_0088f41b)(float *this);
  char(__stdcall *cWinMemView_vtbl_func_45)();
  int(__thiscall *GZWin_0088d91b)(char *this);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_47)(void *this, _DWORD *a2, int a3,
                                                 char a4);
  int(__thiscall *cDefaultTTWindow_vtbl_func_48)(int this, int *a2, float a3);
  void *(__thiscall *GZWin_0088df2a)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_50)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_51)(void *this, char a2);
  char(__fastcall *GZWin_0088c5f5)(_DWORD *a1, int a2, int a3, int a4);
  int(__thiscall *GZWin_0088e8e3)(void *this, int a2, unsigned __int8 a3);
  char(__thiscall *cWinMemView_vtbl_func_54)(_DWORD *this, char a2);
  char(__thiscall *cGZWin_vtbl_func_55)(_DWORD **this, int a2, int a3);
  char(__thiscall *cWinMemView_vtbl_func_56)(_DWORD **this, int a2, int a3);
  char(__thiscall *cGZWin_vtbl_func_57)(_DWORD *this, int a2, int a3, int a4);
  char(__thiscall *cWinMemView_vtbl_func_58)(_DWORD *this, int a2, int a3,
                                             int a4);
  int(__thiscall *cWinMemView_vtbl_func_59)(void *this, int a2, int a3, int a4);
  int(__thiscall *cWinMemView_vtbl_func_60)(void *this, int a2, int a3, int a4);
  char(__thiscall *cGZWin_vtbl_func_61)(_DWORD *this, int a2, int a3, int a4);
  char(__thiscall *cWinMemView_vtbl_func_62)(_DWORD *this, int a2, int a3,
                                             int a4);
  char(__thiscall *cGZWin_vtbl_func_63)(_DWORD *this, int a2, int a3, int a4);
  char(__thiscall *cWinMemView_vtbl_func_64)(_DWORD *this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_65)(_DWORD *this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_66)(_DWORD **this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_67)(_DWORD **this, int a2, int a3,
                                             int a4);
  int(__thiscall *cWinMemView_vtbl_func_68)(_DWORD **this, int a2, int a3,
                                            int a4, int a5);
  int(__thiscall *cWinMemView_vtbl_func_69)(_DWORD **this, int a2, int a3,
                                            int a4, int a5);
  void(__stdcall *cGZWin_vtbl_func_70)();
  int(__thiscall *cGZWin_vtbl_func_71)(void *this, int a2, int a3, int a4);
  int(__thiscall *cWinMemView_vtbl_func_72)(_DWORD *this, int a2, int a3,
                                            int a4);
  int(__thiscall *cWinMemView_vtbl_func_73)(void *this, int a2, int a3, int a4);
  bool(__thiscall *cWinMemView_vtbl_func_74)(void *this, int a2, int a3);
  char(__thiscall *cGZWin_vtbl_func_75)(_DWORD **this, int a2, int a3);
  char(__stdcall *cWinMemView_vtbl_func_76)(int a1);
  char(__stdcall *cWinMemView_vtbl_func_77)(int a1);
  int(__thiscall *cWinMemView_vtbl_func_78)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_79)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_80)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_81)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_82)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_83)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_84)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_85)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_86)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_87)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_88)(void *this, char a2);
  char(__fastcall *DefaultTTWindow_008e69f6)(int a1, int a2, int a3);
  _BYTE *(__thiscall *cWinMemView_vtbl_func_90)(_BYTE *this);
  int(__thiscall *cWinMemView_vtbl_func_91)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_92)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_93)(_DWORD *this, char a2);
  bool(__thiscall *GZWin_0088c42b)(_DWORD *this, char a2);
  char(__stdcall *cWinMemView_vtbl_func_95)(int a1);
  int(__thiscall *cWinMemView_vtbl_func_96)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_97)(_DWORD *this);
  int(__fastcall *GZWin_0088d9c6)(int a1, int a2, int a3);
  int(__thiscall *cWinMemView_vtbl_func_99)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_100)(void *this);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_101)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_102)(void *this);
  char(__thiscall *cDefaultTTWindow_vtbl_func_103)(_DWORD *this, int a2);
};

/* 487 */
struct __cppobj __unaligned __declspec(align(1)) cDefaultTTWindow : cGZWin {
  cRZString field_4;
  _DWORD field_F0;
  _DWORD field_F4;
  _DWORD field_F8;
  _DWORD field_FC;
  _BYTE gap_100[188];
  cRZString field_e0;
  int dword_f0;
  int dword_f4;
  int dword_f8;
  char byte_fc;
};

/* 488 */
struct /*VFT*/ cRZKeyboard_vtbl {
  int(__thiscall *cRZKeyboard_vtbl_func_0)(_BYTE *this);
  bool(__fastcall *RZKeyboard_0094c4d6)(int a1, int a2, unsigned int a3,
                                        int a4);
  char(__fastcall *RZKeyboard_0094c3f6)(int a1, int a2, unsigned int a3);
  BOOL(__stdcall *cRZKeyboard_vtbl_func_3)(int vKey);
  bool(__fastcall *RZKeyboard_0094c726)(int a1, int a2, unsigned int a3);
  BOOL(__thiscall *cRZKeyboard_vtbl_func_5)(void *this);
  int(__stdcall *cRZKeyboard_vtbl_func_6)(int nVirtKey);
  int(__fastcall *RZKeyboard_0094c576)(int a1, int a2, unsigned int a3);
  int(__fastcall *RZKeyboard_0094c616)(int a1, int a2, unsigned int a3);
};

/* 489 */
#pragma pack(push, 1)
struct cRZKeyboard {
  cRZKeyboard_vtbl *__vftable /*VFT*/;
  _DWORD dword_4;
};
#pragma pack(pop)

/* 490 */
struct /*VFT*/ cGZWinMgrW95_vtbl {
  void *(__thiscall *cGZWinMgrW95_vtbl_func_0)(void *this, char a2);
};

/* 491 */
struct cGZWinMgrW95 {
  cGZWinMgrW95_vtbl *__vftable /*VFT*/;
  _BYTE gap_4[28];
  int dword_20;
  int dword_24;
  int dword_28;
  cGZWin *mpParent;
  int dword_30;
  _BYTE byte_34[12];
  int dword_40;
  _DWORD dword_44;
  _BYTE gap_48[8];
  cRZKeyboard mKeyboard;
  _BYTE gap_58[260];
  _DWORD dword_15c;
  _BYTE gap_160[8];
  _DWORD dword_168;
  _BYTE gap_16C[12];
  int dword_178;
  cGZWin *mpCurrentMouseWin;
  int dword_180;
  int dword_184;
  int dword_188;
  _BYTE byte_18c[8];
  int dword_194;
  _BYTE byte_198[16];
  char byte_1a8;
  char byte_1a9;
  _BYTE gap_1AA[2];
  _BYTE byte_1ac[16];
  char byte_1bc;
  _BYTE gap_1BD[3];
  int dword_1c0;
  char byte_1c4;
  _BYTE gap_1C5[3];
  int dword_1c8;
  int dword_1cc;
  char byte_1d0;
  _BYTE gap_1D1[3];
  _DWORD dword_1d4;
  _BYTE gap_1D8[8];
  int dword_1e0;
  int dword_1e4;
  char byte_1e8;
  char byte_1e9;
  _BYTE gap_1EA[2];
  cRZString field_1ec;
  char byte_1fc;
  _BYTE gap_1FD[3];
  cGZWin *dword_200;
  char byte_204;
  _BYTE gap_205[3];
  int dword_208;
  struct _RTL_CRITICAL_SECTION field_20c;
};

/* 492 */
struct __declspec(align(4)) cRZFile_vtbl {
  char(__thiscall *cRZFile::Open)(void *this, char a2, int a3, char a4);
  char(__thiscall *cRZFile::IsFileOpen)(cRZFile *this);
  char(__thiscall *cRZFileClose)(cRZFile *this);
  DWORD(__thiscall *cRZFilePosition)(int this);
  DWORD(__thiscall *cRZFileLength)(int this);
  bool(__thiscall *cRZFileSetLength)(HANDLE *this, LONG lDistanceToMove);
  int(__thiscall *cRZFile::SeekToBegin)(void *this);
  int(__thiscall *cRZFile::SeekToEnd)(void *this);
  int(__thiscall *cRZFile::SeekToRelativePosition)(void *this, int a2);
  int(__thiscall *cRZFile::SeekToExactPosition)(void *this, int a2);
  int(__thiscall *cRZFile::Seek)(HANDLE *this, LONG lDistanceToMove, int a3);
  bool(__thiscall *cRZFile::Read)(HANDLE *this, LPVOID lpBuffer,
                                  DWORD nNumberOfBytesToRead);
  BOOL(__thiscall *cRZFile::ReadWithCount)
  (HANDLE *this, LPVOID lpBuffer, LPDWORD lpNumberOfBytesRead);
  bool(__thiscall *cRZFile::Write)(HANDLE *this, LPCVOID lpBuffer,
                                   DWORD nNumberOfBytesToWrite);
  BOOL(__thiscall *cRZFile::WriteWithCount)
  (HANDLE *this, LPCVOID lpBuffer, LPDWORD lpNumberOfBytesWritten);
  BOOL(__thiscall *cRZFile::Flush)(HANDLE *this);
  BOOL(__thiscall *cRZFile::Delete)(void *this);
  bool(__thiscall *cRZFile::Rename)(void *this, int a2);
  int(__thiscall *cRZFile::Exists)(char *this);
  char(__thiscall *cRZFile::Copy)(char *this, int a2, char a3);
  int(__thiscall *cRZFile::CopyByString)(char *this, int a2, char a3);
  char *(__thiscall *cRZFile::GetFilePath)(char *this);
  int(__thiscall *cRZFile::GetPathToStr)(void *this, int a2);
  char *(__thiscall *cRZFile::GetPathCStr)(void *this);
  void(__thiscall *cRZFile::SetFilePath)(char *this, void *Src);
  _DWORD *(__thiscall *cRZFile::SetPathFromRZStr)(_DWORD *this, int a2);
  char *(__thiscall *cRZFile::virtualdestructor)(cRZFile *this, char a2);
  int(__thiscall *cRZFile::AddRef)(_DWORD *this);
  void *cRZFile::Release;
};

/* 493 */
struct cRZFile {
  cRZFile_vtbl *__vftable /*VFT*/;
  cRZString msFilePath;
  char mbIsOpen;
  _BYTE gap_15[3];
  HANDLE mhFile;
  int dword_1c;
  cRZFile *dword_20;
};

/* 494 */
enum MACRO_CREATE_NEW {
  CREATE_NEW = 1,
  CREATE_ALWAYS = 2,
};

/* 495 */
enum MACRO_OPEN {
  OPEN_EXISTING = 3,
  OPEN_ALWAYS = 4,
};

/* 496 */
enum MACRO_TRUNCATE {
  TRUNCATE_EXISTING = 5,
};

/* 497 */
enum RZFileCreationType {
  CreateNew = 0,
  CreateAlways = 1,
  OpenExisting = 2,
  OpenAlways = 3,
  TruncateExisting = 4,
};

/* 498 */
struct /*VFT*/ cXObject_vtbl {
  int(__thiscall *cXObject_vtbl_func_0)(_DWORD *this, int a2, int a3);
  int(__stdcall *cXObject_vtbl_func_1)(int a1);
  void(__stdcall *cXObject_vtbl_func_2)();
  int(__thiscall *j_ObjectSim_004ab2c2)(void *this, int a2, int a3);
  void *(__thiscall *cXObject_vtbl_func_4)(void *this, char a2);
  char(__thiscall *cXObject_vtbl_func_5)(int this, int a2);
  int(__thiscall *cXObject_vtbl_func_6)(_BYTE *this);
  int(__stdcall *j_object_00482a7a)(int a1);
  _DWORD *(__thiscall *j_ObjectDraw_0048a638)(__int16 *this, _DWORD *a2,
                                              _DWORD *a3);
  char(__thiscall *cXObject_vtbl_func_9)(void *this, int a2, int a3, __int16 a4,
                                         int a5);
  void(__thiscall *cXObject_vtbl_func_10)(char **this, int a2);
  int(__thiscall *cXObject_vtbl_func_11)(void **this);
  int(__thiscall *j_object_0047c214)(_DWORD *this, __int16 a2);
  int(__thiscall *j_object_0047c730)(int this, int a2);
  void(__stdcall *cXObject_vtbl_func_14)();
  void(__thiscall *cXObject_vtbl_func_15)(int this, int a2);
  int(__thiscall *j_object_0047fab7)(char *this);
  char(__thiscall *cXObject_vtbl_func_17)(char *this, int a2, int a3, int a4,
                                          int a5);
  void(__thiscall *j_object_00480188)(int this, int a2, int a3, int a4, int a5);
  bool(__thiscall *cXObject_vtbl_func_19)(void *this, void *a2);
  char(__thiscall *cXObject_vtbl_func_20)(void *this, int a2, int a3, int a4,
                                          int a5);
  int(__thiscall *cXObject_vtbl_func_21)(void *this, int a2, int a3, int a4,
                                         int a5);
  char(__thiscall *cXObject_vtbl_func_22)(__int16 *this);
  int(__thiscall *cXObject_vtbl_func_23)(void *this, int a2);
  char(__thiscall *cXObject_vtbl_func_24)(_WORD *this);
  void(__stdcall *cXObject_vtbl_func_25)();
  int(__thiscall *j_object_00482146)(char *this, _DWORD *a2, int a3, char a4);
  int(__stdcall *cXObject_vtbl_func_27)();
};

/* 499 */
struct /*VFT*/ TreeSim_vtbl {
  void(__stdcall __noreturn *__purecall)();
  void *(__stdcall *duplicate_0_1)();
  void(__stdcall *cXObject_vtbl_func_2)();
  int(__thiscall *TreeSim_vtbl_func_3)(char *this, int a2, int a3);
  void *(__thiscall *TreeSim_vtbl_func_4)(void *this, char a2);
  char(__thiscall *TreeSim_vtbl_func_5)(_DWORD *this, int a2);
};

/* 501 */
#pragma pack(push, 1)
struct struc_51A2B0 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 502 */
struct TreeStack {
  _DWORD dword_0;
  int fFinish;
  struc_51A2B0 field_8;
};

/* 500 */
struct __cppobj TreeSim {
  TreeSim_vtbl *__vftable /*VFT*/;
  int dword_4;
  TreeStack mTreeStack;
  int dword_1c;
  char byte_20;
  _BYTE gap_21[3];
  int dword_24;
  __int16 word_28;
};

/* 503 */
#pragma pack(push, 1)
struct struc_46BFB0 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 504 */
#pragma pack(push, 1)
struct struc_435C90 {
  char byte_0;
  _BYTE gap_1[3];
  char byte_4;
};
#pragma pack(pop)

/* 505 */
#pragma pack(push, 1)
struct struc_47BE60 {
  char byte_0;
  _BYTE gap_1[3];
  char byte_4;
  _BYTE gap_5[3];
  char byte_8;
  _BYTE gap_9[3];
  char byte_c;
};
#pragma pack(pop)

/* 506 */
#pragma pack(push, 1)
struct struc_485D50 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 507 */
#pragma pack(push, 1)
struct struc_485CA0 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 508 */
#pragma pack(push, 1)
struct struc_485E50 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 509 */
#pragma pack(push, 1)
struct struc_435CF0 {
  _DWORD dword_0;
  int dword_4;
};
#pragma pack(pop)

/* 510 */
#pragma pack(push, 1)
struct struc_47BEB0 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
  int dword_c;
};
#pragma pack(pop)

/* 511 */
#pragma pack(push, 1)
struct struc_4A3310 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 512 */
#pragma pack(push, 1)
struct struc_475410 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 513 */
#pragma pack(push, 1)
struct struc_42C370 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 514 */
#pragma pack(push, 1)
struct struc_4A35D0 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 515 */
#pragma pack(push, 1)
struct struc_4A3F50 {
  _DWORD dword_0;
  _BYTE byte_4;
  _BYTE gap_5[3];
  int dword_8;
};
#pragma pack(pop)

/* 516 */
#pragma pack(push, 1)
struct struc_4755D0 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 517 */
#pragma pack(push, 1)
struct struc_4A3AA0 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 518 */
struct /*VFT*/ Commander_vtbl {
  _DWORD *(__thiscall *Commander_vtbl_func_0)(_DWORD *this, char a2);
  __int16(__stdcall *Commander_vtbl_func_1)(int a1, int a2);
};

/* 519 */
#pragma pack(push, 1)
struct __cppobj Commander {
  Commander_vtbl *__vftable /*VFT*/;
  Commander *dword_4;
  int dword_8;
  int dword_c;
};
#pragma pack(pop)

/* 520 */
struct /*VFT*/ ObjectModule_vtbl {
  void *(__thiscall *ObjectModule_vtbl_func_0)(void *this, char a2);
  __int16(__thiscall *ObjectModule_vtbl_func_1)(char *this, __int16 a2, int a3);
};

/* 521 */
struct __cppobj ObjectModule : Commander {
  char byte_10;
  char byte_11;
  _BYTE gap_12[2];
  int dword_14;
  struc_4A3310 field_18;
  struc_475410 field_24;
  int dword_30;
  int dword_34;
  struc_4A3310 field_38;
  char byte_44;
  _BYTE gap_45[7];
  struc_4A3310 field_4c;
  struc_42C370 field_58;
  struc_4A35D0 field_64;
  struc_4A3F50 field_70;
  int dword_7c;
  __int16 word_80;
  _BYTE gap_82[2];
  struc_4755D0 field_84;
  struc_4A3AA0 field_90;
  struc_485CA0 field_9c;
  int dword_a8;
};

/* 522 */
union ObjectModule_CommanderBase {
  ObjectModule_vtbl *__vftable /*VFT*/;
  Commander base;
};

/* 531 */
struct __cppobj cXObject : TreeSim {
  int int30;
  _DWORD dword34;
  _WORD word38;
  _BYTE gap3A[162];
  _DWORD dwordDC;
  _DWORD dwordE0;
  struc_46BFB0 struc_46bfb0E4;
  _WORD wordF0;
  __declspec(align(4)) struc_435C90 struc_435c90F4;
  __declspec(align(4)) struc_47BE60 struc_47be60FC;
  _DWORD dword10C;
  _DWORD dword110;
  _DWORD dword114;
  void *pvoid118;
  void *mObjectSelector;
  struc_485D50 struc_485d50120;
  struc_485CA0 struc_485ca012C;
  struc_485E50 struc_485e50138;
  _DWORD dword144;
  _DWORD dword148;
  _DWORD dword14C;
  struct tagRECT tagrect150;
  _DWORD dword160;
  _DWORD dword164;
};

/* 544 */
struct /*VFT*/ FlatFile_vtbl {
  void *(__thiscall *FlatFile_vtbl_func_0)(void *this, char a2);
};

/* 545 */
struct __cppobj FlatFile {
  FlatFile_vtbl *__vftable /*VFT*/;
  int fFile;
};

/* 546 */
struct /*VFT*/ iResFile_vtbl {
  void *(__thiscall *iResFile_vtbl_func_0)(void *this, char a2);
  void(__stdcall __noreturn *__purecall)();
  void *(__stdcall *duplicate_1_1)();
  void *(__stdcall *duplicate_1_2)();
  void *(__stdcall *duplicate_1_3)();
  void *(__stdcall *duplicate_1_4)();
  void *(__stdcall *duplicate_1_5)();
  void *(__stdcall *duplicate_1_6)();
  void *(__stdcall *duplicate_1_7)();
  void *(__stdcall *duplicate_1_8)();
  void *(__stdcall *duplicate_1_9)();
  void *(__stdcall *duplicate_1_10)();
  void *(__stdcall *duplicate_1_11)();
  void *(__stdcall *duplicate_1_12)();
  void *(__stdcall *duplicate_1_13)();
  void *(__stdcall *duplicate_1_14)();
  void *(__stdcall *duplicate_1_15)();
  int(__thiscall *iResFile_vtbl_func_17)(void *this, int a2, __int16 a3,
                                         char a4, int a5);
  void *(__stdcall *duplicate_1_16)();
  void *(__stdcall *duplicate_1_17)();
  void *(__stdcall *duplicate_1_18)();
  void *(__stdcall *duplicate_1_19)();
  char(__thiscall *iResFile_vtbl_func_22)(void *this, int a2);
  void *(__stdcall *duplicate_1_20)();
  void *(__stdcall *duplicate_1_21)();
  void *(__stdcall *duplicate_1_22)();
  void *(__stdcall *duplicate_1_23)();
  void *(__stdcall *duplicate_1_24)();
  void *(__stdcall *duplicate_1_25)();
  void *(__stdcall *duplicate_1_26)();
  int(__thiscall *iResFile_vtbl_func_30)(void *this, int a2, int a3, __int16 a4,
                                         int a5, int a6, char a7);
  void *(__stdcall *duplicate_1_27)();
  void *(__stdcall *duplicate_1_28)();
  void *(__stdcall *duplicate_1_29)();
  int(__thiscall *iResFile_vtbl_func_34)(void *this, void *a2, __int16 a3,
                                         __int16 a4);
};

/* 547 */
#pragma pack(push, 1)
struct __cppobj iResFile {
  iResFile_vtbl *__vftable /*VFT*/;
  iResFile *dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 548 */
struct /*VFT*/ IFFResFile_vtbl {
  void *(__thiscall *IFFResFile_vtbl_func_0)(void *this, char a2);
  int(__thiscall *j_IFFResFile_004536ea)(_DWORD *this, int a2);
  int(__thiscall *IFFResFile_vtbl_func_2)(void *this, int a2);
  int(__thiscall *j_IFFResFile_004533ba)(_DWORD *this, int a2);
  int(__stdcall *IFFResFile_vtbl_func_4)();
  int(__stdcall *IFFResFile_vtbl_func_5)();
  int(__thiscall *IFFResFile_vtbl_func_6)(_DWORD *this);
  int(__thiscall *j_IFFResFile_00453d10)(_DWORD *this);
  int(__thiscall *IFFResFile_vtbl_func_8)(char *this);
  int(__stdcall *IFFResFile_vtbl_func_9)(int a1);
  int(__thiscall *IFFResFile_vtbl_func_10)(char *this);
  __int16(__thiscall *IFFResFile_vtbl_func_11)(_DWORD *this);
  int(__thiscall *IFFResFile_vtbl_func_12)(_DWORD *this, __int16 a2);
  __int16(__thiscall *IFFResFile_vtbl_func_13)(_DWORD *this, int a2);
  int(__thiscall *IFFResFile_vtbl_func_14)(_DWORD *this, int a2, __int16 a3,
                                           void(__cdecl *a4)(int, size_t));
  int(__thiscall *IFFResFile_vtbl_func_15)(_DWORD *this, int a2, int a3,
                                           void(__cdecl *a4)(int, size_t));
  int(__thiscall *IFFResFile_vtbl_func_16)(_DWORD *this, int a2, __int16 a3,
                                           void(__cdecl *a4)(int, size_t));
  int(__thiscall *iResFile_vtbl_func_17)(void *this, int a2, __int16 a3,
                                         char a4, int a5);
  int(__thiscall *j_IFFResFile_0045441a)(_DWORD *this, int a2, void *a3);
  int(__thiscall *IFFResFile_vtbl_func_19)(_DWORD *this, int a2);
  __int16(__thiscall *IFFResFile_vtbl_func_20)(_DWORD *this, int a2, _WORD *a3);
  int(__thiscall *IFFResFile_vtbl_func_21)(_DWORD *this, int a2, _WORD *a3);
  char(__thiscall *iResFile_vtbl_func_22)(void *this, int a2);
  int(__thiscall *IFFResFile_vtbl_func_23)(_DWORD *this, int a2, int a3);
  __int16(__thiscall *IFFResFile_vtbl_func_24)(_DWORD *this, int a2);
  int(__thiscall *j_IFFResFile_0045496d)(_DWORD *this, int a2);
  int(__thiscall *IFFResFile_vtbl_func_26)(_DWORD *this, int a2);
  bool(__thiscall *IFFResFile_vtbl_func_27)(_DWORD *this, int a2);
  int(__thiscall *IFFResFile_vtbl_func_28)(_DWORD *this, int a2, __int16 a3);
  int(__thiscall *j_IFFResFile_00454cee)(_DWORD *this, int a2, int a3,
                                         __int16 a4, int a5, char a6);
  int(__thiscall *iResFile_vtbl_func_30)(void *this, int a2, int a3, __int16 a4,
                                         int a5, int a6, char a7);
  int(__thiscall *j_IFFResFile_00454f69)(_DWORD *this, int a2);
  int(__thiscall *IFFResFile_vtbl_func_32)(_DWORD *this, int a2);
  int(__thiscall *j_IFFResFile_00455611)(_DWORD *this, int a2, __int16 a3,
                                         int a4, char a5);
  int(__thiscall *iResFile_vtbl_func_34)(void *this, void *a2, __int16 a3,
                                         __int16 a4);
};

/* 549 */
struct __cppobj IFFResFile : iResFile, FlatFile {
  _BYTE gap_14[4];
  _DWORD field_18;
  _DWORD field_1C;
  _DWORD field_20;
  _DWORD field_24;
  _DWORD field_28;
  int x2C;
  int x30;
  int x34;
  int x38;
  char x3C;
  _BYTE gap_3D[3];
  int x40;
};

/* 550 */
struct FileChunkHeader {
  int type;
  _DWORD size;
  __int16 chunkID;
  __int16 flags;
  char label[64];
};

/* 551 */
struct /*VFT*/ CTGString_vtbl {
  void *(__thiscall *CTGString_vtbl_func_0)(void *this, char a2);
  size_t(__thiscall *CTGString_vtbl_func_1)(int this);
  size_t(__thiscall *CTGString_vtbl_func_2)(int this);
  int(__thiscall *CTGString_vtbl_func_3)(void *this);
};

/* 552 */
struct __cppobj CTGString {
  CTGString_vtbl *__vftable /*VFT*/;
  string base;
};

/* 553 */
struct CTGFile {
  CTGString field_0;
  int mhFile;
  int mnSize;
  int dword_14;
  int dword_18;
  char mbFAR;
  char byte_1d;
  _BYTE gap_1E[2];
  void *mpCTGFileManager;
  int dword_24;
  int dword_28;
  int mnCacheOffset;
  int mnCachePos;
};

/* 557 */
struct __cppobj CTGFileManager {
  _DWORD field_0;
  _BYTE gap_4[8];
  _DWORD field_C;
  _BYTE gap_10[32];
};

/* 558 */
struct __unaligned __declspec(align(1)) FAREntry {
  _BYTE byte_0[1];
  _BYTE gap_1[3];
  string szFileName;
  HANDLE hFile;
  int nFileOffset;
  _BYTE gap_14[4];
  int nFileLength;
  char byte_1c;
  char byte_1d;
  char byte_1e;
};

/* 559 */
enum IFFChunkTypes {
  kBCON = 0x42434F4E,
  kTCRN = 0x5452434E,
  kSTR_ = 0x53545223,
};

/* 568 */
struct RTTICompleteObjectLocator {
  int signature;
  int offset;
  int cdOffset;
  void *pTypeDescriptor;
  void *pClassDescriptor;
};

/* 569 */
struct RTTITypeDescriptor {
  void *pVFTable;
  int spare;
  char name[];
};

/* 570 */
struct RTTIClassHierarchyDescriptor {
  int signature;
  int attribute;
  int numBaseClasses;
  void *pBaseClassArray;
};

/* 571 */
struct RTTIBaseClassDescriptor {
  void *pTypeDescriptor;
  int numContainerBases;
  void *PMD;
  int attributes;
};

/* 572 */
struct CheatCode {
  _DWORD id;
  int name;
  int dword_8;
  int dword_c;
  int argc;
};

/* 573 */
struct stru_FEE158 {
  _DWORD dword_0;
  _DWORD field_4;
  int field_8;
  int field_C;
};

/* 574 */
#pragma pack(push, 1)
struct __cppobj cWinCPanel : cGZWin {
  char byte_e0;
  char byte_e1;
  _BYTE gap_E2[2];
  int dword_e4;
  int dword_e8;
  int dword_ec;
  int dword_f0;
  int dword_f4;
  int dword_f8;
  int dword_fc;
  int dword_100;
  int dword_104;
  _DWORD dword_108;
  int dword_10c;
  int dword_110;
  int dword_114;
  int dword_118;
};
#pragma pack(pop)

/* 575 */
struct /*VFT*/ CPState_vtbl {
  void *(__thiscall *CPState_vtbl_func_0)(void *this, char a2);
};

/* 576 */
struct CPState {
  CPState_vtbl *__vftable /*VFT*/;
  int dword_4;
  int dword_8;
  int dword_c;
  int dword_10;
  cRZString field_14;
  char byte_24;
  _BYTE gap_25[3];
  cRZString field_28;
  int dword_38;
  int dword_3c;
  int dword_40;
  char byte_44;
  _BYTE gap_45[3];
  int dword_48;
  int dword_4c;
  int dword_50;
  int dword_54;
  int dword_58;
  int dword_5c;
  int dword_60;
  int dword_64;
  char byte_68;
  _BYTE gap_69[3];
  int dword_6c;
  _BYTE gap_70[48];
  int dword_a0;
  int dword_a4;
  int dword_a8;
  int dword_ac;
  int dword_b0;
  int dword_b4;
  int dword_b8;
  _BYTE gap_BC[192];
  int dword_17c;
  int dword_180;
  int dword_184;
  char byte_188;
  char byte_189;
  _BYTE gap_18A[2];
  float dword_18c;
  _DWORD dword_190;
  _BYTE gap_194[12];
  _DWORD dword_1a0;
  _BYTE gap_1A4[12];
  int dword_1b0;
  int dword_1b4;
  int dword_1b8;
  int dword_1bc;
  int dword_1c0;
  _DWORD dword_1c4;
  _BYTE gap_1C8[260];
  _DWORD dword_2cc;
};

/* 577 */
struct __cppobj cGZWinSplashScreen : cGZWin {
  int dword_e0;
  _BYTE byte_e4[16];
  _BYTE byte_f4[16];
  _BYTE byte_104[64];
  int dword_144;
  cRZString field_148;
  _BYTE gap_158[24];
  _DWORD dword_170;
  _BYTE gap_174[12];
  _DWORD dword_180;
  _BYTE gap_184[12];
  char byte_190;
  _BYTE gap_191[3];
  _BYTE byte_194[16];
  _BYTE byte_1a4[16];
  _BYTE byte_1b4[16];
  _BYTE byte_1c4[12];
  char mbPlayIntro;
  char byte_1d1;
  _BYTE gap_1D2[2];
  int dword_1d4;
};

/* 578 */
struct __declspec(align(4)) cGlobs {
  House *gHouse;
  _DWORD gHouseViewer;
  _BYTE gap_8[4];
  StdResFile *field_C;
  _DWORD gSound;
  PalWrap *gPalWrap;
  _DWORD gGameTools;
  _DWORD field_1C;
  _DWORD gTerrain;
  _DWORD field_24;
  ObjectFolder *gObjectFolder;
  _BYTE *gAnimDevice;
  _DWORD gDevice3D;
  int dword_34;
  int dword_38;
  _BYTE gap_3C[16];
  _DWORD dword_4c;
  cGZWinMgrW95 *gWinMgr;
  int field_54;
  int field_58;
  int field_5C;
  int field_60;
};

/* 579 */
struct /*VFT*/ cIGZUnknown_vtbl {
  void(__stdcall __noreturn *__purecall)();
  void *(__stdcall *duplicate_0_1)();
};

/* 580 */
#pragma pack(push, 1)
struct __cppobj cIGZUnknown {
  cIGZUnknown_vtbl *__vftable /*VFT*/;
};
#pragma pack(pop)

/* 581 */
struct /*VFT*/ cIGZWinDlg_vtbl {
  void(__stdcall __noreturn *__purecall)();
  void *(__stdcall *duplicate_0_1)();
  void *(__stdcall *duplicate_0_2)();
};

/* 582 */
#pragma pack(push, 1)
struct __cppobj cIGZWinDlg : cIGZUnknown {};
#pragma pack(pop)

/* 583 */
#pragma pack(push, 1)
struct __cppobj cGZWinDlg : cGZWin, cIGZWinDlg {};
#pragma pack(pop)

/* 584 */
struct /*VFT*/ cGZWinDlg_vtbl {
  char(__thiscall *cWinMemView_vtbl_func_0)(void *this, _DWORD *a2);
  int(__thiscall *cGZWinDlg_vtbl_func_1)(void *this);
  int(__thiscall *cGZWinDlg_vtbl_func_2)(void *this);
  char(__thiscall *cGZWin_vtbl_func_3)(cGZWin *this);
  char(__thiscall *cGZWin_vtbl_func_4)(void(__thiscall ****this)(_DWORD, int));
  int(__stdcall *cGZWinDlg_vtbl_func_5)(int a1);
  int(__thiscall *cWinMemView_vtbl_func_6)(_DWORD *this);
  char(__thiscall *cWinMemView_vtbl_func_7)(_DWORD *this, int a2);
  int(__thiscall *GZWin_0088a1f5)(void *this, int a2);
  int(__thiscall *GZWin_0088a2a5)(void *this, int a2);
  int(__thiscall *GZWin_0088a355)(void *this, int a2);
  bool(__thiscall *cWinMemView_vtbl_func_11)(void *this, int a2);
  BOOL(__thiscall *cWinMemView_vtbl_func_12)(char *this);
  char(__thiscall *cWinMemView_vtbl_func_13)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_14)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_15)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_16)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_17)(cGZWin *this);
  int(__thiscall *cWinMemView_vtbl_func_18)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_19)(char *this, int a2);
  char(__thiscall *GZWin_0088af45)(void *this, int a2);
  char(__fastcall *GZWin_0088ad71)(int a1, RZFileCreationType a2, cGZWin *a3,
                                   cGZWin *a4);
  char(__thiscall *cWinMemView_vtbl_func_22)(_BYTE *this, char a2, char a3);
  int(__thiscall *cWinMemView_vtbl_func_23)(_BYTE *this, unsigned __int8 a2,
                                            char a3);
  int(__fastcall *GZWin_0088dafc)(char *a1, RZFileCreationType a2, int a3,
                                  int a4, int a5, int a6);
  int(__thiscall *cWinMemView_vtbl_func_25)(void *this, _DWORD *a2);
  void(__thiscall *GZWin_0088a005)(void *this, _DWORD *a2);
  bool(__thiscall *cWinMemView_vtbl_func_27)(char *this, _DWORD *a2, int a3);
  int(__thiscall *cWinMemView_vtbl_func_28)(void *this, int a2, int a3);
  char(__thiscall *cWinMemView_vtbl_func_29)(_DWORD *this, int a2, int a3);
  BOOL(__stdcall *cWinMemView_vtbl_func_30)(int a1, int a2);
  bool(__stdcall *cWinMemView_vtbl_func_31)(int a1, int a2);
  int(__thiscall *cWinMemView_vtbl_func_32)(_DWORD *this, int a2, int a3);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_33)(_DWORD *this, _DWORD *a2,
                                                 _DWORD *a3);
  int(__thiscall *cWinMemView_vtbl_func_34)(_DWORD *this);
  BOOL(__thiscall *cWinMemView_vtbl_func_35)(_DWORD *this, int a2);
  int(__thiscall *cWinMemView_vtbl_func_36)(cGZWin *this, int a2, char a3);
  int(__thiscall *cGZWin_vtbl_func_37)(cGZWin *this);
  int(__thiscall *cGZWin_vtbl_func_38)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_39)(void *this, int a2);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_40)(_DWORD *this, int a2);
  void(__stdcall *cWinMemView_vtbl_func_41)();
  int(__thiscall *GZWin_0088eff5)(cGZWin *this, unsigned __int8 a2, char a3,
                                  int a4);
  int(__thiscall *GZWin_0088f4ae)(cGZWin *this);
  char(__thiscall *GZWin_0088f41b)(float *this);
  char(__stdcall *cWinMemView_vtbl_func_45)();
  int(__thiscall *GZWin_0088d91b)(char *this);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_47)(void *this, _DWORD *a2, int a3,
                                                 char a4);
  int(__thiscall *cWinMemView_vtbl_func_48)(void *this, _DWORD *a2, int a3);
  void *(__thiscall *GZWin_0088df2a)(char *this);
  int(__thiscall *cWinMemView_vtbl_func_50)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_51)(cWinMemView *this, char a2);
  char(__fastcall *GZWin_0088c5f5)(_DWORD *a1, RZFileCreationType a2, int a3,
                                   int a4);
  int(__thiscall *GZWin_0088e8e3)(void *this, int a2, unsigned __int8 a3);
  char(__thiscall *cWinMemView_vtbl_func_54)(_DWORD *this, char a2);
  char(__stdcall *cGZWinDlg_vtbl_func_55)(int a1, int a2);
  char(__thiscall *cWinMemView_vtbl_func_56)(_DWORD **this, int a2, int a3);
  char(__thiscall *cGZWin_vtbl_func_57)(_DWORD *this, int a2, int a3, int a4);
  char(__thiscall *cWinMemView_vtbl_func_58)(_DWORD *this, int a2, int a3,
                                             int a4);
  int(__thiscall *cWinMemView_vtbl_func_59)(void *this, int a2, int a3, int a4);
  int(__thiscall *cWinMemView_vtbl_func_60)(void *this, int a2, int a3, int a4);
  char(__thiscall *cGZWin_vtbl_func_61)(_DWORD *this, int a2, int a3, int a4);
  char(__thiscall *cWinMemView_vtbl_func_62)(_DWORD *this, int a2, int a3,
                                             int a4);
  char(__thiscall *cGZWin_vtbl_func_63)(_DWORD *this, int a2, int a3, int a4);
  char(__thiscall *cWinMemView_vtbl_func_64)(_DWORD *this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_65)(_DWORD *this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_66)(_DWORD **this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_67)(_DWORD **this, int a2, int a3,
                                             int a4);
  int(__thiscall *cWinMemView_vtbl_func_68)(_DWORD **this, int a2, int a3,
                                            int a4, int a5);
  int(__thiscall *cWinMemView_vtbl_func_69)(_DWORD **this, int a2, int a3,
                                            int a4, int a5);
  void(__stdcall *cGZWin_vtbl_func_70)();
  int(__thiscall *cGZWin_vtbl_func_71)(void *this, int a2, int a3, int a4);
  int(__thiscall *cWinMemView_vtbl_func_72)(_DWORD *this, int a2, int a3,
                                            int a4);
  int(__thiscall *cWinMemView_vtbl_func_73)(void *this, int a2, int a3, int a4);
  bool(__thiscall *cWinMemView_vtbl_func_74)(void *this, int a2, int a3);
  char(__thiscall *cGZWin_vtbl_func_75)(_DWORD **this, int a2, int a3);
  char(__stdcall *cWinMemView_vtbl_func_76)(int a1);
  char(__stdcall *cWinMemView_vtbl_func_77)(int a1);
  int(__thiscall *cWinMemView_vtbl_func_78)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_79)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_80)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_81)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_82)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_83)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_84)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_85)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_86)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_87)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_88)(void *this, char a2);
  char(__stdcall *cGZWin_vtbl_func_89)(char a1);
  _BYTE *(__thiscall *cWinMemView_vtbl_func_90)(_BYTE *this);
  int(__thiscall *cWinMemView_vtbl_func_91)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_92)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_93)(_DWORD *this, char a2);
  bool(__thiscall *GZWin_0088c42b)(cGZWin *this, char a2);
  char(__stdcall *cWinMemView_vtbl_func_95)(int a1);
  int(__thiscall *cWinMemView_vtbl_func_96)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_97)(_DWORD *this);
  int(__fastcall *GZWin_0088d9c6)(int a1, RZFileCreationType a2, int a3);
  int(__thiscall *cWinMemView_vtbl_func_99)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_100)(void *this);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_101)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_102)(void *this);
};

/* 585 */
#pragma pack(push, 1)
struct stru_693540 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 586 */
#pragma pack(push, 1)
struct stru_68CB90 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 587 */
#pragma pack(push, 1)
struct stru_488910 {
  _DWORD dword_0;
};
#pragma pack(pop)

/* 588 */
#pragma pack(push, 1)
struct stru_487F40 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
  int dword_c;
};
#pragma pack(pop)

/* 589 */
#pragma pack(push, 1)
struct stru_5F9E60 {
  _DWORD dword_0;
};
#pragma pack(pop)

/* 590 */
#pragma pack(push, 1)
struct stru_487EB0 {
  _DWORD dword_0;
  int dword_4;
};
#pragma pack(pop)

/* 591 */
#pragma pack(push, 1)
struct __cppobj cWinTextWrap : cGZWin {
  stru_5F9E60 field_e0;
  int dword_e4;
  int dword_e8;
  stru_5F9E60 field_ec;
  int dword_f0;
  int dword_f4;
  int dword_f8;
  int dword_fc;
  stru_5F9E60 field_100;
  int dword_104;
  int dword_108;
  int dword_10c;
};
#pragma pack(pop)

/* 592 */
struct /*VFT*/ cWinTextWrap_vtbl {
  char(__thiscall *cWinMemView_vtbl_func_0)(void *this, _DWORD *a2);
  int(__thiscall *cWinMemView_vtbl_func_1)(_DWORD *this);
  int(__fastcall *GZWin_00889c06)(_DWORD *a1, RZFileCreationType a2);
  int(__stdcall *cWinTextWrap_vtbl_func_3)();
  int(__stdcall *cWinTextWrap_vtbl_func_4)();
  int(__stdcall *cWinTextWrap_vtbl_func_5)(int a1);
  int(__thiscall *cWinMemView_vtbl_func_6)(_DWORD *this);
  char(__thiscall *cWinMemView_vtbl_func_7)(_DWORD *this, int a2);
  int(__thiscall *GZWin_0088a1f5)(void *this, int a2);
  int(__thiscall *GZWin_0088a2a5)(void *this, int a2);
  int(__thiscall *GZWin_0088a355)(void *this, int a2);
  bool(__thiscall *cWinMemView_vtbl_func_11)(void *this, int a2);
  BOOL(__thiscall *cWinMemView_vtbl_func_12)(char *this);
  char(__thiscall *cWinMemView_vtbl_func_13)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_14)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_15)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_16)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_17)(cGZWin *this);
  int(__thiscall *cWinMemView_vtbl_func_18)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_19)(char *this, int a2);
  char(__thiscall *GZWin_0088af45)(void *this, int a2);
  char(__fastcall *GZWin_0088ad71)(int a1, RZFileCreationType a2, cGZWin *a3,
                                   cGZWin *a4);
  char(__thiscall *cWinMemView_vtbl_func_22)(_BYTE *this, char a2, char a3);
  int(__thiscall *cWinMemView_vtbl_func_23)(_BYTE *this, unsigned __int8 a2,
                                            char a3);
  int(__stdcall *cWinTextWrap_vtbl_func_24)(int a1, int a2, int a3, int a4);
  int(__thiscall *cWinMemView_vtbl_func_25)(void *this, _DWORD *a2);
  void(__thiscall *GZWin_0088a005)(void *this, _DWORD *a2);
  bool(__thiscall *cWinMemView_vtbl_func_27)(char *this, _DWORD *a2, int a3);
  int(__thiscall *cWinMemView_vtbl_func_28)(void *this, int a2, int a3);
  char(__thiscall *cWinMemView_vtbl_func_29)(_DWORD *this, int a2, int a3);
  BOOL(__stdcall *cWinMemView_vtbl_func_30)(int a1, int a2);
  bool(__stdcall *cWinMemView_vtbl_func_31)(int a1, int a2);
  int(__thiscall *cWinMemView_vtbl_func_32)(_DWORD *this, int a2, int a3);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_33)(_DWORD *this, _DWORD *a2,
                                                 _DWORD *a3);
  int(__thiscall *cWinMemView_vtbl_func_34)(_DWORD *this);
  BOOL(__thiscall *cWinMemView_vtbl_func_35)(_DWORD *this, int a2);
  int(__thiscall *cWinMemView_vtbl_func_36)(cGZWin *this, int a2, char a3);
  int(__thiscall *cGZWin_vtbl_func_37)(cGZWin *this);
  int(__thiscall *cGZWin_vtbl_func_38)(void *this);
  int(__stdcall *cWinTextWrap_vtbl_func_39)(int a1);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_40)(_DWORD *this, int a2);
  void(__stdcall *cWinMemView_vtbl_func_41)();
  int(__thiscall *GZWin_0088eff5)(cGZWin *this, unsigned __int8 a2, char a3,
                                  int a4);
  int(__thiscall *GZWin_0088f4ae)(cGZWin *this);
  char(__thiscall *GZWin_0088f41b)(float *this);
  char(__stdcall *cWinMemView_vtbl_func_45)();
  int(__thiscall *GZWin_0088d91b)(char *this);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_47)(void *this, _DWORD *a2, int a3,
                                                 char a4);
  int(__thiscall *cWinMemView_vtbl_func_48)(void *this, _DWORD *a2, int a3);
  void *(__thiscall *GZWin_0088df2a)(char *this);
  int(__thiscall *cWinMemView_vtbl_func_50)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_51)(cWinMemView *this, char a2);
  char(__fastcall *GZWin_0088c5f5)(_DWORD *a1, RZFileCreationType a2, int a3,
                                   int a4);
  int(__thiscall *GZWin_0088e8e3)(void *this, int a2, unsigned __int8 a3);
  char(__thiscall *cWinMemView_vtbl_func_54)(_DWORD *this, char a2);
  char(__thiscall *cGZWin_vtbl_func_55)(_DWORD **this, int a2, int a3);
  char(__thiscall *cWinMemView_vtbl_func_56)(_DWORD **this, int a2, int a3);
  char(__thiscall *cGZWin_vtbl_func_57)(_DWORD *this, int a2, int a3, int a4);
  char(__thiscall *cWinMemView_vtbl_func_58)(_DWORD *this, int a2, int a3,
                                             int a4);
  int(__thiscall *cWinMemView_vtbl_func_59)(void *this, int a2, int a3, int a4);
  int(__thiscall *cWinMemView_vtbl_func_60)(void *this, int a2, int a3, int a4);
  char(__thiscall *cGZWin_vtbl_func_61)(_DWORD *this, int a2, int a3, int a4);
  char(__thiscall *cWinMemView_vtbl_func_62)(_DWORD *this, int a2, int a3,
                                             int a4);
  char(__thiscall *cGZWin_vtbl_func_63)(_DWORD *this, int a2, int a3, int a4);
  char(__thiscall *cWinMemView_vtbl_func_64)(_DWORD *this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_65)(_DWORD *this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_66)(_DWORD **this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_67)(_DWORD **this, int a2, int a3,
                                             int a4);
  int(__thiscall *cWinMemView_vtbl_func_68)(_DWORD **this, int a2, int a3,
                                            int a4, int a5);
  int(__thiscall *cWinMemView_vtbl_func_69)(_DWORD **this, int a2, int a3,
                                            int a4, int a5);
  void(__stdcall *cGZWin_vtbl_func_70)();
  int(__thiscall *cGZWin_vtbl_func_71)(void *this, int a2, int a3, int a4);
  int(__thiscall *cWinMemView_vtbl_func_72)(_DWORD *this, int a2, int a3,
                                            int a4);
  int(__thiscall *cWinMemView_vtbl_func_73)(void *this, int a2, int a3, int a4);
  bool(__thiscall *cWinMemView_vtbl_func_74)(void *this, int a2, int a3);
  char(__thiscall *cGZWin_vtbl_func_75)(_DWORD **this, int a2, int a3);
  char(__stdcall *cWinMemView_vtbl_func_76)(int a1);
  char(__stdcall *cWinMemView_vtbl_func_77)(int a1);
  int(__thiscall *cWinMemView_vtbl_func_78)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_79)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_80)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_81)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_82)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_83)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_84)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_85)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_86)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_87)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_88)(void *this, char a2);
  int(__stdcall *j_WinTextWrap_006ac435)(int a1);
  _BYTE *(__thiscall *cWinMemView_vtbl_func_90)(_BYTE *this);
  int(__thiscall *cWinMemView_vtbl_func_91)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_92)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_93)(_DWORD *this, char a2);
  bool(__thiscall *GZWin_0088c42b)(cGZWin *this, char a2);
  char(__stdcall *cWinMemView_vtbl_func_95)(int a1);
  int(__thiscall *cWinMemView_vtbl_func_96)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_97)(_DWORD *this);
  int(__fastcall *GZWin_0088d9c6)(int a1, RZFileCreationType a2, int a3);
  int(__thiscall *cWinMemView_vtbl_func_99)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_100)(void *this);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_101)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_102)(void *this);
};

/* 593 */
#pragma pack(push, 1)
struct stru_5F0880 {
  _DWORD dword_0;
  _BYTE gap_4[4];
  int dword_8;
};
#pragma pack(pop)

/* 594 */
struct /*VFT*/ cWinPictureDialog_vtbl {
  char(__thiscall *cWinMemView_vtbl_func_0)(void *this, _DWORD *a2);
  int(__thiscall *cGZWinDlg_vtbl_func_1)(void *this);
  int(__thiscall *cGZWinDlg_vtbl_func_2)(void *this);
  int(__stdcall *cWinPictureDialog_vtbl_func_3)();
  int(__stdcall *cWinPictureDialog_vtbl_func_4)();
  int(__stdcall *cWinPictureDialog_vtbl_func_5)(int a1);
  int(__thiscall *cWinMemView_vtbl_func_6)(_DWORD *this);
  char(__thiscall *cWinMemView_vtbl_func_7)(_DWORD *this, int a2);
  int(__thiscall *GZWin_0088a1f5)(void *this, int a2);
  int(__thiscall *GZWin_0088a2a5)(void *this, int a2);
  int(__thiscall *GZWin_0088a355)(void *this, int a2);
  bool(__thiscall *cWinMemView_vtbl_func_11)(void *this, int a2);
  BOOL(__thiscall *cWinMemView_vtbl_func_12)(char *this);
  char(__thiscall *cWinMemView_vtbl_func_13)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_14)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_15)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_16)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_17)(cGZWin *this);
  int(__thiscall *cWinMemView_vtbl_func_18)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_19)(char *this, int a2);
  char(__thiscall *GZWin_0088af45)(void *this, int a2);
  char(__fastcall *GZWin_0088ad71)(int a1, RZFileCreationType a2, cGZWin *a3,
                                   cGZWin *a4);
  char(__thiscall *cWinMemView_vtbl_func_22)(_BYTE *this, char a2, char a3);
  int(__thiscall *cWinMemView_vtbl_func_23)(_BYTE *this, unsigned __int8 a2,
                                            char a3);
  int(__fastcall *Resize)(char *a1, RZFileCreationType a2, int a3, int a4,
                          int a5, int a6);
  int(__thiscall *cWinMemView_vtbl_func_25)(void *this, _DWORD *a2);
  void(__thiscall *GZWin_0088a005)(void *this, _DWORD *a2);
  bool(__thiscall *cWinMemView_vtbl_func_27)(char *this, _DWORD *a2, int a3);
  int(__thiscall *cWinMemView_vtbl_func_28)(void *this, int a2, int a3);
  char(__thiscall *cWinMemView_vtbl_func_29)(_DWORD *this, int a2, int a3);
  BOOL(__stdcall *cWinMemView_vtbl_func_30)(int a1, int a2);
  bool(__stdcall *cWinMemView_vtbl_func_31)(int a1, int a2);
  int(__thiscall *cWinMemView_vtbl_func_32)(_DWORD *this, int a2, int a3);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_33)(_DWORD *this, _DWORD *a2,
                                                 _DWORD *a3);
  int(__thiscall *cWinMemView_vtbl_func_34)(_DWORD *this);
  BOOL(__thiscall *cWinMemView_vtbl_func_35)(_DWORD *this, int a2);
  int(__thiscall *cWinMemView_vtbl_func_36)(cGZWin *this, int a2, char a3);
  int(__thiscall *cGZWin_vtbl_func_37)(cGZWin *this);
  int(__thiscall *cGZWin_vtbl_func_38)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_39)(void *this, int a2);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_40)(_DWORD *this, int a2);
  void(__stdcall *cWinMemView_vtbl_func_41)();
  int(__thiscall *GZWin_0088eff5)(cGZWin *this, unsigned __int8 a2, char a3,
                                  int a4);
  int(__thiscall *GZWin_0088f4ae)(cGZWin *this);
  char(__thiscall *GZWin_0088f41b)(float *this);
  char(__stdcall *cWinMemView_vtbl_func_45)();
  int(__thiscall *GZWin_0088d91b)(char *this);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_47)(void *this, _DWORD *a2, int a3,
                                                 char a4);
  int(__thiscall *cWinMemView_vtbl_func_48)(void *this, _DWORD *a2, int a3);
  void *(__thiscall *GZWin_0088df2a)(char *this);
  int(__thiscall *cWinMemView_vtbl_func_50)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_51)(cWinMemView *this, char a2);
  char(__fastcall *GZWin_0088c5f5)(_DWORD *a1, RZFileCreationType a2, int a3,
                                   int a4);
  int(__thiscall *GZWin_0088e8e3)(void *this, int a2, unsigned __int8 a3);
  int(__stdcall *cWinPictureDialog_vtbl_func_54)(char a1);
  int(__stdcall *cWinPictureDialog_vtbl_func_55)(int a1, int a2);
  char(__thiscall *cWinMemView_vtbl_func_56)(_DWORD **this, int a2, int a3);
  int(__stdcall *cWinPictureDialog_vtbl_func_57)(int a1, int a2, int a3);
  char(__thiscall *cWinMemView_vtbl_func_58)(_DWORD *this, int a2, int a3,
                                             int a4);
  int(__thiscall *cWinMemView_vtbl_func_59)(void *this, int a2, int a3, int a4);
  int(__thiscall *cWinMemView_vtbl_func_60)(void *this, int a2, int a3, int a4);
  int(__stdcall *cWinPictureDialog_vtbl_func_61)(int a1, int a2, int a3);
  char(__thiscall *cWinMemView_vtbl_func_62)(_DWORD *this, int a2, int a3,
                                             int a4);
  char(__thiscall *cGZWin_vtbl_func_63)(_DWORD *this, int a2, int a3, int a4);
  char(__thiscall *cWinMemView_vtbl_func_64)(_DWORD *this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_65)(_DWORD *this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_66)(_DWORD **this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_67)(_DWORD **this, int a2, int a3,
                                             int a4);
  int(__thiscall *cWinMemView_vtbl_func_68)(_DWORD **this, int a2, int a3,
                                            int a4, int a5);
  int(__thiscall *cWinMemView_vtbl_func_69)(_DWORD **this, int a2, int a3,
                                            int a4, int a5);
  int(__stdcall *cWinPictureDialog_vtbl_func_70)();
  int(__thiscall *cGZWin_vtbl_func_71)(void *this, int a2, int a3, int a4);
  int(__thiscall *cWinMemView_vtbl_func_72)(_DWORD *this, int a2, int a3,
                                            int a4);
  int(__thiscall *cWinMemView_vtbl_func_73)(void *this, int a2, int a3, int a4);
  bool(__thiscall *cWinMemView_vtbl_func_74)(void *this, int a2, int a3);
  int(__stdcall *j_WinPictureDialog_00692da4)(int a1, int a2);
  int(__stdcall *cWinPictureDialog_vtbl_func_76)(int a1);
  char(__stdcall *cWinMemView_vtbl_func_77)(int a1);
  int(__stdcall *j_WinPictureDialog_00691565)();
  int(__stdcall *cWinPictureDialog_vtbl_func_79)();
  int(__thiscall *cWinMemView_vtbl_func_80)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_81)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_82)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_83)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_84)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_85)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_86)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_87)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_88)(void *this, char a2);
  int(__stdcall *cWinPictureDialog_vtbl_func_89)(int a1);
  _BYTE *(__thiscall *cWinMemView_vtbl_func_90)(_BYTE *this);
  int(__thiscall *cWinMemView_vtbl_func_91)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_92)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_93)(_DWORD *this, char a2);
  bool(__thiscall *GZWin_0088c42b)(cGZWin *this, char a2);
  char(__stdcall *cWinMemView_vtbl_func_95)(int a1);
  int(__thiscall *cWinMemView_vtbl_func_96)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_97)(_DWORD *this);
  int(__fastcall *GZWin_0088d9c6)(int a1, RZFileCreationType a2, int a3);
  int(__thiscall *cWinMemView_vtbl_func_99)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_100)(void *this);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_101)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_102)(void *this);
};

/* 595 */
struct __cppobj cWinPictureDialog : cGZWinDlg {
  stru_693540 field_e4;
  int dword_f0;
  cWinTextWrap *dword_f4;
  int dword_f8;
  int dword_fc;
  stru_68CB90 field_100;
  int dword_10c;
  stru_488910 field_110;
  _BYTE gap_114[12];
  int dword_120;
  int dword_124;
  int dword_128;
  int dword_12c;
  int dword_130;
  char byte_134;
  char byte_135;
  _BYTE gap_136[2];
  int dword_138;
  stru_488910 field_13c;
  _BYTE gap_140[12];
  float dword_14c;
  int dword_150;
};

/* 596 */
struct /*VFT*/ PalWrap_vtbl {
  void *(__thiscall *PalWrap_vtbl_func_0)(void *this, char a2);
};

/* 597 */
struct __cppobj PalWrap {
  PalWrap_vtbl *__vftable /*VFT*/;
  HPALETTE fPalette;
  int dword_8;
  _BYTE gap_C[8];
  int dword_14;
  float dword_18;
  int dword_1c;
};

/* 598 */
enum GamePath {
  kGameData_Folder = 0x0,
  kSprites_iff = 0x1,
  kTools_rsrc = 0x2,
  kBehavior_iff = 0x3,
  kGlobalCLUT_pal = 0x4,
  kWalls_iff = 0x5,
  kFloors_iff = 0x6,
  kUserData_Folder = 0x7,
  kGameData_Lights_Folder = 0x8,
  kUIText_Folder = 0x9,
  kNeighborhood_iff = 0xA,
  kGameData_Roofs_Folder = 0xB,
  kUIGraphics_Folder = 0xC,
  kUIGraphics_Fonts_Folder = 0xD,
  kFloors_Folder = 0xE,
  kWalls_Folder = 0xF,
  kTextures_Folder = 0x10,
  kTextures2_Folder = 0x11,
  kSkins_Folder = 0x12,
  kGameData_Objects_Folder = 0x13,
  kGameData_Global_Folder = 0x14,
  kGameData_UserObjects_Folder = 0x15,
  kDownloads_Folder = 0x16,
  kHouses_Folder = 0x17,
  kCharacters_Folder = 0x18,
  kWebPages_Folder = 0x19,
  kWebTemplates_Folder = 0x1A,
  kExport_Folder = 0x1B,
  kImport_Folder = 0x1C,
};

/* 599 */
struct /*VFT*/ BehaviorFinder_vtbl {
  void(__stdcall __noreturn *__purecall)();
};

/* 600 */
#pragma pack(push, 1)
struct __cppobj BehaviorFinder {
  BehaviorFinder_vtbl *__vftable /*VFT*/;
};
#pragma pack(pop)

/* 601 */
#pragma pack(push, 1)
struct struc_4989F0 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 602 */
struct cStringBuffer {
  char *buf;
  _DWORD fCapacity;
};

/* 603 */
#pragma pack(push, 1)
struct cPathBuffer {
  cStringBuffer buf;
  char *c_str;
};
#pragma pack(pop)

/* 604 */
#pragma pack(push, 1)
struct struc_498BF0 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 605 */
#pragma pack(push, 1)
struct struc_498DE0 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 606 */
#pragma pack(push, 1)
struct struc_434CF0 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 607 */
#pragma pack(push, 1)
struct struc_43F740 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 608 */
struct __cppobj ObjectFolder : BehaviorFinder, Commander {
  char byte_14;
  _BYTE gap_15[3];
  int dword_18;
  int dword_1c;
  struc_4989F0 field_20;
  ObjResFile *fGlobalFile;
  cPathBuffer field_30;
  _BYTE gap_3C[256];
  cPathBuffer field_13c;
  _BYTE gap_148[256];
  cPathBuffer field_248;
  _BYTE gap_254[256];
  cPathBuffer field_354;
  _BYTE gap_360[256];
  cPathBuffer field_460;
  _BYTE gap_46C[256];
  cPathBuffer field_56c;
  _BYTE gap_578[256];
  char byte_678;
  _BYTE gap_679[3];
  struc_498BF0 field_67c;
  struc_498DE0 field_688;
  _BYTE byte_694[12];
  struc_434CF0 field_6a0;
  struc_43F740 field_6ac;
};

/* 609 */
struct /*VFT*/ ObjectFolder_vtbl {
  char *(__thiscall *ObjectFolder_vtbl_func_0)(char *this, char a2);
  __int16(__thiscall *ObjectFolder_vtbl_func_1)(char *this, __int16 a2, int a3);
};

/* 610 */
struct /*VFT*/ ChainResFile_vtbl {
  void *(__thiscall *ChainResFile_vtbl_func_0)(void *this, char a2);
  void(__stdcall __noreturn *__purecall)();
  void *(__stdcall *duplicate_1_1)();
  void *(__stdcall *duplicate_1_2)();
  int(__thiscall *ChainResFile_vtbl_func_4)(_DWORD **this);
  int(__thiscall *ChainResFile_vtbl_func_5)(_DWORD **this);
  int(__thiscall *ChainResFile_vtbl_func_6)(_DWORD **this);
  int(__thiscall *ChainResFile_vtbl_func_7)(_DWORD **this);
  char(__thiscall *ChainResFile_vtbl_func_8)(_DWORD **this);
  void *(__stdcall *duplicate_1_3)();
  char(__thiscall *ChainResFile_vtbl_func_10)(_DWORD **this);
  __int16(__thiscall *ChainResFile_vtbl_func_11)(void *this);
  int(__thiscall *ChainResFile_vtbl_func_12)(void *this, __int16 a2);
  __int16(__thiscall *ChainResFile_vtbl_func_13)(_DWORD **this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_14)(void *this, int a2, __int16 a3,
                                             int a4);
  int(__thiscall *ChainResFile_vtbl_func_15)(_DWORD *this, int a2, int a3,
                                             int a4);
  int(__thiscall *ChainResFile_vtbl_func_16)(_DWORD **this, int a2, __int16 a3,
                                             int a4);
  int(__thiscall *ChainResFile_vtbl_func_17)(_DWORD *this, int a2, __int16 a3,
                                             char a4, int a5);
  int(__thiscall *ChainResFile_vtbl_func_18)(_DWORD *this, int a2, int a3);
  int(__thiscall *ChainResFile_vtbl_func_19)(_DWORD *this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_20)(_DWORD *this, int a2, int a3);
  int(__thiscall *ChainResFile_vtbl_func_21)(_DWORD *this, int a2, int a3);
  char(__thiscall *ChainResFile_vtbl_func_22)(_DWORD *this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_23)(_DWORD **this, int a2, int a3);
  __int16(__thiscall *ChainResFile_vtbl_func_24)(_DWORD **this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_25)(_DWORD *this, int a2);
  int(__stdcall *ChainResFile_vtbl_func_26)(int a1);
  char(__thiscall *ChainResFile_vtbl_func_27)(_DWORD **this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_28)(_DWORD *this, int a2, __int16 a3);
  int(__thiscall *ChainResFile_vtbl_func_29)(void *this, int a2, int a3,
                                             __int16 a4, int a5, char a6);
  int(__thiscall *ChainResFile_vtbl_func_30)(_DWORD *this, int a2, int a3,
                                             __int16 a4, int a5, char a6,
                                             char a7);
  int(__thiscall *ChainResFile_vtbl_func_31)(_DWORD *this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_32)(_DWORD *this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_33)(_DWORD *this, int a2, __int16 a3,
                                             int a4, char a5);
  int(__thiscall *iResFile_vtbl_func_34)(void *this, void *a2, __int16 a3,
                                         __int16 a4);
  __int16(__thiscall *ChainResFile_vtbl_func_35)(_WORD *this, int a2);
};

/* 611 */
#pragma pack(push, 1)
struct __cppobj ChainResFile : iResFile {
  char byte_c;
};
#pragma pack(pop)

/* 612 */
struct __cppobj SeqResFile : ChainResFile {
  _BYTE gap_D[159];
  _DWORD field_AC;
  cStringBuffer field_B0;
  _BYTE gapB8;
  char field_B9[167];
};

/* 613 */
#pragma pack(push, 1)
struct struc_4FD850 {
  _DWORD dword_0;
  _BYTE gap_4[168];
  int dword_ac;
};
#pragma pack(pop)

/* 614 */
#pragma pack(push, 1)
struct __cppobj StdResFile : SeqResFile {};
#pragma pack(pop)

/* 615 */
struct /*VFT*/ StdResFile_vtbl {
  void *(__thiscall *StdResFile_vtbl_func_0)(void *this, char a2);
  int(__thiscall *j_SeqResFile_004fdf7b)(_DWORD *this, int a2);
  int(__thiscall *j_SeqResFile_004fe515)(_DWORD *this, int a2);
  int(__thiscall *StdResFile_vtbl_func_3)(void *this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_4)(_DWORD **this);
  int(__thiscall *ChainResFile_vtbl_func_5)(_DWORD **this);
  int(__thiscall *j_SeqResFile_004feabe)(void *this);
  int(__thiscall *ChainResFile_vtbl_func_7)(_DWORD **this);
  char(__thiscall *ChainResFile_vtbl_func_8)(_DWORD **this);
  int(__thiscall *SeqResFile_vtbl_func_9)(void *this, int a2);
  char(__thiscall *ChainResFile_vtbl_func_10)(_DWORD **this);
  __int16(__thiscall *ChainResFile_vtbl_func_11)(void *this);
  int(__thiscall *ChainResFile_vtbl_func_12)(void *this, __int16 a2);
  __int16(__thiscall *ChainResFile_vtbl_func_13)(_DWORD **this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_14)(void *this, int a2, __int16 a3,
                                             int a4);
  int(__thiscall *ChainResFile_vtbl_func_15)(_DWORD *this, int a2, int a3,
                                             int a4);
  int(__thiscall *ChainResFile_vtbl_func_16)(_DWORD **this, int a2, __int16 a3,
                                             int a4);
  int(__thiscall *ChainResFile_vtbl_func_17)(_DWORD *this, int a2, __int16 a3,
                                             char a4, int a5);
  int(__thiscall *ChainResFile_vtbl_func_18)(_DWORD *this, int a2, int a3);
  int(__thiscall *ChainResFile_vtbl_func_19)(_DWORD *this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_20)(_DWORD *this, int a2, int a3);
  int(__thiscall *ChainResFile_vtbl_func_21)(_DWORD *this, int a2, int a3);
  char(__thiscall *ChainResFile_vtbl_func_22)(_DWORD *this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_23)(_DWORD **this, int a2, int a3);
  __int16(__thiscall *ChainResFile_vtbl_func_24)(_DWORD **this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_25)(_DWORD *this, int a2);
  int(__stdcall *ChainResFile_vtbl_func_26)(int a1);
  char(__thiscall *ChainResFile_vtbl_func_27)(_DWORD **this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_28)(_DWORD *this, int a2, __int16 a3);
  int(__thiscall *ChainResFile_vtbl_func_29)(void *this, int a2, int a3,
                                             __int16 a4, int a5, char a6);
  int(__thiscall *ChainResFile_vtbl_func_30)(_DWORD *this, int a2, int a3,
                                             __int16 a4, int a5, char a6,
                                             char a7);
  int(__thiscall *ChainResFile_vtbl_func_31)(_DWORD *this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_32)(_DWORD *this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_33)(_DWORD *this, int a2, __int16 a3,
                                             int a4, char a5);
  int(__thiscall *iResFile_vtbl_func_34)(void *this, void *a2, __int16 a3,
                                         __int16 a4);
  __int16(__thiscall *ChainResFile_vtbl_func_35)(_WORD *this, int a2);
};

/* 616 */
#pragma pack(push, 1)
struct stru_4C13F0 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 617 */
#pragma pack(push, 1)
struct stru_4C10B0 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 618 */
#pragma pack(push, 1)
struct stru_4C1270 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 619 */
struct /*VFT*/ ObjResFile_vtbl {
  void *(__thiscall *ObjResFile_vtbl_func_0)(void *this, char a2);
  int(__thiscall *j_SeqResFile_004fdf7b)(_DWORD *this, int a2);
  int(__thiscall *j_SeqResFile_004fe515)(_DWORD *this, int a2);
  int(__thiscall *StdResFile_vtbl_func_3)(void *this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_4)(_DWORD **this);
  int(__thiscall *ChainResFile_vtbl_func_5)(_DWORD **this);
  int(__thiscall *j_SeqResFile_004feabe)(void *this);
  int(__thiscall *ChainResFile_vtbl_func_7)(_DWORD **this);
  char(__thiscall *ChainResFile_vtbl_func_8)(_DWORD **this);
  int(__thiscall *SeqResFile_vtbl_func_9)(void *this, int a2);
  char(__thiscall *ValidFile)(_DWORD **this);
  __int16(__thiscall *ChainResFile_vtbl_func_11)(void *this);
  int(__thiscall *ChainResFile_vtbl_func_12)(void *this, __int16 a2);
  __int16(__thiscall *ChainResFile_vtbl_func_13)(_DWORD **this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_14)(void *this, int a2, __int16 a3,
                                             int a4);
  int(__thiscall *ChainResFile_vtbl_func_15)(_DWORD *this, int a2, int a3,
                                             int a4);
  int(__thiscall *ChainResFile_vtbl_func_16)(_DWORD **this, int a2, __int16 a3,
                                             int a4);
  int(__thiscall *ChainResFile_vtbl_func_17)(_DWORD *this, int a2, __int16 a3,
                                             char a4, int a5);
  int(__thiscall *ChainResFile_vtbl_func_18)(_DWORD *this, int a2, int a3);
  int(__thiscall *ChainResFile_vtbl_func_19)(_DWORD *this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_20)(_DWORD *this, int a2, int a3);
  int(__thiscall *ChainResFile_vtbl_func_21)(_DWORD *this, int a2, int a3);
  char(__thiscall *ChainResFile_vtbl_func_22)(_DWORD *this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_23)(_DWORD **this, int a2, int a3);
  __int16(__thiscall *ChainResFile_vtbl_func_24)(_DWORD **this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_25)(_DWORD *this, int a2);
  int(__stdcall *ChainResFile_vtbl_func_26)(int a1);
  char(__thiscall *ChainResFile_vtbl_func_27)(_DWORD **this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_28)(_DWORD *this, int a2, __int16 a3);
  int(__thiscall *ChainResFile_vtbl_func_29)(void *this, int a2, int a3,
                                             __int16 a4, int a5, char a6);
  int(__thiscall *ChainResFile_vtbl_func_30)(_DWORD *this, int a2, int a3,
                                             __int16 a4, int a5, char a6,
                                             char a7);
  int(__thiscall *ChainResFile_vtbl_func_31)(_DWORD *this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_32)(_DWORD *this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_33)(_DWORD *this, int a2, __int16 a3,
                                             int a4, char a5);
  int(__thiscall *iResFile_vtbl_func_34)(void *this, void *a2, __int16 a3,
                                         __int16 a4);
  __int16(__thiscall *ChainResFile_vtbl_func_35)(_WORD *this, int a2);
};

/* 620 */
#pragma pack(push, 1)
struct __cppobj ObjResFile : StdResFile {
  stru_4C13F0 field_160;
  stru_4C10B0 field_16c;
  stru_4C1270 field_178;
};
#pragma pack(pop)

/* 621 */
struct /*VFT*/ House_vtbl {
  void *(__thiscall *House_vtbl_func_0)(void *this, char a2);
  __int16(__thiscall *House_vtbl_func_1)(_DWORD *this, __int16 a2, int a3);
};

/* 622 */
#pragma pack(push, 1)
struct __cppobj House : Commander {
  int dword_10;
  int dword_14;
  int dword_18;
  int dword_1c;
  int dword_20;
  int dword_24;
  string field_28;
  int dword_30;
  int dword_34;
  _BYTE gap_38[36];
  _DWORD dword_5c;
  _BYTE gap_60[4];
  int dword_64;
  int dword_68;
};
#pragma pack(pop)

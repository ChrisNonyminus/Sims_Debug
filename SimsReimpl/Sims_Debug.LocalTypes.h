/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'Sims_Debug.exe'
*/

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

struct tagRECT;
struct HWND__;
union _LARGE_INTEGER;
struct _devicemodeA;
struct tagWNDCLASSEXA;
struct HINSTANCE__;
struct HICON__;
struct HBRUSH__;
struct _DOCINFOA;
struct _GUID;
struct _RTL_CRITICAL_SECTION_DEBUG;
struct tagWINDOWPLACEMENT;
struct tagSAFEARRAYBOUND;
struct HDC__;
struct tagLOGFONTA;
struct _SHFILEINFOA;
struct tagSTGMEDIUM;
struct HBITMAP__;
struct HENHMETAFILE__;
struct IStream;
struct IStreamVtbl;
union _ULARGE_INTEGER;
struct tagSTATSTG;
struct IStorage;
struct IStorageVtbl;
struct IEnumSTATSTG;
struct IEnumSTATSTGVtbl;
struct IUnknown;
struct IUnknownVtbl;
struct tagVARIANT;
struct IDispatch;
struct IDispatchVtbl;
struct ITypeInfo;
struct ITypeInfoVtbl;
struct tagTYPEATTR;
struct tagTYPEDESC;
struct tagARRAYDESC;
struct ITypeComp;
struct ITypeCompVtbl;
union tagBINDPTR;
struct tagFUNCDESC;
struct tagELEMDESC;
struct tagPARAMDESCEX;
struct tagVARDESC;
struct tagDISPPARAMS;
struct tagEXCEPINFO;
struct ITypeLib;
struct ITypeLibVtbl;
struct tagTLIBATTR;
struct tagSAFEARRAY;
struct tagDEC;
struct IRecordInfo;
struct IRecordInfoVtbl;
struct _s_ThrowInfo;
struct _s_CatchableTypeArray;
struct _s_CatchableType;
struct _iobuf;
struct HACCEL__;
struct ostream;
struct tagSCROLLINFO;
struct ios_vtbl;
struct streambuf_vtbl;
struct basic_string_ref<char>;
struct tagMODULEENTRY32;
struct _CRT_CRITICAL_SECTION_DEBUG;
struct cRZCmdLine;
struct cSimsApp;
struct cRZLanguageUtility_vtbl;
struct cGZFrameWorkW95;
struct cGZFontSys_vtbl;
struct cWinMemView;
struct cGZFrameWorkW95_vtbl;
struct cGZWin_vtbl;
struct cGZWin;
struct cRZKeyboard_vtbl;
struct cGZWinMgrW95_vtbl;
struct cGZWinMgrW95;
struct cRZFile;
struct cWinCPanel;
struct CPState_vtbl;
struct CPState;
struct cGZWinSplashScreen;
struct PalWrap_vtbl;
struct PalWrap;
struct BehaviorFinder_vtbl;
struct ObjectFolder;
struct StdResFile;
struct ObjResFile;
struct House;
struct cSimulator;
struct stru_73EA40;
struct WallManager_vtbl;
struct WallManager;
struct cRZCursorManager_vtbl;
struct cRZCursorManager;

/* 1 */
enum __TI_flags {
  TI_IsConst = 0x1,
  TI_IsVolatile = 0x2,
  TI_IsUnaligned = 0x4,
  TI_IsPure = 0x8,
  TI_IsWinRT = 0x10,
};

/* 2 */
enum __CT_flags {
  CT_IsSimpleType = 0x1,
  CT_ByReferenceOnly = 0x2,
  CT_HasVirtualBase = 0x4,
  CT_IsWinRTHandle = 0x8,
  CT_IsStdBadAlloc = 0x10,
};

/* 3 */
struct _SCOPETABLE_ENTRY {
  int EnclosingLevel;
  void *FilterFunc;
  void *HandlerFunc;
};

/* 4 */
typedef struct _SCOPETABLE_ENTRY *PSCOPETABLE_ENTRY;

/* 39 */
typedef void *PVOID;

/* 22 */
typedef unsigned int DWORD;

/* 5 */
struct _EH3_EXCEPTION_REGISTRATION {
  struct _EH3_EXCEPTION_REGISTRATION *Next;
  PVOID ExceptionHandler;
  PSCOPETABLE_ENTRY ScopeTable;
  DWORD TryLevel;
};

/* 6 */
typedef struct _EH3_EXCEPTION_REGISTRATION EH3_EXCEPTION_REGISTRATION;

/* 7 */
typedef struct _EH3_EXCEPTION_REGISTRATION *PEH3_EXCEPTION_REGISTRATION;

/* 8 */
struct CPPEH_RECORD {
  DWORD old_esp;
  EXCEPTION_POINTERS *exc_ptr;
  struct _EH3_EXCEPTION_REGISTRATION registration;
};

/* 9 */
typedef struct tagRECT RECT;

/* 11 */
typedef int LONG;

/* 10 */
struct tagRECT {
  LONG left;
  LONG top;
  LONG right;
  LONG bottom;
};

/* 12 */
struct tagPOINT {
  LONG x;
  LONG y;
};

/* 13 */
struct tagSIZE {
  LONG cx;
  LONG cy;
};

/* 15 */
typedef struct HWND__ *HWND;

/* 17 */
typedef unsigned int UINT;

/* 19 */
typedef unsigned int UINT_PTR;

/* 18 */
typedef UINT_PTR WPARAM;

/* 21 */
typedef int LONG_PTR;

/* 20 */
typedef LONG_PTR LPARAM;

/* 23 */
typedef struct tagPOINT POINT;

/* 14 */
struct tagMSG {
  HWND hwnd;
  UINT message;
  WPARAM wParam;
  LPARAM lParam;
  DWORD time;
  POINT pt;
};

/* 16 */
struct HWND__ {
  int unused;
};

/* 25 */
typedef unsigned __int8 BYTE;

/* 24 */
#pragma pack(push, 4)
struct tagTEXTMETRICA {
  LONG tmHeight;
  LONG tmAscent;
  LONG tmDescent;
  LONG tmInternalLeading;
  LONG tmExternalLeading;
  LONG tmAveCharWidth;
  LONG tmMaxCharWidth;
  LONG tmWeight;
  LONG tmOverhang;
  LONG tmDigitizedAspectX;
  LONG tmDigitizedAspectY;
  BYTE tmFirstChar;
  BYTE tmLastChar;
  BYTE tmDefaultChar;
  BYTE tmBreakChar;
  BYTE tmItalic;
  BYTE tmUnderlined;
  BYTE tmStruckOut;
  BYTE tmPitchAndFamily;
  BYTE tmCharSet;
};
#pragma pack(pop)

/* 26 */
typedef union _LARGE_INTEGER LARGE_INTEGER;

/* 28 */
struct _LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E {
  DWORD LowPart;
  LONG HighPart;
};

/* 29 */
typedef __int64 LONGLONG;

/* 27 */
union _LARGE_INTEGER {
  struct {
    DWORD LowPart;
    LONG HighPart;
  };
  struct _LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E u;
  LONGLONG QuadPart;
};

/* 31 */
typedef unsigned __int16 WORD;

/* 30 */
struct _SYSTEMTIME {
  WORD wYear;
  WORD wMonth;
  WORD wDayOfWeek;
  WORD wDay;
  WORD wHour;
  WORD wMinute;
  WORD wSecond;
  WORD wMilliseconds;
};

/* 34 */
struct _SYSTEM_INFO::$A707B71C060B6D10F73A71917EA8473F::
    $AA04DEB0C6383F89F13D312A174572A9 {
  WORD wProcessorArchitecture;
  WORD wReserved;
};

/* 33 */
union _SYSTEM_INFO::$A707B71C060B6D10F73A71917EA8473F {
  DWORD dwOemId;
  struct {
    WORD wProcessorArchitecture;
    WORD wReserved;
  };
};

/* 35 */
typedef void *LPVOID;

/* 37 */
typedef unsigned int ULONG_PTR;

/* 36 */
typedef ULONG_PTR DWORD_PTR;

/* 32 */
struct _SYSTEM_INFO {
  union {
    DWORD dwOemId;
    struct {
      WORD wProcessorArchitecture;
      WORD wReserved;
    };
  };
  DWORD dwPageSize;
  LPVOID lpMinimumApplicationAddress;
  LPVOID lpMaximumApplicationAddress;
  DWORD_PTR dwActiveProcessorMask;
  DWORD dwNumberOfProcessors;
  DWORD dwProcessorType;
  DWORD dwAllocationGranularity;
  WORD wProcessorLevel;
  WORD wProcessorRevision;
};

/* 40 */
typedef ULONG_PTR SIZE_T;

/* 38 */
struct _MEMORY_BASIC_INFORMATION {
  PVOID BaseAddress;
  PVOID AllocationBase;
  DWORD AllocationProtect;
  SIZE_T RegionSize;
  DWORD State;
  DWORD Protect;
  DWORD Type;
};

/* 41 */
typedef struct _devicemodeA DEVMODEA;

/* 44 */
struct _devicemodeA::$CB1E1A2E30D5738ACA9AADF670A603C7::
    $A4EE175A7532F35C00DA5CAD042934DF {
  __int16 dmOrientation;
  __int16 dmPaperSize;
  __int16 dmPaperLength;
  __int16 dmPaperWidth;
  __int16 dmScale;
  __int16 dmCopies;
  __int16 dmDefaultSource;
  __int16 dmPrintQuality;
};

/* 47 */
struct _POINTL {
  LONG x;
  LONG y;
};

/* 46 */
typedef struct _POINTL POINTL;

/* 45 */
struct _devicemodeA::$CB1E1A2E30D5738ACA9AADF670A603C7::
    $604F2BC6924E02F5722A52FC79BC44F9 {
  POINTL dmPosition;
  DWORD dmDisplayOrientation;
  DWORD dmDisplayFixedOutput;
};

/* 43 */
union _devicemodeA::$CB1E1A2E30D5738ACA9AADF670A603C7 {
  struct {
    __int16 dmOrientation;
    __int16 dmPaperSize;
    __int16 dmPaperLength;
    __int16 dmPaperWidth;
    __int16 dmScale;
    __int16 dmCopies;
    __int16 dmDefaultSource;
    __int16 dmPrintQuality;
  };
  struct {
    POINTL dmPosition;
    DWORD dmDisplayOrientation;
    DWORD dmDisplayFixedOutput;
  };
};

/* 48 */
union _devicemodeA::$4FBEBCCE69364E072421C9DF045BB77C {
  DWORD dmDisplayFlags;
  DWORD dmNup;
};

/* 42 */
struct _devicemodeA {
  BYTE dmDeviceName[32];
  WORD dmSpecVersion;
  WORD dmDriverVersion;
  WORD dmSize;
  WORD dmDriverExtra;
  DWORD dmFields;
  union {
    struct {
      __int16 dmOrientation;
      __int16 dmPaperSize;
      __int16 dmPaperLength;
      __int16 dmPaperWidth;
      __int16 dmScale;
      __int16 dmCopies;
      __int16 dmDefaultSource;
      __int16 dmPrintQuality;
    };
    struct {
      POINTL dmPosition;
      DWORD dmDisplayOrientation;
      DWORD dmDisplayFixedOutput;
    };
  };
  __int16 dmColor;
  __int16 dmDuplex;
  __int16 dmYResolution;
  __int16 dmTTOption;
  __int16 dmCollate;
  BYTE dmFormName[32];
  WORD dmLogPixels;
  DWORD dmBitsPerPel;
  DWORD dmPelsWidth;
  DWORD dmPelsHeight;
  union {
    DWORD dmDisplayFlags;
    DWORD dmNup;
  };
  DWORD dmDisplayFrequency;
  DWORD dmICMMethod;
  DWORD dmICMIntent;
  DWORD dmMediaType;
  DWORD dmDitherType;
  DWORD dmReserved1;
  DWORD dmReserved2;
  DWORD dmPanningWidth;
  DWORD dmPanningHeight;
};

/* 49 */
typedef struct tagWNDCLASSEXA WNDCLASSEXA;

/* 52 */
typedef LONG_PTR LRESULT;

/* 51 */
typedef LRESULT(__stdcall *WNDPROC)(HWND, UINT, WPARAM, LPARAM);

/* 53 */
typedef struct HINSTANCE__ *HINSTANCE;

/* 55 */
typedef struct HICON__ *HICON;

/* 57 */
typedef HICON HCURSOR;

/* 58 */
typedef struct HBRUSH__ *HBRUSH;

/* 61 */
typedef char CHAR;

/* 60 */
typedef const CHAR *LPCSTR;

/* 50 */
struct tagWNDCLASSEXA {
  UINT cbSize;
  UINT style;
  WNDPROC lpfnWndProc;
  int cbClsExtra;
  int cbWndExtra;
  HINSTANCE hInstance;
  HICON hIcon;
  HCURSOR hCursor;
  HBRUSH hbrBackground;
  LPCSTR lpszMenuName;
  LPCSTR lpszClassName;
  HICON hIconSm;
};

/* 54 */
struct HINSTANCE__ {
  int unused;
};

/* 56 */
struct HICON__ {
  int unused;
};

/* 59 */
struct HBRUSH__ {
  int unused;
};

/* 62 */
typedef struct _DOCINFOA DOCINFOA;

/* 63 */
struct _DOCINFOA {
  int cbSize;
  LPCSTR lpszDocName;
  LPCSTR lpszOutput;
  LPCSTR lpszDatatype;
  DWORD fwType;
};

/* 65 */
typedef struct _GUID GUID;

/* 64 */
typedef GUID IID;

/* 66 */
struct _GUID {
  unsigned int Data1;
  unsigned __int16 Data2;
  unsigned __int16 Data3;
  unsigned __int8 Data4[8];
};

/* 68 */
typedef struct _RTL_CRITICAL_SECTION_DEBUG *PRTL_CRITICAL_SECTION_DEBUG;

/* 72 */
typedef void *HANDLE;

/* 67 */
#pragma pack(push, 8)
struct _RTL_CRITICAL_SECTION {
  PRTL_CRITICAL_SECTION_DEBUG DebugInfo;
  LONG LockCount;
  LONG RecursionCount;
  HANDLE OwningThread;
  HANDLE LockSemaphore;
  ULONG_PTR SpinCount;
};
#pragma pack(pop)

/* 71 */
struct _LIST_ENTRY {
  struct _LIST_ENTRY *Flink;
  struct _LIST_ENTRY *Blink;
};

/* 70 */
typedef struct _LIST_ENTRY LIST_ENTRY;

/* 69 */
struct _RTL_CRITICAL_SECTION_DEBUG {
  WORD Type;
  WORD CreatorBackTraceIndex;
  struct _RTL_CRITICAL_SECTION *CriticalSection;
  LIST_ENTRY ProcessLocksList;
  DWORD EntryCount;
  DWORD ContentionCount;
  DWORD Flags;
  WORD CreatorBackTraceIndexHigh;
  WORD SpareWORD;
};

/* 73 */
typedef struct tagWINDOWPLACEMENT WINDOWPLACEMENT;

/* 74 */
struct tagWINDOWPLACEMENT {
  UINT length;
  UINT flags;
  UINT showCmd;
  POINT ptMinPosition;
  POINT ptMaxPosition;
  RECT rcNormalPosition;
};

/* 75 */
typedef GUID CLSID;

/* 80 */
typedef unsigned __int16 wchar_t;

/* 79 */
typedef wchar_t WCHAR;

/* 78 */
typedef WCHAR OLECHAR;

/* 77 */
typedef OLECHAR *LPOLESTR;

/* 84 */
typedef unsigned int ULONG;

/* 83 */
struct tagCY::$3EA7BC8C29B528C7CA1203FC489E132F {
  ULONG Lo;
  LONG Hi;
};

/* 82 */
union tagCY {
  struct {
    ULONG Lo;
    LONG Hi;
  };
  LONGLONG int64;
};

/* 81 */
typedef union tagCY CY;

/* 85 */
typedef __int16 SHORT;

/* 86 */
typedef int BOOL;

/* 76 */
#pragma pack(push, 8)
struct tagFONTDESC {
  UINT cbSizeofstruct;
  LPOLESTR lpstrName;
  CY cySize;
  SHORT sWeight;
  SHORT sCharset;
  BOOL fItalic;
  BOOL fUnderline;
  BOOL fStrikethrough;
};
#pragma pack(pop)

/* 87 */
typedef struct tagSAFEARRAYBOUND SAFEARRAYBOUND;

/* 88 */
#pragma pack(push, 8)
struct tagSAFEARRAYBOUND {
  ULONG cElements;
  LONG lLbound;
};
#pragma pack(pop)

/* 89 */
struct _FILETIME {
  DWORD dwLowDateTime;
  DWORD dwHighDateTime;
};

/* 91 */
typedef struct _SYSTEMTIME SYSTEMTIME;

/* 90 */
struct _TIME_ZONE_INFORMATION {
  LONG Bias;
  WCHAR StandardName[32];
  SYSTEMTIME StandardDate;
  LONG StandardBias;
  WCHAR DaylightName[32];
  SYSTEMTIME DaylightDate;
  LONG DaylightBias;
};

/* 92 */
struct _cpinfo {
  UINT MaxCharSize;
  BYTE DefaultChar[2];
  BYTE LeadByte[12];
};

/* 94 */
typedef CHAR *LPSTR;

/* 95 */
typedef BYTE *LPBYTE;

/* 93 */
struct _STARTUPINFOA {
  DWORD cb;
  LPSTR lpReserved;
  LPSTR lpDesktop;
  LPSTR lpTitle;
  DWORD dwX;
  DWORD dwY;
  DWORD dwXSize;
  DWORD dwYSize;
  DWORD dwXCountChars;
  DWORD dwYCountChars;
  DWORD dwFillAttribute;
  DWORD dwFlags;
  WORD wShowWindow;
  WORD cbReserved2;
  LPBYTE lpReserved2;
  HANDLE hStdInput;
  HANDLE hStdOutput;
  HANDLE hStdError;
};

/* 96 */
struct _OSVERSIONINFOA {
  DWORD dwOSVersionInfoSize;
  DWORD dwMajorVersion;
  DWORD dwMinorVersion;
  DWORD dwBuildNumber;
  DWORD dwPlatformId;
  CHAR szCSDVersion[128];
};

/* 97 */
struct _SECURITY_ATTRIBUTES {
  DWORD nLength;
  LPVOID lpSecurityDescriptor;
  BOOL bInheritHandle;
};

/* 99 */
typedef struct _FILETIME FILETIME;

/* 98 */
struct _WIN32_FIND_DATAA {
  DWORD dwFileAttributes;
  FILETIME ftCreationTime;
  FILETIME ftLastAccessTime;
  FILETIME ftLastWriteTime;
  DWORD nFileSizeHigh;
  DWORD nFileSizeLow;
  DWORD dwReserved0;
  DWORD dwReserved1;
  CHAR cFileName[260];
  CHAR cAlternateFileName[14];
};

/* 100 */
struct _MEMORYSTATUS {
  DWORD dwLength;
  DWORD dwMemoryLoad;
  SIZE_T dwTotalPhys;
  SIZE_T dwAvailPhys;
  SIZE_T dwTotalPageFile;
  SIZE_T dwAvailPageFile;
  SIZE_T dwTotalVirtual;
  SIZE_T dwAvailVirtual;
};

/* 102 */
typedef struct HDC__ *HDC;

/* 101 */
struct tagPAINTSTRUCT {
  HDC hdc;
  BOOL fErase;
  RECT rcPaint;
  BOOL fRestore;
  BOOL fIncUpdate;
  BYTE rgbReserved[32];
};

/* 103 */
struct HDC__ {
  int unused;
};

/* 104 */
struct tagWNDCLASSA {
  UINT style;
  WNDPROC lpfnWndProc;
  int cbClsExtra;
  int cbWndExtra;
  HINSTANCE hInstance;
  HICON hIcon;
  HCURSOR hCursor;
  HBRUSH hbrBackground;
  LPCSTR lpszMenuName;
  LPCSTR lpszClassName;
};

/* 105 */
struct tagPALETTEENTRY {
  BYTE peRed;
  BYTE peGreen;
  BYTE peBlue;
  BYTE peFlags;
};

/* 106 */
struct _PROCESS_INFORMATION {
  HANDLE hProcess;
  HANDLE hThread;
  DWORD dwProcessId;
  DWORD dwThreadId;
};

/* 107 */
typedef struct tagLOGFONTA LOGFONTA;

/* 108 */
struct tagLOGFONTA {
  LONG lfHeight;
  LONG lfWidth;
  LONG lfEscapement;
  LONG lfOrientation;
  LONG lfWeight;
  BYTE lfItalic;
  BYTE lfUnderline;
  BYTE lfStrikeOut;
  BYTE lfCharSet;
  BYTE lfOutPrecision;
  BYTE lfClipPrecision;
  BYTE lfQuality;
  BYTE lfPitchAndFamily;
  CHAR lfFaceName[32];
};

/* 109 */
typedef struct _SHFILEINFOA SHFILEINFOA;

/* 110 */
#pragma pack(push, 1)
struct _SHFILEINFOA {
  HICON hIcon;
  int iIcon;
  DWORD dwAttributes;
  CHAR szDisplayName[260];
  CHAR szTypeName[80];
};
#pragma pack(pop)

/* 112 */
typedef struct tagSTGMEDIUM uSTGMEDIUM;

/* 111 */
typedef uSTGMEDIUM STGMEDIUM;

/* 115 */
typedef struct HBITMAP__ *HBITMAP;

/* 117 */
typedef void *HMETAFILEPICT;

/* 118 */
typedef struct HENHMETAFILE__ *HENHMETAFILE;

/* 120 */
typedef HANDLE HGLOBAL;

/* 114 */
#pragma pack(push, 8)
union tagSTGMEDIUM::$7B772CC839E5463FC51219F893F364BB {
  HBITMAP hBitmap;
  HMETAFILEPICT hMetaFilePict;
  HENHMETAFILE hEnhMetaFile;
  HGLOBAL hGlobal;
  LPOLESTR lpszFileName;
  IStream *pstm;
  IStorage *pstg;
};
#pragma pack(pop)

/* 113 */
#pragma pack(push, 8)
struct tagSTGMEDIUM {
  DWORD tymed;
#pragma pack(push, 8)
  union {
    HBITMAP hBitmap;
    HMETAFILEPICT hMetaFilePict;
    HENHMETAFILE hEnhMetaFile;
    HGLOBAL hGlobal;
    LPOLESTR lpszFileName;
    IStream *pstm;
    IStorage *pstg;
  };
#pragma pack(pop)
  IUnknown *pUnkForRelease;
};
#pragma pack(pop)

/* 116 */
struct HBITMAP__ {
  int unused;
};

/* 119 */
struct HENHMETAFILE__ {
  int unused;
};

/* 121 */
#pragma pack(push, 8)
struct IStream {
  struct IStreamVtbl *lpVtbl;
};
#pragma pack(pop)

/* 130 */
#pragma pack(push, 8)
struct IStorage {
  struct IStorageVtbl *lpVtbl;
};
#pragma pack(pop)

/* 135 */
#pragma pack(push, 8)
struct IUnknown {
  struct IUnknownVtbl *lpVtbl;
};
#pragma pack(pop)

/* 123 */
typedef int HRESULT;

/* 124 */
typedef union _ULARGE_INTEGER ULARGE_INTEGER;

/* 126 */
struct _ULARGE_INTEGER::$0354AA9C204208F00D0965D07BBE7FAC {
  DWORD LowPart;
  DWORD HighPart;
};

/* 127 */
typedef unsigned __int64 ULONGLONG;

/* 125 */
union _ULARGE_INTEGER {
  struct {
    DWORD LowPart;
    DWORD HighPart;
  };
  struct _ULARGE_INTEGER::$0354AA9C204208F00D0965D07BBE7FAC u;
  ULONGLONG QuadPart;
};

/* 128 */
typedef struct tagSTATSTG STATSTG;

/* 122 */
#pragma pack(push, 8)
struct IStreamVtbl {
  HRESULT(__stdcall *QueryInterface)
  (IStream *This, const IID *const riid, void **ppvObject);
  ULONG(__stdcall *AddRef)(IStream *This);
  ULONG(__stdcall *Release)(IStream *This);
  HRESULT(__stdcall *Read)(IStream *This, void *pv, ULONG cb, ULONG *pcbRead);
  HRESULT(__stdcall *Write)
  (IStream *This, const void *pv, ULONG cb, ULONG *pcbWritten);
  HRESULT(__stdcall *Seek)
  (IStream *This, LARGE_INTEGER dlibMove, DWORD dwOrigin,
   ULARGE_INTEGER *plibNewPosition);
  HRESULT(__stdcall *SetSize)(IStream *This, ULARGE_INTEGER libNewSize);
  HRESULT(__stdcall *CopyTo)
  (IStream *This, IStream *pstm, ULARGE_INTEGER cb, ULARGE_INTEGER *pcbRead,
   ULARGE_INTEGER *pcbWritten);
  HRESULT(__stdcall *Commit)(IStream *This, DWORD grfCommitFlags);
  HRESULT(__stdcall *Revert)(IStream *This);
  HRESULT(__stdcall *LockRegion)
  (IStream *This, ULARGE_INTEGER libOffset, ULARGE_INTEGER cb,
   DWORD dwLockType);
  HRESULT(__stdcall *UnlockRegion)
  (IStream *This, ULARGE_INTEGER libOffset, ULARGE_INTEGER cb,
   DWORD dwLockType);
  HRESULT(__stdcall *Stat)(IStream *This, STATSTG *pstatstg, DWORD grfStatFlag);
  HRESULT(__stdcall *Clone)(IStream *This, IStream **ppstm);
};
#pragma pack(pop)

/* 132 */
typedef LPOLESTR *SNB;

/* 131 */
#pragma pack(push, 8)
struct IStorageVtbl {
  HRESULT(__stdcall *QueryInterface)
  (IStorage *This, const IID *const riid, void **ppvObject);
  ULONG(__stdcall *AddRef)(IStorage *This);
  ULONG(__stdcall *Release)(IStorage *This);
  HRESULT(__stdcall *CreateStream)
  (IStorage *This, const OLECHAR *pwcsName, DWORD grfMode, DWORD reserved1,
   DWORD reserved2, IStream **ppstm);
  HRESULT(__stdcall *OpenStream)
  (IStorage *This, const OLECHAR *pwcsName, void *reserved1, DWORD grfMode,
   DWORD reserved2, IStream **ppstm);
  HRESULT(__stdcall *CreateStorage)
  (IStorage *This, const OLECHAR *pwcsName, DWORD grfMode, DWORD reserved1,
   DWORD reserved2, IStorage **ppstg);
  HRESULT(__stdcall *OpenStorage)
  (IStorage *This, const OLECHAR *pwcsName, IStorage *pstgPriority,
   DWORD grfMode, SNB snbExclude, DWORD reserved, IStorage **ppstg);
  HRESULT(__stdcall *CopyTo)
  (IStorage *This, DWORD ciidExclude, const IID *rgiidExclude, SNB snbExclude,
   IStorage *pstgDest);
  HRESULT(__stdcall *MoveElementTo)
  (IStorage *This, const OLECHAR *pwcsName, IStorage *pstgDest,
   const OLECHAR *pwcsNewName, DWORD grfFlags);
  HRESULT(__stdcall *Commit)(IStorage *This, DWORD grfCommitFlags);
  HRESULT(__stdcall *Revert)(IStorage *This);
  HRESULT(__stdcall *EnumElements)
  (IStorage *This, DWORD reserved1, void *reserved2, DWORD reserved3,
   IEnumSTATSTG **ppenum);
  HRESULT(__stdcall *DestroyElement)(IStorage *This, const OLECHAR *pwcsName);
  HRESULT(__stdcall *RenameElement)
  (IStorage *This, const OLECHAR *pwcsOldName, const OLECHAR *pwcsNewName);
  HRESULT(__stdcall *SetElementTimes)
  (IStorage *This, const OLECHAR *pwcsName, const FILETIME *pctime,
   const FILETIME *patime, const FILETIME *pmtime);
  HRESULT(__stdcall *SetClass)(IStorage *This, const IID *const clsid);
  HRESULT(__stdcall *SetStateBits)
  (IStorage *This, DWORD grfStateBits, DWORD grfMask);
  HRESULT(__stdcall *Stat)
  (IStorage *This, STATSTG *pstatstg, DWORD grfStatFlag);
};
#pragma pack(pop)

/* 136 */
#pragma pack(push, 8)
struct IUnknownVtbl {
  HRESULT(__stdcall *QueryInterface)
  (IUnknown *This, const IID *const riid, void **ppvObject);
  ULONG(__stdcall *AddRef)(IUnknown *This);
  ULONG(__stdcall *Release)(IUnknown *This);
};
#pragma pack(pop)

/* 129 */
#pragma pack(push, 8)
struct tagSTATSTG {
  LPOLESTR pwcsName;
  DWORD type;
  ULARGE_INTEGER cbSize;
  FILETIME mtime;
  FILETIME ctime;
  FILETIME atime;
  DWORD grfMode;
  DWORD grfLocksSupported;
  CLSID clsid;
  DWORD grfStateBits;
  DWORD reserved;
};
#pragma pack(pop)

/* 133 */
#pragma pack(push, 8)
struct IEnumSTATSTG {
  struct IEnumSTATSTGVtbl *lpVtbl;
};
#pragma pack(pop)

/* 134 */
#pragma pack(push, 8)
struct IEnumSTATSTGVtbl {
  HRESULT(__stdcall *QueryInterface)
  (IEnumSTATSTG *This, const IID *const riid, void **ppvObject);
  ULONG(__stdcall *AddRef)(IEnumSTATSTG *This);
  ULONG(__stdcall *Release)(IEnumSTATSTG *This);
  HRESULT(__stdcall *Next)
  (IEnumSTATSTG *This, ULONG celt, STATSTG *rgelt, ULONG *pceltFetched);
  HRESULT(__stdcall *Skip)(IEnumSTATSTG *This, ULONG celt);
  HRESULT(__stdcall *Reset)(IEnumSTATSTG *This);
  HRESULT(__stdcall *Clone)(IEnumSTATSTG *This, IEnumSTATSTG **ppenum);
};
#pragma pack(pop)

/* 138 */
typedef struct tagVARIANT VARIANT;

/* 137 */
typedef VARIANT VARIANTARG;

/* 142 */
typedef unsigned __int16 VARTYPE;

/* 144 */
typedef float FLOAT;

/* 145 */
typedef double DOUBLE;

/* 146 */
typedef __int16 VARIANT_BOOL;

/* 147 */
typedef LONG SCODE;

/* 148 */
typedef double DATE;

/* 149 */
typedef OLECHAR *BSTR;

/* 206 */
typedef struct tagSAFEARRAY SAFEARRAY;

/* 165 */
typedef unsigned __int16 USHORT;

/* 195 */
typedef int INT;

/* 208 */
typedef struct tagDEC DECIMAL;

/* 214 */
#pragma pack(push, 8)
struct tagVARIANT::$::$::$E09503A454170B491AC1C4312CE36FE6::
    $0FDBD249F1AECD6A49409B6B82281578 {
  PVOID pvRecord;
  IRecordInfo *pRecInfo;
};
#pragma pack(pop)

/* 143 */
#pragma pack(push, 8)
union tagVARIANT::$::$65D68C826D16CA47CF95571D7BFCD657::
    $E09503A454170B491AC1C4312CE36FE6 {
  LONGLONG llVal;
  LONG lVal;
  BYTE bVal;
  SHORT iVal;
  FLOAT fltVal;
  DOUBLE dblVal;
  VARIANT_BOOL boolVal;
  SCODE scode;
  CY cyVal;
  DATE date;
  BSTR bstrVal;
  IUnknown *punkVal;
  IDispatch *pdispVal;
  SAFEARRAY *parray;
  BYTE *pbVal;
  SHORT *piVal;
  LONG *plVal;
  LONGLONG *pllVal;
  FLOAT *pfltVal;
  DOUBLE *pdblVal;
  VARIANT_BOOL *pboolVal;
  SCODE *pscode;
  CY *pcyVal;
  DATE *pdate;
  BSTR *pbstrVal;
  IUnknown **ppunkVal;
  IDispatch **ppdispVal;
  SAFEARRAY **pparray;
  VARIANT *pvarVal;
  PVOID byref;
  CHAR cVal;
  USHORT uiVal;
  ULONG ulVal;
  ULONGLONG ullVal;
  INT intVal;
  UINT uintVal;
  DECIMAL *pdecVal;
  CHAR *pcVal;
  USHORT *puiVal;
  ULONG *pulVal;
  ULONGLONG *pullVal;
  INT *pintVal;
  UINT *puintVal;
#pragma pack(push, 8)
  struct {
    PVOID pvRecord;
    IRecordInfo *pRecInfo;
  };
#pragma pack(pop)
};
#pragma pack(pop)

/* 141 */
#pragma pack(push, 8)
struct tagVARIANT::$E93DC971A089CC95F6C875332324C1E7::
    $65D68C826D16CA47CF95571D7BFCD657 {
  VARTYPE vt;
  WORD wReserved1;
  WORD wReserved2;
  WORD wReserved3;
#pragma pack(push, 8)
  union {
    LONGLONG llVal;
    LONG lVal;
    BYTE bVal;
    SHORT iVal;
    FLOAT fltVal;
    DOUBLE dblVal;
    VARIANT_BOOL boolVal;
    SCODE scode;
    CY cyVal;
    DATE date;
    BSTR bstrVal;
    IUnknown *punkVal;
    IDispatch *pdispVal;
    SAFEARRAY *parray;
    BYTE *pbVal;
    SHORT *piVal;
    LONG *plVal;
    LONGLONG *pllVal;
    FLOAT *pfltVal;
    DOUBLE *pdblVal;
    VARIANT_BOOL *pboolVal;
    SCODE *pscode;
    CY *pcyVal;
    DATE *pdate;
    BSTR *pbstrVal;
    IUnknown **ppunkVal;
    IDispatch **ppdispVal;
    SAFEARRAY **pparray;
    VARIANT *pvarVal;
    PVOID byref;
    CHAR cVal;
    USHORT uiVal;
    ULONG ulVal;
    ULONGLONG ullVal;
    INT intVal;
    UINT uintVal;
    DECIMAL *pdecVal;
    CHAR *pcVal;
    USHORT *puiVal;
    ULONG *pulVal;
    ULONGLONG *pullVal;
    INT *pintVal;
    UINT *puintVal;
#pragma pack(push, 8)
    struct {
      PVOID pvRecord;
      IRecordInfo *pRecInfo;
    };
#pragma pack(pop)
  };
#pragma pack(pop)
};
#pragma pack(pop)

/* 211 */
struct tagDEC::$64EC678C49E7BE49873AFBFB7A849D34::
    $7F8459940C2B08BD5D82B0F27239141B {
  BYTE scale;
  BYTE sign;
};

/* 210 */
union tagDEC::$64EC678C49E7BE49873AFBFB7A849D34 {
  struct {
    BYTE scale;
    BYTE sign;
  };
  USHORT signscale;
};

/* 213 */
struct tagDEC::$D28E26DEC3EC762C06C2AA9D0F7AC301::
    $674876891A86A76F12C10005982BCA56 {
  ULONG Lo32;
  ULONG Mid32;
};

/* 212 */
union tagDEC::$D28E26DEC3EC762C06C2AA9D0F7AC301 {
  struct {
    ULONG Lo32;
    ULONG Mid32;
  };
  ULONGLONG Lo64;
};

/* 209 */
struct tagDEC {
  USHORT wReserved;
  union {
    struct {
      BYTE scale;
      BYTE sign;
    };
    USHORT signscale;
  };
  ULONG Hi32;
  union {
    struct {
      ULONG Lo32;
      ULONG Mid32;
    };
    ULONGLONG Lo64;
  };
};

/* 140 */
#pragma pack(push, 8)
union tagVARIANT::$E93DC971A089CC95F6C875332324C1E7 {
#pragma pack(push, 8)
  struct {
    VARTYPE vt;
    WORD wReserved1;
    WORD wReserved2;
    WORD wReserved3;
#pragma pack(push, 8)
    union {
      LONGLONG llVal;
      LONG lVal;
      BYTE bVal;
      SHORT iVal;
      FLOAT fltVal;
      DOUBLE dblVal;
      VARIANT_BOOL boolVal;
      SCODE scode;
      CY cyVal;
      DATE date;
      BSTR bstrVal;
      IUnknown *punkVal;
      IDispatch *pdispVal;
      SAFEARRAY *parray;
      BYTE *pbVal;
      SHORT *piVal;
      LONG *plVal;
      LONGLONG *pllVal;
      FLOAT *pfltVal;
      DOUBLE *pdblVal;
      VARIANT_BOOL *pboolVal;
      SCODE *pscode;
      CY *pcyVal;
      DATE *pdate;
      BSTR *pbstrVal;
      IUnknown **ppunkVal;
      IDispatch **ppdispVal;
      SAFEARRAY **pparray;
      VARIANT *pvarVal;
      PVOID byref;
      CHAR cVal;
      USHORT uiVal;
      ULONG ulVal;
      ULONGLONG ullVal;
      INT intVal;
      UINT uintVal;
      DECIMAL *pdecVal;
      CHAR *pcVal;
      USHORT *puiVal;
      ULONG *pulVal;
      ULONGLONG *pullVal;
      INT *pintVal;
      UINT *puintVal;
#pragma pack(push, 8)
      struct {
        PVOID pvRecord;
        IRecordInfo *pRecInfo;
      };
#pragma pack(pop)
    };
#pragma pack(pop)
  };
#pragma pack(pop)
  DECIMAL decVal;
};
#pragma pack(pop)

/* 139 */
#pragma pack(push, 8)
struct tagVARIANT {
#pragma pack(push, 8)
  union {
#pragma pack(push, 8)
    struct {
      VARTYPE vt;
      WORD wReserved1;
      WORD wReserved2;
      WORD wReserved3;
#pragma pack(push, 8)
      union {
        LONGLONG llVal;
        LONG lVal;
        BYTE bVal;
        SHORT iVal;
        FLOAT fltVal;
        DOUBLE dblVal;
        VARIANT_BOOL boolVal;
        SCODE scode;
        CY cyVal;
        DATE date;
        BSTR bstrVal;
        IUnknown *punkVal;
        IDispatch *pdispVal;
        SAFEARRAY *parray;
        BYTE *pbVal;
        SHORT *piVal;
        LONG *plVal;
        LONGLONG *pllVal;
        FLOAT *pfltVal;
        DOUBLE *pdblVal;
        VARIANT_BOOL *pboolVal;
        SCODE *pscode;
        CY *pcyVal;
        DATE *pdate;
        BSTR *pbstrVal;
        IUnknown **ppunkVal;
        IDispatch **ppdispVal;
        SAFEARRAY **pparray;
        VARIANT *pvarVal;
        PVOID byref;
        CHAR cVal;
        USHORT uiVal;
        ULONG ulVal;
        ULONGLONG ullVal;
        INT intVal;
        UINT uintVal;
        DECIMAL *pdecVal;
        CHAR *pcVal;
        USHORT *puiVal;
        ULONG *pulVal;
        ULONGLONG *pullVal;
        INT *pintVal;
        UINT *puintVal;
#pragma pack(push, 8)
        struct {
          PVOID pvRecord;
          IRecordInfo *pRecInfo;
        };
#pragma pack(pop)
      };
#pragma pack(pop)
    };
#pragma pack(pop)
    DECIMAL decVal;
  };
#pragma pack(pop)
};
#pragma pack(pop)

/* 150 */
#pragma pack(push, 8)
struct IDispatch {
  struct IDispatchVtbl *lpVtbl;
};
#pragma pack(pop)

/* 207 */
#pragma pack(push, 8)
struct tagSAFEARRAY {
  USHORT cDims;
  USHORT fFeatures;
  ULONG cbElements;
  ULONG cLocks;
  PVOID pvData;
  SAFEARRAYBOUND rgsabound[1];
};
#pragma pack(pop)

/* 215 */
#pragma pack(push, 8)
struct IRecordInfo {
  struct IRecordInfoVtbl *lpVtbl;
};
#pragma pack(pop)

/* 152 */
typedef DWORD LCID;

/* 158 */
typedef LONG DISPID;

/* 196 */
typedef struct tagDISPPARAMS DISPPARAMS;

/* 198 */
typedef struct tagEXCEPINFO EXCEPINFO;

/* 151 */
#pragma pack(push, 8)
struct IDispatchVtbl {
  HRESULT(__stdcall *QueryInterface)
  (IDispatch *This, const IID *const riid, void **ppvObject);
  ULONG(__stdcall *AddRef)(IDispatch *This);
  ULONG(__stdcall *Release)(IDispatch *This);
  HRESULT(__stdcall *GetTypeInfoCount)(IDispatch *This, UINT *pctinfo);
  HRESULT(__stdcall *GetTypeInfo)
  (IDispatch *This, UINT iTInfo, LCID lcid, ITypeInfo **ppTInfo);
  HRESULT(__stdcall *GetIDsOfNames)
  (IDispatch *This, const IID *const riid, LPOLESTR *rgszNames, UINT cNames,
   LCID lcid, DISPID *rgDispId);
  HRESULT(__stdcall *Invoke)
  (IDispatch *This, DISPID dispIdMember, const IID *const riid, LCID lcid,
   WORD wFlags, DISPPARAMS *pDispParams, VARIANT *pVarResult,
   EXCEPINFO *pExcepInfo, UINT *puArgErr);
};
#pragma pack(pop)

/* 217 */
typedef const OLECHAR *LPCOLESTR;

/* 216 */
#pragma pack(push, 8)
struct IRecordInfoVtbl {
  HRESULT(__stdcall *QueryInterface)
  (IRecordInfo *This, const IID *const riid, void **ppvObject);
  ULONG(__stdcall *AddRef)(IRecordInfo *This);
  ULONG(__stdcall *Release)(IRecordInfo *This);
  HRESULT(__stdcall *RecordInit)(IRecordInfo *This, PVOID pvNew);
  HRESULT(__stdcall *RecordClear)(IRecordInfo *This, PVOID pvExisting);
  HRESULT(__stdcall *RecordCopy)
  (IRecordInfo *This, PVOID pvExisting, PVOID pvNew);
  HRESULT(__stdcall *GetGuid)(IRecordInfo *This, GUID *pguid);
  HRESULT(__stdcall *GetName)(IRecordInfo *This, BSTR *pbstrName);
  HRESULT(__stdcall *GetSize)(IRecordInfo *This, ULONG *pcbSize);
  HRESULT(__stdcall *GetTypeInfo)(IRecordInfo *This, ITypeInfo **ppTypeInfo);
  HRESULT(__stdcall *GetField)
  (IRecordInfo *This, PVOID pvData, LPCOLESTR szFieldName, VARIANT *pvarField);
  HRESULT(__stdcall *GetFieldNoCopy)
  (IRecordInfo *This, PVOID pvData, LPCOLESTR szFieldName, VARIANT *pvarField,
   PVOID *ppvDataCArray);
  HRESULT(__stdcall *PutField)
  (IRecordInfo *This, ULONG wFlags, PVOID pvData, LPCOLESTR szFieldName,
   VARIANT *pvarField);
  HRESULT(__stdcall *PutFieldNoCopy)
  (IRecordInfo *This, ULONG wFlags, PVOID pvData, LPCOLESTR szFieldName,
   VARIANT *pvarField);
  HRESULT(__stdcall *GetFieldNames)
  (IRecordInfo *This, ULONG *pcNames, BSTR *rgBstrNames);
  BOOL(__stdcall *IsMatchingType)(IRecordInfo *This, IRecordInfo *pRecordInfo);
  PVOID(__stdcall *RecordCreate)(IRecordInfo *This);
  HRESULT(__stdcall *RecordCreateCopy)
  (IRecordInfo *This, PVOID pvSource, PVOID *ppvDest);
  HRESULT(__stdcall *RecordDestroy)(IRecordInfo *This, PVOID pvRecord);
};
#pragma pack(pop)

/* 153 */
#pragma pack(push, 8)
struct ITypeInfo {
  struct ITypeInfoVtbl *lpVtbl;
};
#pragma pack(pop)

/* 197 */
#pragma pack(push, 8)
struct tagDISPPARAMS {
  VARIANTARG *rgvarg;
  DISPID *rgdispidNamedArgs;
  UINT cArgs;
  UINT cNamedArgs;
};
#pragma pack(pop)

/* 199 */
#pragma pack(push, 8)
struct tagEXCEPINFO {
  WORD wCode;
  WORD wReserved;
  BSTR bstrSource;
  BSTR bstrDescription;
  BSTR bstrHelpFile;
  DWORD dwHelpContext;
  PVOID pvReserved;
  HRESULT(__stdcall *pfnDeferredFillIn)(struct tagEXCEPINFO *);
  SCODE scode;
};
#pragma pack(pop)

/* 155 */
typedef struct tagTYPEATTR TYPEATTR;

/* 175 */
typedef struct tagFUNCDESC FUNCDESC;

/* 190 */
typedef struct tagVARDESC VARDESC;

/* 157 */
typedef DISPID MEMBERID;

/* 166 */
typedef DWORD HREFTYPE;

/* 187 */
enum tagINVOKEKIND {
  INVOKE_FUNC = 0x1,
  INVOKE_PROPERTYGET = 0x2,
  INVOKE_PROPERTYPUT = 0x4,
  INVOKE_PROPERTYPUTREF = 0x8,
};

/* 186 */
typedef enum tagINVOKEKIND INVOKEKIND;

/* 154 */
#pragma pack(push, 8)
struct ITypeInfoVtbl {
  HRESULT(__stdcall *QueryInterface)
  (ITypeInfo *This, const IID *const riid, void **ppvObject);
  ULONG(__stdcall *AddRef)(ITypeInfo *This);
  ULONG(__stdcall *Release)(ITypeInfo *This);
  HRESULT(__stdcall *GetTypeAttr)(ITypeInfo *This, TYPEATTR **ppTypeAttr);
  HRESULT(__stdcall *GetTypeComp)(ITypeInfo *This, ITypeComp **ppTComp);
  HRESULT(__stdcall *GetFuncDesc)
  (ITypeInfo *This, UINT index, FUNCDESC **ppFuncDesc);
  HRESULT(__stdcall *GetVarDesc)
  (ITypeInfo *This, UINT index, VARDESC **ppVarDesc);
  HRESULT(__stdcall *GetNames)
  (ITypeInfo *This, MEMBERID memid, BSTR *rgBstrNames, UINT cMaxNames,
   UINT *pcNames);
  HRESULT(__stdcall *GetRefTypeOfImplType)
  (ITypeInfo *This, UINT index, HREFTYPE *pRefType);
  HRESULT(__stdcall *GetImplTypeFlags)
  (ITypeInfo *This, UINT index, INT *pImplTypeFlags);
  HRESULT(__stdcall *GetIDsOfNames)
  (ITypeInfo *This, LPOLESTR *rgszNames, UINT cNames, MEMBERID *pMemId);
  HRESULT(__stdcall *Invoke)
  (ITypeInfo *This, PVOID pvInstance, MEMBERID memid, WORD wFlags,
   DISPPARAMS *pDispParams, VARIANT *pVarResult, EXCEPINFO *pExcepInfo,
   UINT *puArgErr);
  HRESULT(__stdcall *GetDocumentation)
  (ITypeInfo *This, MEMBERID memid, BSTR *pBstrName, BSTR *pBstrDocString,
   DWORD *pdwHelpContext, BSTR *pBstrHelpFile);
  HRESULT(__stdcall *GetDllEntry)
  (ITypeInfo *This, MEMBERID memid, INVOKEKIND invKind, BSTR *pBstrDllName,
   BSTR *pBstrName, WORD *pwOrdinal);
  HRESULT(__stdcall *GetRefTypeInfo)
  (ITypeInfo *This, HREFTYPE hRefType, ITypeInfo **ppTInfo);
  HRESULT(__stdcall *AddressOfMember)
  (ITypeInfo *This, MEMBERID memid, INVOKEKIND invKind, PVOID *ppv);
  HRESULT(__stdcall *CreateInstance)
  (ITypeInfo *This, IUnknown *pUnkOuter, const IID *const riid, PVOID *ppvObj);
  HRESULT(__stdcall *GetMops)(ITypeInfo *This, MEMBERID memid, BSTR *pBstrMops);
  HRESULT(__stdcall *GetContainingTypeLib)
  (ITypeInfo *This, ITypeLib **ppTLib, UINT *pIndex);
  void(__stdcall *ReleaseTypeAttr)(ITypeInfo *This, TYPEATTR *pTypeAttr);
  void(__stdcall *ReleaseFuncDesc)(ITypeInfo *This, FUNCDESC *pFuncDesc);
  void(__stdcall *ReleaseVarDesc)(ITypeInfo *This, VARDESC *pVarDesc);
};
#pragma pack(pop)

/* 160 */
enum tagTYPEKIND {
  TKIND_ENUM = 0x0,
  TKIND_RECORD = 0x1,
  TKIND_MODULE = 0x2,
  TKIND_INTERFACE = 0x3,
  TKIND_DISPATCH = 0x4,
  TKIND_COCLASS = 0x5,
  TKIND_ALIAS = 0x6,
  TKIND_UNION = 0x7,
  TKIND_MAX = 0x8,
};

/* 159 */
typedef enum tagTYPEKIND TYPEKIND;

/* 163 */
#pragma pack(push, 8)
union tagTYPEDESC::$AC700B6542D8071E244CADABF8A32897 {
  struct tagTYPEDESC *lptdesc;
  struct tagARRAYDESC *lpadesc;
  HREFTYPE hreftype;
};
#pragma pack(pop)

/* 162 */
#pragma pack(push, 8)
struct tagTYPEDESC {
#pragma pack(push, 8)
  union {
    struct tagTYPEDESC *lptdesc;
    struct tagARRAYDESC *lpadesc;
    HREFTYPE hreftype;
  };
#pragma pack(pop)
  VARTYPE vt;
};
#pragma pack(pop)

/* 161 */
typedef struct tagTYPEDESC TYPEDESC;

/* 168 */
#pragma pack(push, 8)
struct tagIDLDESC {
  ULONG_PTR dwReserved;
  USHORT wIDLFlags;
};
#pragma pack(pop)

/* 167 */
typedef struct tagIDLDESC IDLDESC;

/* 156 */
#pragma pack(push, 8)
struct tagTYPEATTR {
  GUID guid;
  LCID lcid;
  DWORD dwReserved;
  MEMBERID memidConstructor;
  MEMBERID memidDestructor;
  LPOLESTR lpstrSchema;
  ULONG cbSizeInstance;
  TYPEKIND typekind;
  WORD cFuncs;
  WORD cVars;
  WORD cImplTypes;
  WORD cbSizeVft;
  WORD cbAlignment;
  WORD wTypeFlags;
  WORD wMajorVerNum;
  WORD wMinorVerNum;
  TYPEDESC tdescAlias;
  IDLDESC idldescType;
};
#pragma pack(pop)

/* 169 */
#pragma pack(push, 8)
struct ITypeComp {
  struct ITypeCompVtbl *lpVtbl;
};
#pragma pack(pop)

/* 177 */
typedef struct tagELEMDESC ELEMDESC;

/* 185 */
enum tagFUNCKIND {
  FUNC_VIRTUAL = 0x0,
  FUNC_PUREVIRTUAL = 0x1,
  FUNC_NONVIRTUAL = 0x2,
  FUNC_STATIC = 0x3,
  FUNC_DISPATCH = 0x4,
};

/* 184 */
typedef enum tagFUNCKIND FUNCKIND;

/* 189 */
enum tagCALLCONV {
  CC_FASTCALL = 0x0,
  CC_CDECL = 0x1,
  CC_MSCPASCAL = 0x2,
  CC_PASCAL = 0x2,
  CC_MACPASCAL = 0x3,
  CC_STDCALL = 0x4,
  CC_FPFASTCALL = 0x5,
  CC_SYSCALL = 0x6,
  CC_MPWCDECL = 0x7,
  CC_MPWPASCAL = 0x8,
  CC_MAX = 0x9,
};

/* 188 */
typedef enum tagCALLCONV CALLCONV;

/* 182 */
typedef struct tagPARAMDESCEX *LPPARAMDESCEX;

/* 181 */
#pragma pack(push, 8)
struct tagPARAMDESC {
  LPPARAMDESCEX pparamdescex;
  USHORT wParamFlags;
};
#pragma pack(pop)

/* 180 */
typedef struct tagPARAMDESC PARAMDESC;

/* 179 */
#pragma pack(push, 8)
union tagELEMDESC::$7C8F4CED1424251743D09680A1A0B07D {
  IDLDESC idldesc;
  PARAMDESC paramdesc;
};
#pragma pack(pop)

/* 178 */
#pragma pack(push, 8)
struct tagELEMDESC {
  TYPEDESC tdesc;
#pragma pack(push, 8)
  union {
    IDLDESC idldesc;
    PARAMDESC paramdesc;
  };
#pragma pack(pop)
};
#pragma pack(pop)

/* 176 */
#pragma pack(push, 8)
struct tagFUNCDESC {
  MEMBERID memid;
  SCODE *lprgscode;
  ELEMDESC *lprgelemdescParam;
  FUNCKIND funckind;
  INVOKEKIND invkind;
  CALLCONV callconv;
  SHORT cParams;
  SHORT cParamsOpt;
  SHORT oVft;
  SHORT cScodes;
  ELEMDESC elemdescFunc;
  WORD wFuncFlags;
};
#pragma pack(pop)

/* 192 */
#pragma pack(push, 8)
union tagVARDESC::$E6274BD6A7149C9CC2413444FF769F0B {
  ULONG oInst;
  VARIANT *lpvarValue;
};
#pragma pack(pop)

/* 194 */
enum tagVARKIND {
  VAR_PERINSTANCE = 0x0,
  VAR_STATIC = 0x1,
  VAR_CONST = 0x2,
  VAR_DISPATCH = 0x3,
};

/* 193 */
typedef enum tagVARKIND VARKIND;

/* 191 */
#pragma pack(push, 8)
struct tagVARDESC {
  MEMBERID memid;
  LPOLESTR lpstrSchema;
#pragma pack(push, 8)
  union {
    ULONG oInst;
    VARIANT *lpvarValue;
  };
#pragma pack(pop)
  ELEMDESC elemdescVar;
  WORD wVarFlags;
  VARKIND varkind;
};
#pragma pack(pop)

/* 200 */
#pragma pack(push, 8)
struct ITypeLib {
  struct ITypeLibVtbl *lpVtbl;
};
#pragma pack(pop)

/* 164 */
#pragma pack(push, 8)
struct tagARRAYDESC {
  TYPEDESC tdescElem;
  USHORT cDims;
  SAFEARRAYBOUND rgbounds[1];
};
#pragma pack(pop)

/* 172 */
enum tagDESCKIND {
  DESCKIND_NONE = 0x0,
  DESCKIND_FUNCDESC = 0x1,
  DESCKIND_VARDESC = 0x2,
  DESCKIND_TYPECOMP = 0x3,
  DESCKIND_IMPLICITAPPOBJ = 0x4,
  DESCKIND_MAX = 0x5,
};

/* 171 */
typedef enum tagDESCKIND DESCKIND;

/* 173 */
typedef union tagBINDPTR BINDPTR;

/* 170 */
#pragma pack(push, 8)
struct ITypeCompVtbl {
  HRESULT(__stdcall *QueryInterface)
  (ITypeComp *This, const IID *const riid, void **ppvObject);
  ULONG(__stdcall *AddRef)(ITypeComp *This);
  ULONG(__stdcall *Release)(ITypeComp *This);
  HRESULT(__stdcall *Bind)
  (ITypeComp *This, LPOLESTR szName, ULONG lHashVal, WORD wFlags,
   ITypeInfo **ppTInfo, DESCKIND *pDescKind, BINDPTR *pBindPtr);
  HRESULT(__stdcall *BindType)
  (ITypeComp *This, LPOLESTR szName, ULONG lHashVal, ITypeInfo **ppTInfo,
   ITypeComp **ppTComp);
};
#pragma pack(pop)

/* 183 */
#pragma pack(push, 8)
struct tagPARAMDESCEX {
  ULONG cBytes;
  VARIANTARG varDefaultValue;
};
#pragma pack(pop)

/* 202 */
typedef struct tagTLIBATTR TLIBATTR;

/* 201 */
#pragma pack(push, 8)
struct ITypeLibVtbl {
  HRESULT(__stdcall *QueryInterface)
  (ITypeLib *This, const IID *const riid, void **ppvObject);
  ULONG(__stdcall *AddRef)(ITypeLib *This);
  ULONG(__stdcall *Release)(ITypeLib *This);
  UINT(__stdcall *GetTypeInfoCount)(ITypeLib *This);
  HRESULT(__stdcall *GetTypeInfo)
  (ITypeLib *This, UINT index, ITypeInfo **ppTInfo);
  HRESULT(__stdcall *GetTypeInfoType)
  (ITypeLib *This, UINT index, TYPEKIND *pTKind);
  HRESULT(__stdcall *GetTypeInfoOfGuid)
  (ITypeLib *This, const GUID *const guid, ITypeInfo **ppTinfo);
  HRESULT(__stdcall *GetLibAttr)(ITypeLib *This, TLIBATTR **ppTLibAttr);
  HRESULT(__stdcall *GetTypeComp)(ITypeLib *This, ITypeComp **ppTComp);
  HRESULT(__stdcall *GetDocumentation)
  (ITypeLib *This, INT index, BSTR *pBstrName, BSTR *pBstrDocString,
   DWORD *pdwHelpContext, BSTR *pBstrHelpFile);
  HRESULT(__stdcall *IsName)
  (ITypeLib *This, LPOLESTR szNameBuf, ULONG lHashVal, BOOL *pfName);
  HRESULT(__stdcall *FindName)
  (ITypeLib *This, LPOLESTR szNameBuf, ULONG lHashVal, ITypeInfo **ppTInfo,
   MEMBERID *rgMemId, USHORT *pcFound);
  void(__stdcall *ReleaseTLibAttr)(ITypeLib *This, TLIBATTR *pTLibAttr);
};
#pragma pack(pop)

/* 174 */
#pragma pack(push, 8)
union tagBINDPTR {
  FUNCDESC *lpfuncdesc;
  VARDESC *lpvardesc;
  ITypeComp *lptcomp;
};
#pragma pack(pop)

/* 205 */
enum tagSYSKIND {
  SYS_WIN16 = 0x0,
  SYS_WIN32 = 0x1,
  SYS_MAC = 0x2,
  SYS_WIN64 = 0x3,
};

/* 204 */
typedef enum tagSYSKIND SYSKIND;

/* 203 */
#pragma pack(push, 8)
struct tagTLIBATTR {
  GUID guid;
  LCID lcid;
  SYSKIND syskind;
  WORD wMajorVerNum;
  WORD wMinorVerNum;
  WORD wLibFlags;
};
#pragma pack(pop)

/* 218 */
struct FuncInfoV1 {
  int magicNumber;
  int maxState;
  void *pUnwindMap;
  int nTryBlocks;
  void *pTryBlockMap;
  int nIPMapEntries;
  void *pIPtoStateMap;
};

/* 219 */
struct UnwindMapEntry {
  int toState;
  void *action;
};

/* 220 */
struct TryBlockMapEntry {
  int tryLow;
  int tryHigh;
  int catchHigh;
  int nCatches;
  void *pHandlerArray;
};

/* 221 */
struct HandlerType {
  int adjectives;
  void *pType;
  int dispCatchObj;
  void *addressOfHandler;
};

/* 222 */
struct TypeDescriptor {
  void *pVFTable;
  void *spare;
  char name[];
};

/* 224 */
typedef const struct _s_ThrowInfo ThrowInfo;

/* 223 */
typedef ThrowInfo _ThrowInfo;

/* 226 */
typedef void(__cdecl *PMFN)(void *);

/* 227 */
typedef const struct _s_CatchableTypeArray CatchableTypeArray;

/* 225 */
#pragma pack(push, 4)
struct _s_ThrowInfo {
  unsigned int attributes;
  PMFN pmfnUnwind;
  int(__cdecl *pForwardCompat)();
  CatchableTypeArray *pCatchableTypeArray;
};
#pragma pack(pop)

/* 229 */
typedef const struct _s_CatchableType CatchableType;

/* 228 */
#pragma pack(push, 4)
struct _s_CatchableTypeArray {
  int nCatchableTypes;
  CatchableType *arrayOfCatchableTypes[];
};
#pragma pack(pop)

/* 231 */
#pragma pack(push, 4)
struct PMD {
  int mdisp;
  int pdisp;
  int vdisp;
};
#pragma pack(pop)

/* 230 */
#pragma pack(push, 4)
struct _s_CatchableType {
  unsigned int properties;
  TypeDescriptor *pType;
  PMD thisDisplacement;
  int sizeOrOffset;
  PMFN copyFunction;
};
#pragma pack(pop)

/* 232 */
typedef struct _iobuf FILE;

/* 233 */
struct _iobuf {
  char *_ptr;
  int _cnt;
  char *_base;
  int _flag;
  int _file;
  int _charbuf;
  int _bufsiz;
  char *_tmpfname;
};

/* 234 */
#pragma pack(push, 8)
struct tm {
  int tm_sec;
  int tm_min;
  int tm_hour;
  int tm_mday;
  int tm_mon;
  int tm_year;
  int tm_wday;
  int tm_yday;
  int tm_isdst;
};
#pragma pack(pop)

/* 236 */
typedef struct HACCEL__ *HACCEL;

/* 235 */
#pragma pack(push, 8)
struct tagOIFI {
  UINT cb;
  BOOL fMDIApp;
  HWND hwndFrame;
  HACCEL haccel;
  UINT cAccelEntries;
};
#pragma pack(pop)

/* 237 */
struct HACCEL__ {
  int unused;
};

/* 238 */
typedef struct tagMSG MSG;

/* 239 */
struct _OFSTRUCT {
  BYTE cBytes;
  BYTE fFixedDisk;
  WORD nErrCode;
  WORD Reserved1;
  WORD Reserved2;
  CHAR szPathName[128];
};

/* 240 */
struct CTypeLibCache;

/* 241 */
struct CDataBoundProperty;

/* 242 */
struct AFX_EVENT;

/* 419 */
struct _CRT_CRITICAL_SECTION {
  _CRT_CRITICAL_SECTION_DEBUG *DebugInfo;
  int LockCount;
  int RecursionCount;
  void *OwningThread;
  void *LockSemaphore;
  unsigned int Reserved;
};

/* 243 */
struct __cppobj streambuf {
  streambuf_vtbl *__vftable /*VFT*/;
  int _fAlloc;
  int _fUnbuf;
  int x_lastc;
  char *_base;
  char *_ebuf;
  char *_pbase;
  char *_pptr;
  char *_epptr;
  char *_eback;
  char *_gptr;
  char *_egptr;
  int LockFlg;
  _CRT_CRITICAL_SECTION x_lock;
};

/* 370 */
enum ios::seek_dir : __int32 {
  beg = 0x0,
  cur = 0x1,
  end = 0x2,
};

/* 371 */
struct /*VFT*/ streambuf_vtbl {
  void(__thiscall * ~streambuf)(streambuf *this);
  int(__thiscall *sync)(streambuf *this);
  streambuf *(__thiscall *setbuf)(streambuf *this, char *, int);
  int(__thiscall *seekoff)(streambuf *this, int, ios::seek_dir, int);
  int(__thiscall *seekpos)(streambuf *this, int, int);
  int(__thiscall *xsputn)(streambuf *this, const char *, int);
  int(__thiscall *xsgetn)(streambuf *this, char *, int);
  int(__thiscall *overflow)(streambuf *this, int);
  int(__thiscall *underflow)(streambuf *this);
  int(__thiscall *pbackfail)(streambuf *this, int);
  int(__thiscall *doallocate)(streambuf *this);
};

/* 420 */
struct __CRT_LIST_ENTRY {
  __CRT_LIST_ENTRY *Flink;
  __CRT_LIST_ENTRY *Blink;
};

/* 421 */
struct _CRT_CRITICAL_SECTION_DEBUG {
  unsigned __int16 Type;
  unsigned __int16 CreatorBackTraceIndex;
  _CRT_CRITICAL_SECTION *CriticalSection;
  __CRT_LIST_ENTRY ProcessLocksList;
  unsigned int EntryCount;
  unsigned int ContentionCount;
  unsigned int Depth;
  void *OwnerBackTrace[5];
};

/* 244 */
struct ATL::CManualAccessor;

/* 245 */
struct COleControlLock;

/* 246 */
struct Concurrency::details::SchedulerProxy;

/* 247 */
struct type_info;

/* 248 */
struct Concurrency::details::UMSFreeVirtualProcessorRoot;

/* 249 */
struct exception;

/* 250 */
struct Concurrency::details::platform;

/* 251 */
#pragma pack(push, 8)
struct __cppobj ios {
  ios_vtbl *__vftable /*VFT*/;
  streambuf *bp;
  int state;
  int ispecial;
  int ospecial;
  int isfx_special;
  int osfx_special;
  int x_delbuf;
  ostream *x_tie;
  __int32 x_flags;
  int x_precision;
  char x_fill;
  int x_width;
};
#pragma pack(pop)

/* 369 */
struct /*VFT*/ ios_vtbl {
  void(__thiscall * ~ios)(ios *this);
};

/* 289 */
#pragma pack(push, 8)
struct __cppobj ostream : virtual ios {
  int x_floatused;
};
#pragma pack(pop)

/* 252 */
#pragma pack(push, 8)
struct __cppobj istream : virtual ios {
  int _fGline;
  int x_gcount;
};
#pragma pack(pop)

/* 253 */
struct Concurrency::details::_CancellationTokenRegistration;

/* 254 */
struct Concurrency::details::ExecutionResource;

/* 255 */
struct CPaneContainer;

/* 256 */
struct strstreambuf;

/* 257 */
struct CColorDialog;

/* 258 */
struct COlePropertyPage::XPropNotifySink;

/* 259 */
struct CWinApp;

/* 260 */
struct std::_Ref_count_base;

/* 261 */
struct CCmdTarget;

/* 262 */
struct CCmdUI;

/* 263 */
struct CException;

/* 264 */
struct Concurrency::details::UMSFreeVirtualProcessorRoot::InitialThreadParam;

/* 265 */
struct CDC;

/* 266 */
struct CSingleDocTemplate;

/* 267 */
struct CRect;

/* 268 */
struct Concurrency::details::VirtualProcessor;

/* 269 */
struct CMFCToolBarImages;

/* 270 */
struct ATL::CComVariant;

/* 271 */
struct CLongBinary;

/* 272 */
struct _AFX_OLE_STATE;

/* 273 */
struct CWinThread;

/* 274 */
struct CDockBar;

/* 275 */
struct CMemoryException;

/* 276 */
struct CNotSupportedException;

/* 277 */
struct _AFX_PROPPAGEFONTINFO;

/* 278 */
struct CMFCRibbonPanel;

/* 279 */
struct COleDialog;

/* 280 */
struct COleDataSource::XDataObject;

/* 281 */
struct COleDropSource;

/* 282 */
struct COleDropSource::XDropSource;

/* 283 */
struct COleServerDoc;

/* 284 */
struct COleServerItem::XOleObject;

/* 285 */
struct COleDispatchDriver;

/* 286 */
struct CPrintPreviewState;

/* 287 */
struct CPreviewView::PAGE_INFO;

/* 288 */
struct CMetaFileDC;

/* 290 */
struct filebuf;

/* 291 */
struct _AFX_COLOR_STATE;

/* 292 */
struct CFileStatus;

/* 293 */
struct _AFX_CONTROLPOS;

/* 294 */
struct CDaoIndexFieldInfo;

/* 295 */
struct CNewTypeDlg;

/* 296 */
struct fstream;

/* 297 */
struct CSimpleList;

/* 298 */
struct AFX_CLASSINIT;

/* 299 */
struct CEnumUnknown;

/* 300 */
struct CHandleMap;

/* 301 */
struct CTypeLibCacheMap;

/* 302 */
struct COleCmdUI;

/* 303 */
struct Concurrency::scheduler_worker_creation_error;

/* 304 */
struct __non_rtti_object;

/* 305 */
struct bad_typeid;

/* 306 */
struct bad_cast;

/* 307 */
struct __cppobj ostream_withassign : ostream {};

/* 308 */
#pragma pack(push, 8)
struct __cppobj istream_withassign : istream {};
#pragma pack(pop)

/* 309 */
struct istrstream;

/* 310 */
struct ostrstream;

/* 311 */
struct strstream;

/* 312 */
struct ofstream;

/* 313 */
struct ifstream;

/* 314 */
#pragma pack(push, 8)
struct __cppobj iostream : istream, ostream {};
#pragma pack(pop)

/* 315 */
struct CSimpleException;

/* 316 */
struct _AFX_DEBUG_STATE;

/* 317 */
struct CTraceClipboardData;

/* 318 */
struct CFileDialog;

/* 319 */
struct Concurrency::details::_NonReentrantPPLLock;

/* 320 */
struct CFormView;

/* 321 */
typedef struct tagWNDCLASSA WNDCLASSA;

/* 322 */
typedef struct tagSCROLLINFO SCROLLINFO;

/* 323 */
struct tagSCROLLINFO {
  UINT cbSize;
  UINT fMask;
  int nMin;
  int nMax;
  UINT nPage;
  int nPos;
  int nTrackPos;
};

/* 324 */
struct CString;

/* 325 */
struct AUX_DATA;

/* 326 */
struct CFile;

/* 327 */
struct CMemFile;

/* 328 */
struct CMirrorFile;

/* 329 */
struct CCtrlView;

/* 330 */
struct std::ios_base;

/* 331 */
struct CArchiveException;

/* 332 */
struct CDocManager;

/* 333 */
struct CStatusBar;

/* 334 */
struct CMiniDockFrameWnd;

/* 335 */
struct CSharedFile;

/* 336 */
struct CSessionMapPtrToPtr;

/* 337 */
struct CBitmapButton;

/* 338 */
struct _AFX_BASE_MODULE_STATE;

/* 339 */
struct _AFX_WIN_STATE;

/* 340 */
struct _AFX_CTL3D_STATE;

/* 341 */
struct _AFX_CTL3D_THREAD;

/* 342 */
struct COleObjectFactory;

/* 343 */
struct COleMessageFilter;

/* 344 */
struct COleBusyDialog;

/* 345 */
struct COleDataSource;

/* 346 */
struct CPrintingDialog;

/* 347 */
enum AlphaZSpriteBlitter::PixelType {
  kP16_565 = 2,
};

/* 348 */
#pragma pack(push, 1)
struct ObjectDefinition {
  _DWORD field_0;
  _BYTE gap_4[14];
  _WORD type;
  _BYTE gap_14[2];
  _WORD field_16;
  _BYTE gap_18[58];
  __int16 field_52;
  _BYTE gap_54[54];
  _WORD buildModeType;
  _BYTE gap_8C[42];
  _DWORD field_B6;
};
#pragma pack(pop)

/* 349 */
struct /*VFT*/ TreeTable_vtbl {
  int(__stdcall *sub_40F682)(int a1);
};

/* 350 */
struct __unaligned __declspec(align(2)) TreeTable {
  TreeTable_vtbl *__vftable /*VFT*/;
  int fNumEntries;
  int fNumAds;
  char field_C;
  _BYTE gap_D[3];
  int field_10;
  int field_14;
  __int16 field_18;
};

/* 351 */
struct /*VFT*/ StringSet_vtbl {
  int(__stdcall *sub_40344A)(int a1);
};

/* 352 */
#pragma pack(push, 1)
struct StringSet {
  StringSet_vtbl *__vftable /*VFT*/;
  int field_4;
  _BYTE field_8[72];
  __int16 field_50;
  _BYTE gap_52[2];
  int field_54;
  char field_58;
  char field_59;
  _BYTE gap_5A[2];
  _BYTE field_5C;
};
#pragma pack(pop)

/* 353 */
struct _PMD {
  int mdisp;
  int pdisp;
  int vdisp;
};

/* 354 */
struct _RTTIClassHierarchyDescriptor {
  int signature;
  int attributes;
  int numBaseClasses;
  void *baseClassArray;
};

/* 355 */
struct _RTTIBaseClassDescriptor {
  void *typeDescriptor;
  int numContainedBases;
  _PMD pmd;
  int attributes;
};

/* 356 */
struct _RTTICompleteObjectLocator {
  int signature;
  int offset;
  int cdOffset;
  void *typeDescriptor;
  void *classDescriptor;
};

/* 357 */
#pragma pack(push, 1)
struct bstring {
  _DWORD field_0;
  basic_string_ref<char> *field_4;
};
#pragma pack(pop)

/* 427 */
typedef unsigned int size_t;

/* 404 */
struct __cppobj basic_string_ref<char> {
  char *ptr;
  size_t len;
  size_t res;
  size_t count;
};

/* 358 */
#pragma pack(push, 1)
struct basic_string_ref {
  _DWORD field_0;
  int field_4;
  int field_8;
  int field_C;
};
#pragma pack(pop)

/* 359 */
typedef unsigned __int16 wint_t;

/* 360 */
typedef unsigned __int16 wctype_t;

/* 361 */
typedef int ptrdiff_t;

/* 362 */
typedef int (*_onexit_t)(void);

/* 363 */
#pragma pack(push, 8)
struct _div_t {
  int quot;
  int rem;
};
#pragma pack(pop)

/* 364 */
typedef _div_t div_t;

/* 365 */
#pragma pack(push, 8)
struct _ldiv_t {
  __int32 quot;
  __int32 rem;
};
#pragma pack(pop)

/* 366 */
typedef _ldiv_t ldiv_t;

/* 367 */
typedef int streamoff;

/* 368 */
typedef int streampos;

/* 372 */
#pragma pack(push, 8)
struct __cppobj Iostream_init {};
#pragma pack(pop)

/* 373 */
struct input_iterator_tag {};

/* 374 */
struct output_iterator_tag {};

/* 375 */
struct forward_iterator_tag {};

/* 376 */
struct bidirectional_iterator_tag {};

/* 377 */
struct __cppobj random_access_iterator_tag {};

/* 378 */
struct output_iterator {};

/* 379 */
typedef void (*new_handler)(void);

/* 380 */
typedef int(__cdecl *_PNH)(size_t);

/* 381 */
struct __cppobj allocator<void> {};

/* 382 */
enum capacity : __int32 {
  default_size = 0x0,
  reserve = 0x1,
};

/* 383 */
struct __cppobj string_char_baggage<char> {};

/* 384 */
typedef char string_char_baggage<char>::char_type;

/* 405 */
typedef basic_string_ref<char> *basic_string<char>::reference_pointer;

/* 385 */
struct __cppobj basic_string<char> {
  char *c_str_ptr;
  basic_string<char>::reference_pointer reference;
};

/* 387 */
typedef char *allocator<char>::pointer;

/* 388 */
typedef allocator<char>::pointer vector<char>::iterator;

/* 386 */
struct __cppobj vector<char> {
  vector<char>::iterator start;
  vector<char>::iterator finish;
  vector<char>::iterator end_of_storage;
};

/* 389 */
typedef char *allocator<char>::const_pointer;

/* 390 */
typedef allocator<char>::const_pointer vector<char>::const_iterator;

/* 392 */
struct random_access_iterator<char, int> {};

/* 391 */
struct __cppobj reverse_iterator<char *, char, char &, int>
    : random_access_iterator<char, int> {
  char *current;
};

/* 393 */
typedef reverse_iterator<char *, char, char &, int>
    reverse_iterator<char *, char, char &, int>::self;

/* 394 */
typedef reverse_iterator<char *, char, char &, int>
    vector<char>::reverse_iterator;

/* 395 */
struct __cppobj reverse_iterator<const char *, char, const char &, int>
    : random_access_iterator<char, int> {
  const char *current;
};

/* 396 */
typedef reverse_iterator<const char *, char, const char &, int>
    reverse_iterator<const char *, char, const char &, int>::self;

/* 397 */
typedef reverse_iterator<const char *, char, const char &, int>
    vector<char>::const_reverse_iterator;

/* 398 */
typedef size_t allocator<char>::size_type;

/* 399 */
typedef allocator<char>::size_type vector<char>::size_type;

/* 400 */
typedef char *allocator<char>::reference;

/* 401 */
typedef allocator<char>::reference vector<char>::reference;

/* 402 */
typedef char *allocator<char>::const_reference;

/* 403 */
typedef allocator<char>::const_reference vector<char>::const_reference;

/* 406 */
typedef basic_string<char> cstring;

/* 407 */
typedef basic_string<char> string;

/* 408 */
typedef struct tagMODULEENTRY32 MODULEENTRY32;

/* 410 */
typedef HINSTANCE HMODULE;

/* 409 */
struct tagMODULEENTRY32 {
  DWORD dwSize;
  DWORD th32ModuleID;
  DWORD th32ProcessID;
  DWORD GlblcntUsage;
  DWORD ProccntUsage;
  BYTE *modBaseAddr;
  DWORD modBaseSize;
  HMODULE hModule;
  char szModule[256];
  char szExePath[260];
};

/* 411 */
enum std::_Uninitialized : __int32 {
  _Noinit = 0x0,
};

/* 412 */
enum ios::io_state : __int32 {
  goodbit = 0x0,
  eofbit = 0x1,
  failbit = 0x2,
  badbit = 0x4,
};

/* 413 */
enum ios::open_mode : __int32 {
  in = 0x1,
  out = 0x2,
  ate = 0x4,
  app = 0x8,
  trunc = 0x10,
  nocreate = 0x20,
  noreplace = 0x40,
  binary = 0x80,
};

/* 414 */
enum $293D9E1A693412C16EF8A8E66AF72A55 : __int32 {};

/* 415 */
enum $A53895B26F1AB238F5D10DD3542A1DE0 : __int32 {};

/* 416 */
const struct __cppobj allocator<char> {};

/* 417 */
struct __cppobj std::ios_base::Init {};

/* 418 */
struct __cppobj std::_Winit {};

/* 422 */
typedef unsigned __int8 _Bool;

/* 423 */
typedef int _off_t;

/* 424 */
typedef char *va_list;

/* 425 */
typedef int streamsize;

/* 426 */
typedef int time_t;

/* 428 */
typedef __int64 fpos_t;

/* 429 */
typedef unsigned int _dev_t;

/* 430 */
typedef unsigned int _fsize_t;

/* 431 */
typedef int mbstate_t;

/* 432 */
typedef unsigned __int8 bool;

/* 433 */
typedef unsigned __int16 _ino_t;

/* 434 */
struct /*VFT*/ cRZString_vtbl {
  char *(__thiscall *sub_40F178)(char *this, char a2);
  size_t(__thiscall *sub_888D60)(int this);
  size_t(__thiscall *sub_888DF0)(int this);
  int(__thiscall *sub_888E80)(void *this);
};

/* 435 */
struct cRZString {
  cRZString_vtbl *__vftable /*VFT*/;
  basic_string<char> str;
  int field_C;
};

/* 436 */
struct /*VFT*/ ostream_vtbl {
  void(__thiscall * ~ostream)(ostream *this);
};

/* 437 */
struct /*VFT*/ ostream_withassign_vtbl {
  void(__thiscall * ~ostream_withassign)(ostream_withassign *this);
};

/* 438 */
struct /*VFT*/ istream_vtbl {
  void(__thiscall * ~istream)(istream *this);
};

/* 439 */
enum _293D9E1A693412C16EF8A8E66AF72A55 : __int32 {
  skipws = 0x1,
  left = 0x2,
  right = 0x4,
  internal = 0x8,
  dec = 0x10,
  oct = 0x20,
  hex = 0x40,
  showbase = 0x80,
  showpoint = 0x100,
  uppercase = 0x200,
  showpos = 0x400,
  scientific = 0x800,
  fixed = 0x1000,
  unitbuf = 0x2000,
  stdio = 0x4000,
};

/* 440 */
enum _A53895B26F1AB238F5D10DD3542A1DE0 : __int32 {
  skipping = 0x0,
  tied = 0x1,
};

/* 441 */
typedef _293D9E1A693412C16EF8A8E66AF72A55 $94C30B5E87D2030C8855BA9FB73F4120;

/* 442 */
typedef _A53895B26F1AB238F5D10DD3542A1DE0 $9AEE1B0C7E095F81E0C69875BEA21555;

/* 443 */
const struct __cppobj allocator<basic_string<char>> {};

/* 444 */
const struct __cppobj vector<basic_string<char>> {
  basic_string<char> *start;
  basic_string<char> *finish;
  basic_string<char> *end_of_storage;
};

/* 445 */
struct /*VFT*/ cRZCmdLine_vtbl {
  int(__stdcall *sub_40BA0A)(int a1);
  int(__stdcall *sub_405D30)(int a1);
  void(__thiscall *sub_404C55)(cRZCmdLine *, int);
  int(__stdcall *sub_40434A)();
  unsigned int(__thiscall *sub_8ED8C0)(int this, char *Str1);
};

/* 446 */
struct cRZCmdLine {
  cRZCmdLine_vtbl *__vftable /*VFT*/;
  vector<basic_string<char>> args;
  cRZString cmdLine;
};

/* 447 */
struct /*VFT*/ cGZApp_vtbl {
  int(__stdcall *cGZApp_vtbl_func_0)(int a1);
  int(__stdcall *cGZApp_vtbl_func_1)();
  char(__stdcall *cGZApp_vtbl_func_2)();
  char(__stdcall *cGZApp_vtbl_func_3)();
  char(__stdcall *cGZApp_vtbl_func_4)();
  char(__stdcall *cGZApp_vtbl_func_5)();
  int(__stdcall *cGZApp_vtbl_func_6)();
  void(__stdcall __noreturn *__purecall)();
  void *(__stdcall *duplicate_7_1)();
  void *(__stdcall *duplicate_7_2)();
  char(__fastcall *gzapp_008f90c6)(int a1, int a2);
  void *(__stdcall *duplicate_7_3)();
  void *(__stdcall *duplicate_7_4)();
  void *(__stdcall *duplicate_7_5)();
  void *(__stdcall *duplicate_7_6)();
  void *(__stdcall *duplicate_7_7)();
  void *(__stdcall *duplicate_7_8)();
};

/* 448 */
struct /*VFT*/ cSimsApp_vtbl {
  int(__thiscall *cSimsApp_vtbl_func_0)(_DWORD *this);
  int(__stdcall *cSimsApp_vtbl_func_1)(char a1);
  char(__thiscall *PreFrameWorkInit)(cSimsApp *this);
  int(__stdcall *cSimsApp_vtbl_func_3)(int a1);
  int(__stdcall *cSimsApp_vtbl_func_4)();
  int(__stdcall *cSimsApp_vtbl_func_5)();
  int(__stdcall *cSimsApp_vtbl_func_6)();
  int(__stdcall *cSimsApp_vtbl_func_7)();
  int(__stdcall *cSimsApp_vtbl_func_8)();
  int(__thiscall *cSimsApp_vtbl_func_9)(cSimsApp *, MSG *);
  int(__stdcall *cSimsApp_vtbl_func_10)();
  int(__stdcall *j_SimsApp_006493b2)();
  int(__stdcall *cSimsApp_vtbl_func_12)();
  void(__thiscall *j_cGZWinCtrlMgrInit)(void *this);
  int(__stdcall *cSimsApp_vtbl_func_14)();
};

/* 449 */
struct cSimsApp {
  cSimsApp_vtbl *__vftable /*VFT*/;
  cSimsApp_vtbl *__vftable_4;
  cSimsApp_vtbl *__vftable_8;
  _BYTE gap_C[4];
  cSimsApp_vtbl *__vftable_10;
  _BYTE gap_14[52];
  cSimsApp_vtbl *__vftable_48;
  char byte_4c;
  _BYTE gap_4D[15];
  cRZString field_5c;
  cSimsApp_vtbl *__vftable_6C;
  _BYTE gap_70[12];
  cGZWin *mpMainWindow;
  int mpSimsView;
  cWinCPanel *mpWinCPanel;
  int dword_88;
  cGZWin *mNghWin;
  cRZString field_90;
  CPState *mCPState;
  cRZString field_a4;
  cRZString field_b4;
  cRZString field_c4;
  cRZString field_d4;
  char byte_e4;
  char byte_e5;
  char byte_e6;
  char byte_e7;
  char byte_e8;
  _BYTE gap_E9;
  __unaligned __declspec(align(1)) int dword_ea;
  _BYTE gap_EE[2];
  char byte_f0;
  char byte_f1;
  _BYTE gap_F2[2];
  cWinMemView *mpMemView;
  char byte_f8;
  _BYTE gap_F9[3];
  cGZWinSplashScreen *mpSplashScreen;
  StringSet *dword_100;
  char byte_104;
  _BYTE gap_105[3];
  int dword_108;
  int dword_10c;
  int dword_110;
  int mpLoadLoopSnd;
  int dword_118;
};

/* 485 */
struct cGZWin {
  cGZWin_vtbl *__vftable /*VFT*/;
  int dword_4;
  int dword_8;
  _DWORD dword_c;
  _BYTE gap_10[12];
  _DWORD dword_1c;
  _BYTE gap_20[12];
  int dword_2c;
  _DWORD dword_30;
  _BYTE gap_34[4];
  char byte_38;
  _BYTE gap_39[7];
  char byte_40;
  _BYTE gap_41[3];
  int dword_44;
  int dword_48;
  int dword_4c;
  cRZString name;
  int dword_60;
  int dword_64;
  char byte_68;
  char byte_69;
  _BYTE gap_6A[2];
  int dword_6c;
  int mCursor;
  char byte_74;
  _BYTE gap_75[3];
  cRZString field_78;
  RECT mrBounds;
  _DWORD dword_98;
  _BYTE gap_9C[12];
  int dword_a8;
  int dword_ac;
  int dword_b0;
  int dword_b4;
  int dword_b8;
  char byte_bc;
  _BYTE gap_BD[3];
  int dword_c0;
  _BYTE gap_C4[4];
  _DWORD dword_c8;
  _BYTE gap_CC[16];
  int dword_dc;
};

/* 574 */
#pragma pack(push, 1)
struct __cppobj cWinCPanel : cGZWin {
  char byte_e0;
  char byte_e1;
  _BYTE gap_E2[2];
  int dword_e4;
  int dword_e8;
  int dword_ec;
  int dword_f0;
  int dword_f4;
  int dword_f8;
  int dword_fc;
  int dword_100;
  int dword_104;
  _DWORD dword_108;
  int dword_10c;
  int dword_110;
  int dword_114;
  int dword_118;
};
#pragma pack(pop)

/* 576 */
struct CPState {
  CPState_vtbl *__vftable /*VFT*/;
  int mGameMode;
  int dword_8;
  int dword_c;
  int dword_10;
  cRZString field_14;
  char byte_24;
  _BYTE gap_25[3];
  cRZString field_28;
  int dword_38;
  int dword_3c;
  int dword_40;
  char byte_44;
  _BYTE gap_45[3];
  int fGameSpeed;
  int dword_4c;
  int mpXViewer;
  int dword_54;
  int dword_58;
  int dword_5c;
  int dword_60;
  int dword_64;
  char byte_68;
  _BYTE gap_69[3];
  int dword_6c;
  _BYTE gap_70[48];
  int dword_a0;
  int dword_a4;
  int dword_a8;
  int dword_ac;
  int dword_b0;
  int dword_b4;
  int dword_b8;
  _BYTE gap_BC[192];
  int mSelected;
  int mpHouseViewer;
  int dword_184;
  char byte_188;
  char byte_189;
  _BYTE gap_18A[2];
  float dword_18c;
  _DWORD dword_190;
  _BYTE gap_194[12];
  _DWORD dword_1a0;
  _BYTE gap_1A4[12];
  int dword_1b0;
  int dword_1b4;
  int dword_1b8;
  int dword_1bc;
  int dword_1c0;
  _DWORD dword_1c4;
  _BYTE gap_1C8[260];
  _DWORD dword_2cc;
};

/* 482 */
struct __cppobj cWinMemView : cGZWin {
  float dword_e0;
  int dword_e4;
  int dword_e8;
  _DWORD dword_ec;
  _BYTE gap_F0[12];
  _DWORD dword_fc;
  _BYTE gap_100[12];
  _DWORD dword_10c;
  _BYTE gap_110[12];
  int mCursorPos;
  int dword_120;
  char byte_124;
  char byte_125;
  char byte_126;
  _BYTE gap_127;
  int dword_128;
  int dword_12c;
  int dword_130;
  _BYTE gap_134[24];
  _DWORD mBytes;
};

/* 577 */
struct __cppobj cGZWinSplashScreen : cGZWin {
  int dword_e0;
  _BYTE byte_e4[16];
  _BYTE byte_f4[16];
  _BYTE byte_104[64];
  int dword_144;
  cRZString field_148;
  _BYTE gap_158[24];
  _DWORD dword_170;
  _BYTE gap_174[12];
  _DWORD dword_180;
  _BYTE gap_184[12];
  char byte_190;
  _BYTE gap_191[3];
  _BYTE byte_194[16];
  _BYTE byte_1a4[16];
  _BYTE byte_1b4[16];
  _BYTE byte_1c4[12];
  char mbPlayIntro;
  char byte_1d1;
  _BYTE gap_1D2[2];
  int dword_1d4;
};

/* 484 */
struct /*VFT*/ cGZWin_vtbl {
  char(__stdcall *cGZWin_vtbl_func_0)(cGZWin *__hidden this, _DWORD *a2);
  int(__stdcall *cGZWin_vtbl_func_1)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_2)(cGZWin *__hidden this);
  char(__stdcall *cGZWin_vtbl_func_3)(cGZWin *__hidden this);
  char(__stdcall *cGZWin_vtbl_func_4)(cGZWin *__hidden this);
  void *(__stdcall *cGZWin_vtbl_func_5)(cGZWin *__hidden this, char a2);
  int(__stdcall *cGZWin_vtbl_func_6)(cGZWin *__hidden this);
  char(__stdcall *cGZWin_vtbl_func_7)(cGZWin *__hidden this, int a2);
  int(__stdcall *ChildAdd)(cGZWin *__hidden this, int a2);
  int(__stdcall *cGZWin_vtbl_func_9)(cGZWin *__hidden this, int a2);
  int(__stdcall *cGZWin_vtbl_func_10)(cGZWin *__hidden this, int a2);
  bool(__stdcall *cGZWin_vtbl_func_11)(cGZWin *__hidden this, int a2);
  BOOL(__stdcall *cGZWin_vtbl_func_12)(cGZWin *__hidden this);
  char(__stdcall *cGZWin_vtbl_func_13)(cGZWin *__hidden this, int a2);
  char(__stdcall *cGZWin_vtbl_func_14)(cGZWin *__hidden this, int a2);
  char(__stdcall *cGZWin_vtbl_func_15)(cGZWin *__hidden this, int a2);
  char(__stdcall *cGZWin_vtbl_func_16)(cGZWin *__hidden this, int a2);
  int(__stdcall *cGZWin_vtbl_func_17)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_18)(cGZWin *__hidden this);
  char(__stdcall *cGZWin_vtbl_func_19)(cGZWin *__hidden this, int a2);
  char(__stdcall *cGZWin_vtbl_func_20)(cGZWin *__hidden this, int a2);
  char(__stdcall *cGZWin_vtbl_func_21)(cGZWin *__hidden this, int a2, int a3);
  char(__stdcall *cGZWin_vtbl_func_22)(cGZWin *__hidden this, char a2, char a3);
  int(__stdcall *cGZWin_vtbl_func_23)(cGZWin *__hidden this, unsigned __int8 a2,
                                      char a3);
  int(__stdcall *Resize)(cGZWin *__hidden this, int a2, int a3, int a4, int a5);
  int(__stdcall *cGZWin_vtbl_func_25)(cGZWin *__hidden this, _DWORD *a2);
  void(__stdcall *cGZWin_vtbl_func_26)(cGZWin *__hidden this, _DWORD *a2);
  bool(__stdcall *cGZWin_vtbl_func_27)(cGZWin *__hidden this, _DWORD *a2,
                                       int a3);
  int(__stdcall *cGZWin_vtbl_func_28)(cGZWin *__hidden this, int a2);
  int(__stdcall *cGZWin_vtbl_func_29)(cGZWin *__hidden this, int a2);
  int(__stdcall *cGZWin_vtbl_func_30)(cGZWin *__hidden this, int a2);
  int(__stdcall *cGZWin_vtbl_func_31)(cGZWin *__hidden this, int a2);
  int(__stdcall *cGZWin_vtbl_func_32)(cGZWin *__hidden this, int a2);
  int(__stdcall *cGZWin_vtbl_func_33)(cGZWin *__hidden this, int a2);
  int(__stdcall *cGZWin_vtbl_func_34)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_35)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_36)(cGZWin *__hidden this, int a2, char a3);
  int(__stdcall *cGZWin_vtbl_func_37)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_38)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_39)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_40)(cGZWin *__hidden this);
  void(__stdcall *cGZWin_vtbl_func_41)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_42)(cGZWin *__hidden this, unsigned __int8 a2,
                                      char a3, int a4);
  int(__stdcall *cGZWin_vtbl_func_43)(cGZWin *__hidden this);
  char(__stdcall *cGZWin_vtbl_func_44)(cGZWin *__hidden this);
  char(__stdcall *cGZWin_vtbl_func_45)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_46)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_47)(cGZWin *__hidden this, int a2, int a3,
                                      char a4);
  int(__stdcall *cGZWin_vtbl_func_48)(cGZWin *__hidden this, int a2);
  int(__stdcall *cGZWin_vtbl_func_49)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_50)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_51)(cGZWin *__hidden this);
  char(__fastcall *cGZWin_vtbl_func_52)(cGZWin *__hidden this, int a2, int a3,
                                        int a4);
  int(__stdcall *cGZWin_vtbl_func_53)(cGZWin *__hidden this, int a2,
                                      unsigned __int8 a3);
  char(__stdcall *cGZWin_vtbl_func_54)(cGZWin *__hidden this, char a2);
  char(__stdcall *cGZWin_vtbl_func_55)(cGZWin *__hidden this, int a2, int a3);
  char(__stdcall *cGZWin_vtbl_func_56)(cGZWin *__hidden this, int a2, int a3);
  char(__stdcall *cGZWin_vtbl_func_57)(cGZWin *__hidden this, int a2, int a3,
                                       int a4);
  char(__stdcall *cGZWin_vtbl_func_58)(cGZWin *__hidden this, int a2, int a3,
                                       int a4);
  int(__stdcall *cGZWin_vtbl_func_59)(cGZWin *__hidden this, int a2, int a3,
                                      int a4);
  int(__stdcall *cGZWin_vtbl_func_60)(cGZWin *__hidden this, int a2, int a3,
                                      int a4);
  char(__stdcall *cGZWin_vtbl_func_61)(cGZWin *__hidden this, int a2, int a3,
                                       int a4);
  char(__stdcall *cGZWin_vtbl_func_62)(cGZWin *__hidden this, int a2, int a3,
                                       int a4);
  char(__stdcall *cGZWin_vtbl_func_63)(cGZWin *__hidden this, int a2, int a3,
                                       int a4);
  char(__stdcall *cGZWin_vtbl_func_64)(cGZWin *__hidden this, int a2, int a3,
                                       int a4);
  char(__stdcall *cGZWin_vtbl_func_65)(cGZWin *__hidden this, int a2, int a3,
                                       int a4);
  char(__stdcall *cGZWin_vtbl_func_66)(cGZWin *__hidden this, int a2, int a3,
                                       int a4);
  char(__stdcall *cGZWin_vtbl_func_67)(cGZWin *__hidden this, int a2, int a3,
                                       int a4);
  int(__stdcall *cGZWin_vtbl_func_68)(cGZWin *__hidden this, int a2, int a3,
                                      int a4, int a5);
  int(__stdcall *cGZWin_vtbl_func_69)(cGZWin *__hidden this, int a2, int a3,
                                      int a4, int a5);
  void(__stdcall *cGZWin_vtbl_func_70)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_71)(cGZWin *__hidden this, int a2, int a3,
                                      int a4);
  int(__stdcall *cGZWin_vtbl_func_72)(cGZWin *__hidden this, int a2, int a3,
                                      int a4);
  int(__stdcall *cGZWin_vtbl_func_73)(cGZWin *__hidden this, int a2, int a3,
                                      int a4);
  bool(__stdcall *cGZWin_vtbl_func_74)(cGZWin *__hidden this, int a2, int a3);
  char(__stdcall *cGZWin_vtbl_func_75)(cGZWin *__hidden this, int a2, int a3);
  char(__stdcall *cGZWin_vtbl_func_76)(cGZWin *__hidden this);
  char(__stdcall *cGZWin_vtbl_func_77)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_78)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_79)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_80)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_81)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_82)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_83)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_84)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_85)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_86)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_87)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_88)(cGZWin *__hidden this, char a2);
  int(__stdcall *cGZWin_vtbl_func_89)(cGZWin *__hidden this);
  _BYTE *(__stdcall *cGZWin_vtbl_func_90)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_91)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_92)(cGZWin *__hidden this, int a2);
  char(__stdcall *cGZWin_vtbl_func_93)(cGZWin *__hidden this, char a2);
  bool(__stdcall *cGZWin_vtbl_func_94)(cGZWin *__hidden this, char a2);
  char(__stdcall *cGZWin_vtbl_func_95)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_96)(cGZWin *__hidden this);
  int(__stdcall *GetPrivateBuffer)(cGZWin *__hidden this);
  int(__fastcall *cGZWin_vtbl_func_98)(cGZWin *__hidden this, int a2, int a3);
  int(__stdcall *cGZWin_vtbl_func_99)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_100)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_101)(cGZWin *__hidden this);
  int(__stdcall *cGZWin_vtbl_func_102)(cGZWin *__hidden this);
};

/* 575 */
struct /*VFT*/ CPState_vtbl {
  void *(__thiscall *CPState_vtbl_func_0)(void *this, char a2);
};

/* 450 */
struct /*VFT*/ cGZSystemService_vtbl {
  char *(__thiscall *cGZSystemService_vtbl_func_0)(char *this, char a2);
};

/* 451 */
struct cGZSystemService {
  cGZSystemService_vtbl *__vftable /*VFT*/;
  cGZSystemService_vtbl *__vftable_4;
  cGZSystemService_vtbl *__vftable_8;
  _BYTE gap_C[4];
  cGZSystemService_vtbl *__vftable_10;
  _BYTE gap_14[8];
  _DWORD field_1C;
  cRZString field_20;
  _DWORD field_30;
  cRZString field_34;
  int dword_44;
};

/* 452 */
struct /*VFT*/ cRZRefCount_vtbl {
  void *(__thiscall *cRZRefCount_vtbl_func_0)(void *this, char a2);
  int(__thiscall *cRZRefCount_vtbl_func_1)(void *this);
  int(__thiscall *cRZRefCount_vtbl_func_2)(_DWORD *this);
  int(__thiscall *cGZSystemService_vtbl_func_3)(_DWORD *this);
  int(__stdcall *cGZApp_vtbl_func_4)();
};

/* 453 */
#pragma pack(push, 1)
struct cRZRefCount {
  cRZRefCount_vtbl *__vftable /*VFT*/;
  int dword_4;
};
#pragma pack(pop)

/* 454 */
struct /*VFT*/ cRZUnknown_vtbl {
  int(__thiscall *cRZUnknown_vtbl_func_0)(_DWORD *this);
  int(__thiscall *cRZUnknown_vtbl_func_1)(int this);
};

/* 455 */
#pragma pack(push, 1)
struct cRZUnknown {
  cRZUnknown_vtbl *__vftable /*VFT*/;
  cRZRefCount field_4;
};
#pragma pack(pop)

/* 456 */
struct /*VFT*/ cGZSystemServiceList_vtbl {
  void *(__thiscall *cGZSystemServiceList_vtbl_func_0)(void *this, char a2);
  char(__thiscall *cGZSystemServiceList_vtbl_func_1)(
      void *this, int(__thiscall ***a2)(_DWORD));
  int(__thiscall *cGZSystemServiceList_vtbl_func_2)(void *this, int a2);
  int(__thiscall *cGZSystemServiceList_vtbl_func_3)(void *this);
  int(__thiscall *cGZSystemServiceList_vtbl_func_4)(void *this, int a2);
  int(__thiscall *cGZSystemServiceList_vtbl_func_5)(void *this);
};

/* 457 */
#pragma pack(push, 1)
struct cGZSystemServiceList {
  cGZSystemServiceList_vtbl *__vftable /*VFT*/;
  _DWORD dword_4;
};
#pragma pack(pop)

/* 458 */
#pragma pack(push, 1)
struct struc_942080 {
  _DWORD dword_0;
  _BYTE byte_4;
  _BYTE gap_5[3];
  int dword_8;
};
#pragma pack(pop)

/* 459 */
struct /*VFT*/ cGZMessageQueueManager_vtbl {
  int(__thiscall *cGZMessageQueueManager_vtbl_func_0)(char *this);
  int(__thiscall *cGZMessageQueueManager_vtbl_func_1)(char *this);
  bool(__thiscall *cGZMessageQueueManager_vtbl_func_2)(char *this, char a2,
                                                       _DWORD *a3);
  char(__thiscall *GZMessage_0093efc7)(char *this, char a2, int a3);
  char(__thiscall *cGZMessageQueueManager_vtbl_func_4)(char *this, char a2);
  char(__thiscall *GZMessage_0093f217)(char *this,
                                       void(__thiscall ***a2)(_DWORD), char a3);
  char(__thiscall *cGZMessageQueueManager_vtbl_func_6)(char *this, char a2,
                                                       char a3);
  char(__thiscall *cGZMessageQueueManager_vtbl_func_7)(char *this, char a2);
  int(__thiscall *cGZMessageQueueManager_vtbl_func_8)(char *this);
};

/* 460 */
struct __unaligned __declspec(align(1)) cGZMessageQueueManager {
  cGZSystemService base;
  cGZMessageQueueManager_vtbl *__vftable_48;
  int dword_4c;
  char byte_50;
};

/* 461 */
struct /*VFT*/ cRZCriticalSection_vtbl {
  int(__thiscall *cRZCriticalSection_vtbl_func_0)(void *this);
  int(__thiscall *cRZCriticalSection_vtbl_func_1)(int this);
  int(__thiscall *cRZCriticalSection_vtbl_func_2)(int this);
  int(__thiscall *cRZCriticalSection_vtbl_func_3)(int this);
  int(__thiscall *cRZCriticalSection_vtbl_func_4)(_DWORD *this);
  int(__thiscall *cRZCriticalSection_vtbl_func_5)(_DWORD *this);
  void *(__thiscall *cRZCriticalSection_vtbl_func_6)(void *this, char a2);
  int(__thiscall *cRZCriticalSection_vtbl_func_7)(int this, void *a2);
};

/* 462 */
struct cRZCriticalSection {
  cRZCriticalSection_vtbl *__vftable /*VFT*/;
  struct _RTL_CRITICAL_SECTION criticalSection;
  int dword_1c;
  int dword_20;
};

/* 463 */
struct /*VFT*/ cIGZThreadSignal_vtbl {
  void(__stdcall __noreturn *__purecall)();
  void *(__stdcall *duplicate_0_1)();
  void *(__stdcall *duplicate_0_2)();
  void *(__stdcall *duplicate_0_3)();
  void *(__stdcall *duplicate_0_4)();
};

/* 464 */
struct /*VFT*/ cRZThreadSignal_vtbl {
  char *(__thiscall *cRZThreadSignal_vtbl_func_0)(char *this, char a2);
};

/* 465 */
struct cRZThreadSignal {
  cIGZThreadSignal_vtbl *__vftable /*VFT*/;
  cRZThreadSignal_vtbl *__vftable_4;
  _BYTE gap_8[40];
  HANDLE mhEvent;
  BOOL dword_34;
  int mbEventMade;
};

/* 466 */
struct /*VFT*/ cGZMessageQueue_vtbl {
  int(__thiscall *cGZMessageQueue_vtbl_func_0)(void *this);
  int(__thiscall *cGZMessageQueue_vtbl_func_1)(char *this, int a2);
  int(__thiscall *cGZMessageQueue_vtbl_func_2)(char *this, int a2);
  char(__thiscall *cGZMessageQueue_vtbl_func_3)(char *this, int a2);
  char(__thiscall *cGZMessageQueue_vtbl_func_4)(char *this, int a2);
  char(__thiscall *cGZMessageQueue_vtbl_func_5)(char *this, int a2);
  char(__thiscall *cGZMessageQueue_vtbl_func_6)(char *this, int a2);
  int(__thiscall *cGZMessageQueue_vtbl_func_7)(char *this, int a2);
  int(__thiscall *cGZMessageQueue_vtbl_func_8)(char *this, int a2);
  int(__thiscall *cGZMessageQueue_vtbl_func_9)(char *this);
  int(__thiscall *cGZMessageQueue_vtbl_func_10)(char *this);
  int(__thiscall *cGZMessageQueue_vtbl_func_11)(char *this);
  char(__thiscall *cGZMessageQueue_vtbl_func_12)(char *this, int a2);
  int(__thiscall *cGZMessageQueue_vtbl_func_13)(char *this);
  int(__thiscall *cGZMessageQueue_vtbl_func_14)(char *this);
  char(__thiscall *cGZMessageQueue_vtbl_func_15)(char *this, int a2);
  int(__thiscall *cGZMessageQueue_vtbl_func_16)(char *this);
  int(__thiscall *cGZMessageQueue_vtbl_func_17)(char *this);
  int(__thiscall *cGZMessageQueue_vtbl_func_18)(void *this, int a2);
  char(__thiscall *cGZMessageQueue_vtbl_func_19)(char *this, int a2);
  char(__thiscall *cGZMessageQueue_vtbl_func_20)(char *this, int a2);
  char(__thiscall *cGZMessageQueue_vtbl_func_21)(char *this, int a2);
  int(__thiscall *cGZMessageQueue_vtbl_func_22)(_DWORD *this);
  int(__thiscall *cGZMessageQueue_vtbl_func_23)(_DWORD *this);
  char(__thiscall *cGZMessageQueue_vtbl_func_24)(_DWORD *this, int a2);
  char(__thiscall *cGZMessageQueue_vtbl_func_25)(_DWORD *this, int a2);
  void *(__thiscall *cGZMessageQueue_vtbl_func_26)(void *this, char a2);
};

/* 467 */
#pragma pack(push, 1)
struct cGZMessageQueue {
  cGZMessageQueue_vtbl *__vftable /*VFT*/;
  _DWORD dword_4;
  _BYTE gap_8[4];
  cRZCriticalSection field_c;
  cRZThreadSignal field_30;
};
#pragma pack(pop)

/* 468 */
struct /*VFT*/ cGZMessageServer_vtbl {
  char(__thiscall *cGZMessageServer_vtbl_func_0)(char *this, int *a2);
  char(__thiscall *cGZMessageServer_vtbl_func_1)(char *this, int a2, char a3);
  char(__thiscall *cGZMessageServer_vtbl_func_2)(char *this, char a2, char a3);
  char(__thiscall *cGZMessageServer_vtbl_func_3)(char *this, char a2, char a3);
  void *(__thiscall *cGZMessageServer_vtbl_func_4)(void *this, char a2);
  int(__stdcall *cGZMessageServer_vtbl_func_5)();
  int(__stdcall *cGZMessageServer_vtbl_func_6)();
  char(__thiscall *cGZMessageServer_vtbl_func_7)(
      void(__thiscall ***this)(int, char *), int a2);
};

/* 469 */
#pragma pack(push, 1)
struct cGZMessageServer {
  cGZMessageServer_vtbl *__vftable /*VFT*/;
  cRZCriticalSection field_4;
  cGZMessageQueue field_28;
  _BYTE byte_94;
};
#pragma pack(pop)

/* 470 */
struct /*VFT*/ cRZLanguageManager_vtbl {
  int(__thiscall *cRZLanguageManager_vtbl_func_0)(char *this);
  int(__thiscall *cRZLanguageManager_vtbl_func_1)(char *this);
  int(__thiscall *cRZLanguageManager_vtbl_func_2)(char *this);
  int(__thiscall *cRZLanguageManager_vtbl_func_3)(char *this);
  void(__fastcall *RZLanguage_00934bf3)(int a1, int a2, unsigned int a3);
  int(__fastcall *RZLanguage_00934c83)(int a1, int a2, unsigned int a3);
  int(__stdcall *cRZLanguageManager_vtbl_func_6)(unsigned int a1);
  int(__thiscall *cRZLanguageManager_vtbl_func_7)(_DWORD *this);
  char(__fastcall *RZLanguage_00934d38)(_DWORD *a1, int a2, unsigned int a3);
  int(__thiscall *cRZLanguageManager_vtbl_func_9)(void *this, int a2);
  int(__thiscall *cRZLanguageManager_vtbl_func_10)(void *this);
  char(__fastcall *RZLanguage_0093559c)(int a1, int a2, int a3,
                                        unsigned int a4);
  bool(__thiscall *cRZLanguageManager_vtbl_func_12)(void *this, _DWORD *a2);
  int(__thiscall *cRZLanguageManager_vtbl_func_13)(void *this, int a2, int a3);
  char(__fastcall *RZLanguage_009359a5)(int a1, int a2, int a3,
                                        unsigned int a4);
  char(__fastcall *RZLanguage_00935c95)(int a1, int a2, int a3,
                                        unsigned int a4);
  char(__thiscall *cRZLanguageManager_vtbl_func_16)(_DWORD *this, int a2,
                                                    unsigned int *a3);
  char(__thiscall *cRZLanguageManager_vtbl_func_17)(_DWORD *this, int a2,
                                                    unsigned int *a3);
  char(__thiscall *cRZLanguageManager_vtbl_func_18)(void *this, int a2, int a3);
  int(__thiscall *cRZLanguageManager_vtbl_func_19)(void *this, int a2, int a3);
  int(__thiscall *cRZLanguageManager_vtbl_func_20)(void *this, int a2, int a3);
  int(__thiscall *cRZLanguageManager_vtbl_func_21)(_DWORD *this, int a2);
  char *(__thiscall *cRZLanguageManager_vtbl_func_22)(char *this, int a2);
  int(__stdcall *cRZLanguageManager_vtbl_func_23)(int a1);
  double(__stdcall *cRZLanguageManager_vtbl_func_24)(int a1);
  void *(__thiscall *cRZLanguageManager_vtbl_func_25)(void *this, int a2,
                                                      int a3);
  char(__stdcall *cRZLanguageManager_vtbl_func_26)(int a1, int a2, int a3,
                                                   int a4);
  char(__stdcall *cRZLanguageManager_vtbl_func_27)(int a1, int a2, int a3);
  char(__stdcall *cRZLanguageManager_vtbl_func_28)(int a1, int a2, int a3,
                                                   int a4, int a5);
  char(__stdcall *cRZLanguageManager_vtbl_func_29)(int a1, int a2, int a3,
                                                   int a4);
  int(__thiscall *cRZLanguageManager_vtbl_func_30)(_DWORD *this, char a2,
                                                   int a3);
  int(__thiscall *cRZLanguageManager_vtbl_func_31)(_DWORD *this, int a2, int a3,
                                                   int a4);
  char(__thiscall *cRZLanguageManager_vtbl_func_32)(_DWORD *this, int a2,
                                                    int a3, int a4, char a5,
                                                    char a6);
  char(__thiscall *cRZLanguageManager_vtbl_func_33)(void *this, int a2);
  bool(__thiscall *cRZLanguageManager_vtbl_func_34)(void *this, int a2);
};

/* 473 */
#pragma pack(push, 1)
struct cRZLanguageUtility {
  cRZLanguageUtility_vtbl *__vftable /*VFT*/;
  int dword_4;
  int dword_8;
  char byte_c;
};
#pragma pack(pop)

/* 471 */
struct __unaligned __declspec(align(1)) cRZLanguageManager {
  cGZSystemService base;
  cRZLanguageManager_vtbl *__vftable_48;
  int dword_4c;
  _BYTE gap_50[8];
  int dword_58;
  cRZLanguageUtility mUtility;
};

/* 472 */
struct /*VFT*/ __declspec(align(4)) cRZLanguageUtility_vtbl {
  int(__thiscall *cRZLanguageUtility_vtbl_func_0)(_DWORD *this);
  int(__thiscall *cRZLanguageUtility_vtbl_func_1)(_DWORD *this);
  char(__stdcall *cRZLanguageUtility_vtbl_func_2)();
  char(__stdcall *cRZLanguageUtility_vtbl_func_3)();
  char(__fastcall *RZLanguage_009366fb)(int a1, int a2, unsigned __int8 a3,
                                        int a4);
  char(__thiscall *cRZLanguageUtility_vtbl_func_5)(_DWORD *this, char a2,
                                                   int a3);
  char(__fastcall *RZLanguage_00937f2b)(int a1, int a2, unsigned __int8 a3,
                                        int a4);
  char(__fastcall *RZLanguage_009392fa)(int a1, int a2, unsigned __int8 a3,
                                        int a4);
  char(__thiscall *RZLanguage_0093c11a)(_DWORD *this, int a2, int a3, int a4,
                                        int a5, int a6);
  char(__thiscall *cRZLanguageUtility_vtbl_func_9)(int this, int a2);
  char(__stdcall *cRZLanguageUtility_vtbl_func_10)();
  char(__stdcall *cRZLanguageUtility_vtbl_func_11)();
  char(__thiscall *cRZLanguageUtility_vtbl_func_12)(_DWORD *this, int a2);
  char(__thiscall *cRZLanguageUtility_vtbl_func_13)(_DWORD *this, __int64 a2,
                                                    int a3);
  int(__thiscall *cRZLanguageUtility_vtbl_func_14)(void *this, int a2, int a3);
  char(__thiscall *cRZLanguageUtility_vtbl_func_15)(_DWORD *this, __int64 a2,
                                                    int a3);
  char(__thiscall *cRZLanguageUtility_vtbl_func_16)(_DWORD *this, int a2,
                                                    int a3);
  int(__stdcall *cRZLanguageUtility_vtbl_func_17)(_BYTE *a1);
  void(__thiscall *cRZLanguageUtility_vtbl_func_18)(void *this, int a2);
  int(__stdcall *cRZLanguageUtility_vtbl_func_19)(_BYTE *a1);
  void(__thiscall *cRZLanguageUtility_vtbl_func_20)(void *this, int a2);
  BOOL(__stdcall *cRZLanguageUtility_vtbl_func_21)(char a1);
  BOOL(__stdcall *cRZLanguageUtility_vtbl_func_22)(char a1);
  BOOL(__stdcall *cRZLanguageUtility_vtbl_func_23)(char a1);
  BOOL(__stdcall *cRZLanguageUtility_vtbl_func_24)(char a1);
  BOOL(__stdcall *cRZLanguageUtility_vtbl_func_25)(char a1);
  BOOL(__stdcall *cRZLanguageUtility_vtbl_func_26)(char a1);
  char(__stdcall *cRZLanguageUtility_vtbl_func_27)(int a1);
  char(__stdcall *cRZLanguageUtility_vtbl_func_28)(int a1);
  BOOL(__stdcall *cRZLanguageUtility_vtbl_func_29)(char a1);
  int(__thiscall *cRZLanguageUtility_vtbl_func_30)(void *this, int a2);
  bool(__stdcall *cRZLanguageUtility_vtbl_func_31)(int a1);
  bool(__stdcall *cRZLanguageUtility_vtbl_func_32)(int a1);
  bool(__stdcall *cRZLanguageUtility_vtbl_func_33)(int a1);
  BOOL(__stdcall *cRZLanguageUtility_vtbl_func_34)(int a1);
  void *(__thiscall *cRZLanguageUtility_vtbl_func_35)(void *this, char a2);
  _DWORD *(__thiscall *cRZLanguageUtility_vtbl_func_36)(
      cRZLanguageUtility *this, int a2);
};

/* 474 */
struct /*VFT*/ cGZSndSys_vtbl {
  char *(__thiscall *cGZSndSys_vtbl_func_0)(char *this, char a2);
};

/* 475 */
#pragma pack(push, 1)
struct cGZSndSys {
  cGZSndSys_vtbl *__vftable /*VFT*/;
  cGZSndSys_vtbl *__vftable_4;
  cGZSndSys_vtbl *__vftable_8;
  cGZSndSys_vtbl *__vftable_C;
  _BYTE gap_10[4];
  cGZSndSys_vtbl *__vftable_14;
  _BYTE gap_18[52];
  int dword_4c;
  int dword_50;
  cRZString field_54;
  char byte_64;
  char byte_65;
  char byte_66;
  _BYTE gap_67;
  int dword_68;
  void *field_6c;
  int dword_70;
  int dword_74;
  int dword_78;
  int dword_7c;
  int dword_80;
  _BYTE gap_84[4];
  int dword_88;
  int dword_8c;
  _BYTE byte_90[12];
  _BYTE byte_9c[4];
  _DWORD dword_a0;
  _BYTE gap_A4[12];
  int dword_b0;
  cRZCriticalSection field_b4;
  char byte_d8;
};
#pragma pack(pop)

/* 476 */
struct /*VFT*/ cGZFrameWork_vtbl {
  int(__thiscall *cGZFrameWork_vtbl_func_0)(_DWORD *this);
  char *(__thiscall *cGZFrameWork_vtbl_func_1)(char *this);
  char *(__thiscall *cGZFrameWork_vtbl_func_2)(char *this);
  char *(__thiscall *cGZFrameWork_vtbl_func_3)(char *this);
  void(__stdcall __noreturn *__purecall)();
  int(__thiscall *cGZFrameWork_vtbl_func_5)(_DWORD *this);
  void *(__stdcall *duplicate_4_1)();
  void *(__stdcall *duplicate_4_2)();
  void *(__stdcall *duplicate_4_3)();
  void *(__stdcall *duplicate_4_4)();
  int(__thiscall *cGZFrameWork_vtbl_func_10)(void *this, int a2);
  int(__thiscall *cGZFrameWorkInit)(void *this);
  int(__thiscall *gzframe_008714c6)(_DWORD *this);
  char *(__thiscall *GetCommandLine)(cGZFrameWorkW95 *this);
  char *(__thiscall *cGZFrameWork_vtbl_func_14)(char *this);
  int(__thiscall *cGZFrameWork_vtbl_func_15)(_DWORD *this);
  void *(__stdcall *duplicate_4_5)();
};

/* 477 */
struct cGZFrameWork {
  cGZFrameWorkW95_vtbl *__vftable /*VFT*/;
  cRZUnknown field_4;
  cSimsApp *mpApp;
  cGZSystemServiceList mSystemServiceList;
  _BYTE gap_1C[8];
  cGZMessageQueueManager mMessageQueueMgr;
  _BYTE gap_75[11];
  cGZMessageServer mMessageServer;
  _BYTE gap_115[11];
  cRZCmdLine mCmdLine;
  cGZSndSys *mpSndSys;
  char mbPlaySound;
  _BYTE gap_145[3];
  cRZLanguageManager mLanguageManager;
  _BYTE gap_1B1[3];
  int dword_1b4;
};

/* 480 */
#pragma pack(push, 1)
struct cGZFontSys {
  cGZFontSys_vtbl *__vftable /*VFT*/;
  cGZSystemService base;
};
#pragma pack(pop)

/* 478 */
struct __unaligned __declspec(align(1)) cGZFrameWorkW95 {
  cGZFrameWork base;
  cRZCriticalSection mCriticalSection;
  _BYTE gap_1DC[36];
  _DWORD field_200;
  _BYTE gap_204[1216];
  __declspec(align(1)) cGZFontSys mFontSys;
};

/* 483 */
struct /*VFT*/ cGZFrameWorkW95_vtbl {
  void *(__thiscall *cGZFrameWork_vtbl_func_0)(_DWORD *this);
  cRZLanguageManager *(__thiscall *GetLanguageManager)(char *this);
  char *(__thiscall *cGZFrameWork_vtbl_func_2)(char *this);
  char *(__thiscall *cGZFrameWork_vtbl_func_3)(char *this);
  int(__thiscall *cGZFrameWorkW95_vtbl_func_4)(void *this);
  int(__thiscall *GetSoundSys)(_DWORD *this);
  cGZWinMgrW95 *(__thiscall *cGZFrameWorkW95_vtbl_func_6)(cGZFrameWorkW95 *);
  int(__thiscall *cGZFrameWorkW95_vtbl_func_7)(void *this);
  void(__thiscall __noreturn *cGZFrameWorkW95_vtbl_func_8)(_DWORD *this);
  void(__stdcall *cGZFrameWorkW95_vtbl_func_9)(int nExitCode);
  void(__cdecl __noreturn *cGZFrameWorkW95_vtbl_func_10)(int Code);
  int(__thiscall *Init)(void *this);
  int(__thiscall *cGZFrameWorkW95_vtbl_func_12)(_DWORD *this);
  cRZCmdLine *(__thiscall *cGZFrameWork::GetCommandLine)(cGZFrameWork *this);
  cGZSystemServiceList *(__thiscall *GetSystemServiceList)(char *this);
  int(__thiscall *cGZFrameWork_vtbl_func_15)(_DWORD *this);
  int(__thiscall *Run)(int *this);
};

/* 479 */
struct /*VFT*/ cGZFontSys_vtbl {
  int(__thiscall *cGZFontSys_vtbl_func_0)(_DWORD *this);
  int(__thiscall *cGZFontSys_vtbl_func_1)(_DWORD *this);
  char(__thiscall *cGZFontSys_vtbl_func_2)(_BYTE *this);
  char(__thiscall *cGZFontSysShutdown)(_BYTE *this);
  int(__thiscall *cGZFontSys_vtbl_func_4)(void *this, int a2, unsigned int a3,
                                          int a4, int a5);
  int(__thiscall *cGZFontSys_vtbl_func_5)(void *this, int a2);
  char(__thiscall *cGZFontSys_vtbl_func_6)(void *this, unsigned int a2, int a3);
  char(__thiscall *GZFontSys_0094e76d)(void *this, int a2, void *a3);
  int(__thiscall *GZFontSys_0094e85e)(void *this, int a2);
  void *(__thiscall *cGZFontSys_vtbl_func_9)(void *this, char a2);
};

/* 489 */
#pragma pack(push, 1)
struct cRZKeyboard {
  cRZKeyboard_vtbl *__vftable /*VFT*/;
  _DWORD dword_4;
};
#pragma pack(pop)

/* 491 */
struct cGZWinMgrW95 {
  cGZWinMgrW95_vtbl *__vftable /*VFT*/;
  _BYTE gap_4[28];
  int dword_20;
  int dword_24;
  int dword_28;
  cGZWin *mpParent;
  int dword_30;
  _BYTE byte_34[12];
  int dword_40;
  _DWORD dword_44;
  _BYTE gap_48[4];
  cGZFrameWork *mpFrameWork;
  cRZKeyboard mKeyboard;
  _BYTE gap_58[260];
  _DWORD dword_15c;
  _BYTE gap_160[8];
  _DWORD dword_168;
  _BYTE gap_16C[12];
  cRZCursorManager *mCursorManager;
  cGZWin *mpCurrentMouseWin;
  int dword_180;
  int dword_184;
  int dword_188;
  _BYTE byte_18c[8];
  int dword_194;
  _BYTE byte_198[16];
  char byte_1a8;
  char byte_1a9;
  _BYTE gap_1AA[2];
  _BYTE byte_1ac[16];
  char byte_1bc;
  _BYTE gap_1BD[3];
  int dword_1c0;
  char mbInitialized;
  _BYTE gap_1C5[3];
  int dword_1c8;
  int dword_1cc;
  char byte_1d0;
  _BYTE gap_1D1[3];
  _DWORD dword_1d4;
  _BYTE gap_1D8[8];
  int dword_1e0;
  int dword_1e4;
  char byte_1e8;
  char mbMouseMoved;
  _BYTE gap_1EA[2];
  cRZString field_1ec;
  char byte_1fc;
  _BYTE gap_1FD[3];
  cGZWin *dword_200;
  char byte_204;
  _BYTE gap_205[3];
  int dword_208;
  struct _RTL_CRITICAL_SECTION field_20c;
};

/* 490 */
struct /*VFT*/ cGZWinMgrW95_vtbl {
  void *(__thiscall *cGZWinMgrW95_vtbl_func_0)(void *this, char a2);
};

/* 488 */
struct /*VFT*/ cRZKeyboard_vtbl {
  int(__thiscall *cRZKeyboard_vtbl_func_0)(_BYTE *this);
  bool(__fastcall *RZKeyboard_0094c4d6)(int a1, int a2, unsigned int a3,
                                        int a4);
  char(__fastcall *RZKeyboard_0094c3f6)(int a1, int a2, unsigned int a3);
  BOOL(__stdcall *cRZKeyboard_vtbl_func_3)(int vKey);
  bool(__fastcall *RZKeyboard_0094c726)(int a1, int a2, unsigned int a3);
  BOOL(__thiscall *cRZKeyboard_vtbl_func_5)(void *this);
  int(__stdcall *cRZKeyboard_vtbl_func_6)(int nVirtKey);
  int(__fastcall *RZKeyboard_0094c576)(int a1, int a2, unsigned int a3);
  int(__fastcall *RZKeyboard_0094c616)(int a1, int a2, unsigned int a3);
};

/* 685 */
#pragma pack(push, 1)
struct cRZCursorManager {
  cRZCursorManager_vtbl *__vftable /*VFT*/;
  _BYTE byte_4[12];
  char byte_10;
};
#pragma pack(pop)

/* 684 */
struct /*VFT*/ cRZCursorManager_vtbl {
  void *(__thiscall *cRZCursorManager_vtbl_func_0)(void *this, char a2);
};

/* 481 */
struct /*VFT*/ cWinMemView_vtbl {
  char(__thiscall *cWinMemView_vtbl_func_0)(void *this, _DWORD *a2);
  int(__thiscall *cWinMemView_vtbl_func_1)(_DWORD *this);
  int(__fastcall *GZWin_00889c06)(_DWORD *a1, int a2);
  int(__stdcall *cWinMemView_vtbl_func_3)();
  int(__stdcall *cWinMemView_vtbl_func_4)();
  int(__stdcall *cWinMemView_vtbl_func_5)(int a1);
  int(__thiscall *cWinMemView_vtbl_func_6)(_DWORD *this);
  char(__thiscall *cWinMemView_vtbl_func_7)(_DWORD *this, int a2);
  int(__thiscall *GZWin_0088a1f5)(void *this, int a2);
  int(__thiscall *GZWin_0088a2a5)(void *this, int a2);
  int(__thiscall *GZWin_0088a355)(void *this, int a2);
  bool(__thiscall *cWinMemView_vtbl_func_11)(void *this, int a2);
  BOOL(__thiscall *cWinMemView_vtbl_func_12)(char *this);
  char(__thiscall *cWinMemView_vtbl_func_13)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_14)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_15)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_16)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_17)(_DWORD **this);
  int(__thiscall *cWinMemView_vtbl_func_18)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_19)(char *this, int a2);
  char(__thiscall *GZWin_0088af45)(void *this, int a2);
  char(__fastcall *GZWin_0088ad71)(int a1, int a2, int a3, int a4);
  char(__thiscall *cWinMemView_vtbl_func_22)(_BYTE *this, char a2, char a3);
  int(__thiscall *cWinMemView_vtbl_func_23)(_BYTE *this, unsigned __int8 a2,
                                            char a3);
  int(__stdcall *cWinMemView_vtbl_func_24)(int a1, int a2, int a3, int a4);
  int(__thiscall *cWinMemView_vtbl_func_25)(void *this, _DWORD *a2);
  void(__thiscall *GZWin_0088a005)(void *this, _DWORD *a2);
  bool(__thiscall *cWinMemView_vtbl_func_27)(char *this, _DWORD *a2, int a3);
  int(__thiscall *cWinMemView_vtbl_func_28)(void *this, int a2, int a3);
  char(__thiscall *cWinMemView_vtbl_func_29)(_DWORD *this, int a2, int a3);
  BOOL(__stdcall *cWinMemView_vtbl_func_30)(int a1, int a2);
  bool(__stdcall *cWinMemView_vtbl_func_31)(int a1, int a2);
  int(__thiscall *cWinMemView_vtbl_func_32)(_DWORD *this, int a2, int a3);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_33)(_DWORD *this, _DWORD *a2,
                                                 _DWORD *a3);
  int(__thiscall *cWinMemView_vtbl_func_34)(_DWORD *this);
  BOOL(__thiscall *cWinMemView_vtbl_func_35)(_DWORD *this, int a2);
  int(__thiscall *cWinMemView_vtbl_func_36)(_DWORD *this, int a2, char a3);
  int(__stdcall *cWinMemView_vtbl_func_37)();
  int(__stdcall *cWinMemView_vtbl_func_38)();
  int(__thiscall *cWinMemView_vtbl_func_39)(void *this, int a2);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_40)(_DWORD *this, int a2);
  void(__stdcall *cWinMemView_vtbl_func_41)();
  int(__thiscall *GZWin_0088eff5)(int *this, unsigned __int8 a2, char a3,
                                  int a4);
  int(__thiscall *GZWin_0088f4ae)(_DWORD *this);
  char(__thiscall *GZWin_0088f41b)(float *this);
  char(__stdcall *cWinMemView_vtbl_func_45)();
  int(__thiscall *GZWin_0088d91b)(char *this);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_47)(void *this, _DWORD *a2, int a3,
                                                 char a4);
  int(__thiscall *cWinMemView_vtbl_func_48)(void *this, _DWORD *a2, int a3);
  void *(__thiscall *GZWin_0088df2a)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_50)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_51)(void *this, char a2);
  char(__fastcall *GZWin_0088c5f5)(_DWORD *a1, int a2, int a3, int a4);
  int(__thiscall *GZWin_0088e8e3)(void *this, int a2, unsigned __int8 a3);
  char(__thiscall *cWinMemView_vtbl_func_54)(_DWORD *this, char a2);
  int(__stdcall *cWinMemView_vtbl_func_55)(int a1, int a2);
  char(__thiscall *cWinMemView_vtbl_func_56)(_DWORD **this, int a2, int a3);
  int(__stdcall *cWinMemView_vtbl_func_57)(int a1, int a2, int a3);
  char(__thiscall *cWinMemView_vtbl_func_58)(_DWORD *this, int a2, int a3,
                                             int a4);
  int(__thiscall *cWinMemView_vtbl_func_59)(void *this, int a2, int a3, int a4);
  int(__thiscall *cWinMemView_vtbl_func_60)(void *this, int a2, int a3, int a4);
  int(__stdcall *cWinMemView_vtbl_func_61)(int a1, int a2, int a3);
  char(__thiscall *cWinMemView_vtbl_func_62)(_DWORD *this, int a2, int a3,
                                             int a4);
  int(__stdcall *j_WinMemView_00677c4a)(int a1, int a2, int a3);
  char(__thiscall *cWinMemView_vtbl_func_64)(_DWORD *this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_65)(_DWORD *this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_66)(_DWORD **this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_67)(_DWORD **this, int a2, int a3,
                                             int a4);
  int(__thiscall *cWinMemView_vtbl_func_68)(_DWORD **this, int a2, int a3,
                                            int a4, int a5);
  int(__thiscall *cWinMemView_vtbl_func_69)(_DWORD **this, int a2, int a3,
                                            int a4, int a5);
  int(__stdcall *j_WinMemView_00677444)();
  int(__stdcall *cWinMemView_vtbl_func_71)(int a1, int a2, int a3);
  int(__thiscall *cWinMemView_vtbl_func_72)(_DWORD *this, int a2, int a3,
                                            int a4);
  int(__thiscall *cWinMemView_vtbl_func_73)(void *this, int a2, int a3, int a4);
  bool(__thiscall *cWinMemView_vtbl_func_74)(void *this, int a2, int a3);
  int(__stdcall *cWinMemView_vtbl_func_75)(int a1, int a2);
  char(__stdcall *cWinMemView_vtbl_func_76)(int a1);
  char(__stdcall *cWinMemView_vtbl_func_77)(int a1);
  int(__thiscall *cWinMemView_vtbl_func_78)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_79)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_80)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_81)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_82)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_83)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_84)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_85)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_86)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_87)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_88)(void *this, char a2);
  int(__stdcall *cWinMemView_vtbl_func_89)(int a1);
  _BYTE *(__thiscall *cWinMemView_vtbl_func_90)(_BYTE *this);
  int(__thiscall *cWinMemView_vtbl_func_91)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_92)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_93)(_DWORD *this, char a2);
  int(__stdcall *cWinMemView_vtbl_func_94)(int a1);
  char(__stdcall *cWinMemView_vtbl_func_95)(int a1);
  int(__thiscall *cWinMemView_vtbl_func_96)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_97)(_DWORD *this);
  int(__fastcall *GZWin_0088d9c6)(int a1, int a2, int a3);
  int(__thiscall *cWinMemView_vtbl_func_99)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_100)(void *this);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_101)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_102)(void *this);
};

/* 486 */
struct /*VFT*/ cDefaultTTWindow_vtbl {
  char(__thiscall *cWinMemView_vtbl_func_0)(void *this, _DWORD *a2);
  int(__thiscall *cWinMemView_vtbl_func_1)(_DWORD *this);
  int(__fastcall *GZWin_00889c06)(_DWORD *a1, int a2);
  char(__thiscall *cGZWin_vtbl_func_3)(void *this);
  char(__thiscall *cGZWin_vtbl_func_4)(void(__thiscall ****this)(_DWORD, int));
  void *(__thiscall *cDefaultTTWindow_vtbl_func_5)(void *this, char a2);
  int(__thiscall *cWinMemView_vtbl_func_6)(_DWORD *this);
  char(__thiscall *cWinMemView_vtbl_func_7)(_DWORD *this, int a2);
  int(__thiscall *GZWin_0088a1f5)(void *this, int a2);
  int(__thiscall *GZWin_0088a2a5)(void *this, int a2);
  int(__thiscall *GZWin_0088a355)(void *this, int a2);
  bool(__thiscall *cWinMemView_vtbl_func_11)(void *this, int a2);
  BOOL(__thiscall *cWinMemView_vtbl_func_12)(char *this);
  char(__thiscall *cWinMemView_vtbl_func_13)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_14)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_15)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_16)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_17)(_DWORD **this);
  int(__thiscall *cWinMemView_vtbl_func_18)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_19)(char *this, int a2);
  char(__thiscall *GZWin_0088af45)(void *this, int a2);
  char(__fastcall *GZWin_0088ad71)(int a1, int a2, int a3, int a4);
  char(__thiscall *cWinMemView_vtbl_func_22)(_BYTE *this, char a2, char a3);
  int(__thiscall *cWinMemView_vtbl_func_23)(_BYTE *this, unsigned __int8 a2,
                                            char a3);
  int(__fastcall *GZWin_0088dafc)(_DWORD *a1, int a2, int a3, int a4, int a5,
                                  int a6);
  int(__thiscall *cWinMemView_vtbl_func_25)(void *this, _DWORD *a2);
  void(__thiscall *GZWin_0088a005)(void *this, _DWORD *a2);
  bool(__thiscall *cWinMemView_vtbl_func_27)(char *this, _DWORD *a2, int a3);
  int(__thiscall *cWinMemView_vtbl_func_28)(void *this, int a2, int a3);
  char(__thiscall *cWinMemView_vtbl_func_29)(_DWORD *this, int a2, int a3);
  BOOL(__stdcall *cWinMemView_vtbl_func_30)(int a1, int a2);
  bool(__stdcall *cWinMemView_vtbl_func_31)(int a1, int a2);
  int(__thiscall *cWinMemView_vtbl_func_32)(_DWORD *this, int a2, int a3);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_33)(_DWORD *this, _DWORD *a2,
                                                 _DWORD *a3);
  int(__thiscall *cWinMemView_vtbl_func_34)(_DWORD *this);
  BOOL(__thiscall *cWinMemView_vtbl_func_35)(_DWORD *this, int a2);
  int(__thiscall *cWinMemView_vtbl_func_36)(cWinMemView *this, int a2, char a3);
  int(__thiscall *cGZWin_vtbl_func_37)(void *this);
  int(__thiscall *cGZWin_vtbl_func_38)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_39)(void *this, int a2);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_40)(_DWORD *this, int a2);
  void(__stdcall *cWinMemView_vtbl_func_41)();
  int(__thiscall *GZWin_0088eff5)(int *this, unsigned __int8 a2, char a3,
                                  int a4);
  int(__thiscall *GZWin_0088f4ae)(_DWORD *this);
  char(__thiscall *GZWin_0088f41b)(float *this);
  char(__stdcall *cWinMemView_vtbl_func_45)();
  int(__thiscall *GZWin_0088d91b)(char *this);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_47)(void *this, _DWORD *a2, int a3,
                                                 char a4);
  int(__thiscall *cDefaultTTWindow_vtbl_func_48)(int this, int *a2, float a3);
  void *(__thiscall *GZWin_0088df2a)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_50)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_51)(void *this, char a2);
  char(__fastcall *GZWin_0088c5f5)(_DWORD *a1, int a2, int a3, int a4);
  int(__thiscall *GZWin_0088e8e3)(void *this, int a2, unsigned __int8 a3);
  char(__thiscall *cWinMemView_vtbl_func_54)(_DWORD *this, char a2);
  char(__thiscall *cGZWin_vtbl_func_55)(_DWORD **this, int a2, int a3);
  char(__thiscall *cWinMemView_vtbl_func_56)(_DWORD **this, int a2, int a3);
  char(__thiscall *cGZWin_vtbl_func_57)(_DWORD *this, int a2, int a3, int a4);
  char(__thiscall *cWinMemView_vtbl_func_58)(_DWORD *this, int a2, int a3,
                                             int a4);
  int(__thiscall *cWinMemView_vtbl_func_59)(void *this, int a2, int a3, int a4);
  int(__thiscall *cWinMemView_vtbl_func_60)(void *this, int a2, int a3, int a4);
  char(__thiscall *cGZWin_vtbl_func_61)(_DWORD *this, int a2, int a3, int a4);
  char(__thiscall *cWinMemView_vtbl_func_62)(_DWORD *this, int a2, int a3,
                                             int a4);
  char(__thiscall *cGZWin_vtbl_func_63)(_DWORD *this, int a2, int a3, int a4);
  char(__thiscall *cWinMemView_vtbl_func_64)(_DWORD *this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_65)(_DWORD *this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_66)(_DWORD **this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_67)(_DWORD **this, int a2, int a3,
                                             int a4);
  int(__thiscall *cWinMemView_vtbl_func_68)(_DWORD **this, int a2, int a3,
                                            int a4, int a5);
  int(__thiscall *cWinMemView_vtbl_func_69)(_DWORD **this, int a2, int a3,
                                            int a4, int a5);
  void(__stdcall *cGZWin_vtbl_func_70)();
  int(__thiscall *cGZWin_vtbl_func_71)(void *this, int a2, int a3, int a4);
  int(__thiscall *cWinMemView_vtbl_func_72)(_DWORD *this, int a2, int a3,
                                            int a4);
  int(__thiscall *cWinMemView_vtbl_func_73)(void *this, int a2, int a3, int a4);
  bool(__thiscall *cWinMemView_vtbl_func_74)(void *this, int a2, int a3);
  char(__thiscall *cGZWin_vtbl_func_75)(_DWORD **this, int a2, int a3);
  char(__stdcall *cWinMemView_vtbl_func_76)(int a1);
  char(__stdcall *cWinMemView_vtbl_func_77)(int a1);
  int(__thiscall *cWinMemView_vtbl_func_78)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_79)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_80)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_81)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_82)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_83)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_84)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_85)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_86)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_87)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_88)(void *this, char a2);
  char(__fastcall *DefaultTTWindow_008e69f6)(int a1, int a2, int a3);
  _BYTE *(__thiscall *cWinMemView_vtbl_func_90)(_BYTE *this);
  int(__thiscall *cWinMemView_vtbl_func_91)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_92)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_93)(_DWORD *this, char a2);
  bool(__thiscall *GZWin_0088c42b)(_DWORD *this, char a2);
  char(__stdcall *cWinMemView_vtbl_func_95)(int a1);
  int(__thiscall *cWinMemView_vtbl_func_96)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_97)(_DWORD *this);
  int(__fastcall *GZWin_0088d9c6)(int a1, int a2, int a3);
  int(__thiscall *cWinMemView_vtbl_func_99)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_100)(void *this);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_101)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_102)(void *this);
  char(__thiscall *cDefaultTTWindow_vtbl_func_103)(_DWORD *this, int a2);
};

/* 487 */
struct __cppobj __unaligned __declspec(align(1)) cDefaultTTWindow : cGZWin {
  cRZString field_4;
  _DWORD field_F0;
  _DWORD field_F4;
  _DWORD field_F8;
  _DWORD field_FC;
  _BYTE gap_100[188];
  cRZString field_e0;
  int dword_f0;
  int dword_f4;
  int dword_f8;
  char byte_fc;
};

/* 492 */
struct __declspec(align(4)) cRZFile_vtbl {
  char(__thiscall *cRZFile::Open)(void *this, char a2, int a3, char a4);
  char(__thiscall *cRZFile::IsFileOpen)(cRZFile *this);
  char(__thiscall *cRZFileClose)(cRZFile *this);
  DWORD(__thiscall *cRZFilePosition)(int this);
  DWORD(__thiscall *cRZFileLength)(int this);
  bool(__thiscall *cRZFileSetLength)(HANDLE *this, LONG lDistanceToMove);
  int(__thiscall *cRZFile::SeekToBegin)(void *this);
  int(__thiscall *cRZFile::SeekToEnd)(void *this);
  int(__thiscall *cRZFile::SeekToRelativePosition)(void *this, int a2);
  int(__thiscall *cRZFile::SeekToExactPosition)(void *this, int a2);
  int(__thiscall *cRZFile::Seek)(HANDLE *this, LONG lDistanceToMove, int a3);
  bool(__thiscall *cRZFile::Read)(HANDLE *this, LPVOID lpBuffer,
                                  DWORD nNumberOfBytesToRead);
  BOOL(__thiscall *cRZFile::ReadWithCount)
  (HANDLE *this, LPVOID lpBuffer, LPDWORD lpNumberOfBytesRead);
  bool(__thiscall *cRZFile::Write)(HANDLE *this, LPCVOID lpBuffer,
                                   DWORD nNumberOfBytesToWrite);
  BOOL(__thiscall *cRZFile::WriteWithCount)
  (HANDLE *this, LPCVOID lpBuffer, LPDWORD lpNumberOfBytesWritten);
  BOOL(__thiscall *cRZFile::Flush)(HANDLE *this);
  BOOL(__thiscall *cRZFile::Delete)(void *this);
  bool(__thiscall *cRZFile::Rename)(void *this, int a2);
  int(__thiscall *cRZFile::Exists)(char *this);
  char(__thiscall *cRZFile::Copy)(char *this, int a2, char a3);
  int(__thiscall *cRZFile::CopyByString)(char *this, int a2, char a3);
  char *(__thiscall *cRZFile::GetFilePath)(char *this);
  int(__thiscall *cRZFile::GetPathToStr)(void *this, int a2);
  char *(__thiscall *cRZFile::GetPathCStr)(void *this);
  void(__thiscall *cRZFile::SetFilePath)(char *this, void *Src);
  _DWORD *(__thiscall *cRZFile::SetPathFromRZStr)(_DWORD *this, int a2);
  char *(__thiscall *cRZFile::virtualdestructor)(cRZFile *this, char a2);
  int(__thiscall *cRZFile::AddRef)(_DWORD *this);
  void *cRZFile::Release;
};

/* 493 */
struct cRZFile {
  cRZFile_vtbl *__vftable /*VFT*/;
  cRZString msFilePath;
  char mbIsOpen;
  _BYTE gap_15[3];
  HANDLE mhFile;
  int dword_1c;
  cRZFile *dword_20;
};

/* 494 */
enum MACRO_CREATE_NEW {
  CREATE_NEW = 1,
  CREATE_ALWAYS = 2,
};

/* 495 */
enum MACRO_OPEN {
  OPEN_EXISTING = 3,
  OPEN_ALWAYS = 4,
};

/* 496 */
enum MACRO_TRUNCATE {
  TRUNCATE_EXISTING = 5,
};

/* 497 */
enum RZFileCreationType {
  CreateNew = 0,
  CreateAlways = 1,
  OpenExisting = 2,
  OpenAlways = 3,
  TruncateExisting = 4,
};

/* 498 */
struct /*VFT*/ cXObject_vtbl {
  int(__thiscall *cXObject_vtbl_func_0)(_DWORD *this, int a2, int a3);
  int(__stdcall *cXObject_vtbl_func_1)(int a1);
  void(__stdcall *cXObject_vtbl_func_2)();
  int(__thiscall *j_ObjectSim_004ab2c2)(void *this, int a2, int a3);
  void *(__thiscall *cXObject_vtbl_func_4)(void *this, char a2);
  char(__thiscall *cXObject_vtbl_func_5)(int this, int a2);
  int(__thiscall *cXObject_vtbl_func_6)(_BYTE *this);
  int(__stdcall *j_object_00482a7a)(int a1);
  _DWORD *(__thiscall *j_ObjectDraw_0048a638)(__int16 *this, _DWORD *a2,
                                              _DWORD *a3);
  char(__thiscall *cXObject_vtbl_func_9)(void *this, int a2, int a3, __int16 a4,
                                         int a5);
  void(__thiscall *cXObject_vtbl_func_10)(char **this, int a2);
  int(__thiscall *cXObject_vtbl_func_11)(void **this);
  int(__thiscall *j_object_0047c214)(_DWORD *this, __int16 a2);
  int(__thiscall *j_object_0047c730)(int this, int a2);
  void(__stdcall *cXObject_vtbl_func_14)();
  void(__thiscall *cXObject_vtbl_func_15)(int this, int a2);
  int(__thiscall *j_object_0047fab7)(char *this);
  char(__thiscall *cXObject_vtbl_func_17)(char *this, int a2, int a3, int a4,
                                          int a5);
  void(__thiscall *j_object_00480188)(int this, int a2, int a3, int a4, int a5);
  bool(__thiscall *cXObject_vtbl_func_19)(void *this, void *a2);
  char(__thiscall *cXObject_vtbl_func_20)(void *this, int a2, int a3, int a4,
                                          int a5);
  int(__thiscall *cXObject_vtbl_func_21)(void *this, int a2, int a3, int a4,
                                         int a5);
  char(__thiscall *cXObject_vtbl_func_22)(__int16 *this);
  int(__thiscall *cXObject_vtbl_func_23)(void *this, int a2);
  char(__thiscall *cXObject_vtbl_func_24)(_WORD *this);
  void(__stdcall *cXObject_vtbl_func_25)();
  int(__thiscall *j_object_00482146)(char *this, _DWORD *a2, int a3, char a4);
  int(__stdcall *cXObject_vtbl_func_27)();
};

/* 499 */
struct /*VFT*/ TreeSim_vtbl {
  void(__stdcall __noreturn *__purecall)();
  void *(__stdcall *duplicate_0_1)();
  void(__stdcall *cXObject_vtbl_func_2)();
  int(__thiscall *TreeSim_vtbl_func_3)(char *this, int a2, int a3);
  void *(__thiscall *TreeSim_vtbl_func_4)(void *this, char a2);
  char(__thiscall *TreeSim_vtbl_func_5)(_DWORD *this, int a2);
};

/* 501 */
#pragma pack(push, 1)
struct struc_51A2B0 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 502 */
struct TreeStack {
  _DWORD dword_0;
  int fFinish;
  struc_51A2B0 field_8;
};

/* 500 */
struct __declspec(align(4)) TreeSim {
  TreeSim_vtbl *__vftable /*VFT*/;
  int dword_4;
  TreeStack mTreeStack;
  int dword_1c;
  char byte_20;
  _BYTE gap_21[3];
  int dword_24;
  __int16 error;
  int field_2C;
};

/* 503 */
#pragma pack(push, 1)
struct struc_46BFB0 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 504 */
#pragma pack(push, 1)
struct struc_435C90 {
  char byte_0;
  _BYTE gap_1[3];
  char byte_4;
};
#pragma pack(pop)

/* 505 */
#pragma pack(push, 1)
struct struc_47BE60 {
  char byte_0;
  _BYTE gap_1[3];
  char byte_4;
  _BYTE gap_5[3];
  char byte_8;
  _BYTE gap_9[3];
  char byte_c;
};
#pragma pack(pop)

/* 506 */
#pragma pack(push, 1)
struct struc_485D50 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 507 */
#pragma pack(push, 1)
struct struc_485CA0 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 508 */
#pragma pack(push, 1)
struct struc_485E50 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 509 */
#pragma pack(push, 1)
struct struc_435CF0 {
  _DWORD dword_0;
  int dword_4;
};
#pragma pack(pop)

/* 510 */
#pragma pack(push, 1)
struct struc_47BEB0 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
  int dword_c;
};
#pragma pack(pop)

/* 511 */
#pragma pack(push, 1)
struct struc_4A3310 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 512 */
#pragma pack(push, 1)
struct struc_475410 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 513 */
#pragma pack(push, 1)
struct struc_42C370 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 514 */
#pragma pack(push, 1)
struct struc_4A35D0 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 515 */
#pragma pack(push, 1)
struct struc_4A3F50 {
  _DWORD dword_0;
  _BYTE byte_4;
  _BYTE gap_5[3];
  int dword_8;
};
#pragma pack(pop)

/* 516 */
#pragma pack(push, 1)
struct struc_4755D0 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 517 */
#pragma pack(push, 1)
struct struc_4A3AA0 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 518 */
struct /*VFT*/ Commander_vtbl {
  _DWORD *(__thiscall *Commander_vtbl_func_0)(_DWORD *this, char a2);
  __int16(__stdcall *Commander_vtbl_func_1)(int a1, int a2);
};

/* 519 */
#pragma pack(push, 1)
struct __cppobj Commander {
  Commander_vtbl *__vftable /*VFT*/;
  Commander *dword_4;
  int dword_8;
  int dword_c;
};
#pragma pack(pop)

/* 520 */
struct /*VFT*/ ObjectModule_vtbl {
  void *(__thiscall *ObjectModule_vtbl_func_0)(void *this, char a2);
  __int16(__thiscall *ObjectModule_vtbl_func_1)(char *this, __int16 a2, int a3);
};

/* 521 */
struct __cppobj ObjectModule : Commander {
  char byte_10;
  char byte_11;
  _BYTE gap_12[2];
  int dword_14;
  struc_4A3310 field_18;
  struc_475410 fIdleMap;
  int dword_30;
  int dword_34;
  struc_4A3310 field_38;
  char byte_44;
  _BYTE gap_45[7];
  struc_4A3310 field_4c;
  struc_42C370 field_58;
  struc_4A35D0 field_64;
  struc_4A3F50 field_70;
  int dword_7c;
  __int16 word_80;
  _BYTE gap_82[2];
  struc_4755D0 field_84;
  struc_4A3AA0 field_90;
  struc_485CA0 field_9c;
  int dword_a8;
};

/* 522 */
union ObjectModule_CommanderBase {
  ObjectModule_vtbl *__vftable /*VFT*/;
  Commander base;
};

/* 531 */
struct __cppobj cXObject : TreeSim {
  int int30;
  _DWORD dword34;
  _WORD word38;
  _WORD field_3A;
  __int16 fData[80];
  _DWORD dwordDC;
  _DWORD dwordE0;
  struc_46BFB0 struc_46bfb0E4;
  _WORD fID;
  __declspec(align(4)) struc_435C90 struc_435c90F4;
  __declspec(align(4)) struc_47BE60 struc_47be60FC;
  _DWORD dword10C;
  _DWORD dword110;
  _DWORD dword114;
  void *pvoid118;
  void *mObjectSelector;
  struc_485D50 struc_485d50120;
  struc_485CA0 struc_485ca012C;
  struc_485E50 struc_485e50138;
  _DWORD dword144;
  _DWORD dword148;
  _DWORD dword14C;
  struct tagRECT tagrect150;
  _DWORD dword160;
  _DWORD dword164;
};

/* 544 */
struct /*VFT*/ FlatFile_vtbl {
  void *(__thiscall *FlatFile_vtbl_func_0)(void *this, char a2);
};

/* 545 */
struct __cppobj FlatFile {
  FlatFile_vtbl *__vftable /*VFT*/;
  int fFile;
};

/* 546 */
struct /*VFT*/ iResFile_vtbl {
  void *(__thiscall *iResFile_vtbl_func_0)(void *this, char a2);
  void(__stdcall __noreturn *__purecall)();
  void *(__stdcall *duplicate_1_1)();
  void *(__stdcall *duplicate_1_2)();
  void *(__stdcall *duplicate_1_3)();
  void *(__stdcall *duplicate_1_4)();
  void *(__stdcall *duplicate_1_5)();
  void *(__stdcall *duplicate_1_6)();
  void *(__stdcall *duplicate_1_7)();
  void *(__stdcall *duplicate_1_8)();
  void *(__stdcall *duplicate_1_9)();
  void *(__stdcall *duplicate_1_10)();
  void *(__stdcall *duplicate_1_11)();
  void *(__stdcall *duplicate_1_12)();
  void *(__stdcall *duplicate_1_13)();
  void *(__stdcall *duplicate_1_14)();
  void *(__stdcall *duplicate_1_15)();
  int(__thiscall *iResFile_vtbl_func_17)(void *this, int a2, __int16 a3,
                                         char a4, int a5);
  void *(__stdcall *duplicate_1_16)();
  void *(__stdcall *duplicate_1_17)();
  void *(__stdcall *duplicate_1_18)();
  void *(__stdcall *duplicate_1_19)();
  char(__thiscall *iResFile_vtbl_func_22)(void *this, int a2);
  void *(__stdcall *duplicate_1_20)();
  void *(__stdcall *duplicate_1_21)();
  void *(__stdcall *duplicate_1_22)();
  void *(__stdcall *duplicate_1_23)();
  void *(__stdcall *duplicate_1_24)();
  void *(__stdcall *duplicate_1_25)();
  void *(__stdcall *duplicate_1_26)();
  int(__thiscall *iResFile_vtbl_func_30)(void *this, int a2, int a3, __int16 a4,
                                         int a5, int a6, char a7);
  void *(__stdcall *duplicate_1_27)();
  void *(__stdcall *duplicate_1_28)();
  void *(__stdcall *duplicate_1_29)();
  int(__thiscall *iResFile_vtbl_func_34)(void *this, void *a2, __int16 a3,
                                         __int16 a4);
};

/* 547 */
#pragma pack(push, 1)
struct __cppobj iResFile {
  iResFile_vtbl *__vftable /*VFT*/;
  iResFile *dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 548 */
struct /*VFT*/ IFFResFile_vtbl {
  void *(__thiscall *IFFResFile_vtbl_func_0)(void *this, char a2);
  int(__thiscall *j_IFFResFile_004536ea)(_DWORD *this, int a2);
  int(__thiscall *IFFResFile_vtbl_func_2)(void *this, int a2);
  int(__thiscall *j_IFFResFile_004533ba)(_DWORD *this, int a2);
  int(__stdcall *IFFResFile_vtbl_func_4)();
  int(__stdcall *IFFResFile_vtbl_func_5)();
  int(__thiscall *IFFResFile_vtbl_func_6)(_DWORD *this);
  int(__thiscall *j_IFFResFile_00453d10)(_DWORD *this);
  int(__thiscall *IFFResFile_vtbl_func_8)(char *this);
  int(__stdcall *IFFResFile_vtbl_func_9)(int a1);
  int(__thiscall *IFFResFile_vtbl_func_10)(char *this);
  __int16(__thiscall *IFFResFile_vtbl_func_11)(_DWORD *this);
  int(__thiscall *IFFResFile_vtbl_func_12)(_DWORD *this, __int16 a2);
  __int16(__thiscall *IFFResFile_vtbl_func_13)(_DWORD *this, int a2);
  int(__thiscall *IFFResFile_vtbl_func_14)(_DWORD *this, int a2, __int16 a3,
                                           void(__cdecl *a4)(int, size_t));
  int(__thiscall *IFFResFile_vtbl_func_15)(_DWORD *this, int a2, int a3,
                                           void(__cdecl *a4)(int, size_t));
  int(__thiscall *IFFResFile_vtbl_func_16)(_DWORD *this, int a2, __int16 a3,
                                           void(__cdecl *a4)(int, size_t));
  int(__thiscall *iResFile_vtbl_func_17)(void *this, int a2, __int16 a3,
                                         char a4, int a5);
  int(__thiscall *j_IFFResFile_0045441a)(_DWORD *this, int a2, void *a3);
  int(__thiscall *IFFResFile_vtbl_func_19)(_DWORD *this, int a2);
  __int16(__thiscall *IFFResFile_vtbl_func_20)(_DWORD *this, int a2, _WORD *a3);
  int(__thiscall *IFFResFile_vtbl_func_21)(_DWORD *this, int a2, _WORD *a3);
  char(__thiscall *iResFile_vtbl_func_22)(void *this, int a2);
  int(__thiscall *IFFResFile_vtbl_func_23)(_DWORD *this, int a2, int a3);
  __int16(__thiscall *IFFResFile_vtbl_func_24)(_DWORD *this, int a2);
  int(__thiscall *j_IFFResFile_0045496d)(_DWORD *this, int a2);
  int(__thiscall *IFFResFile_vtbl_func_26)(_DWORD *this, int a2);
  bool(__thiscall *IFFResFile_vtbl_func_27)(_DWORD *this, int a2);
  int(__thiscall *IFFResFile_vtbl_func_28)(_DWORD *this, int a2, __int16 a3);
  int(__thiscall *j_IFFResFile_00454cee)(_DWORD *this, int a2, int a3,
                                         __int16 a4, int a5, char a6);
  int(__thiscall *iResFile_vtbl_func_30)(void *this, int a2, int a3, __int16 a4,
                                         int a5, int a6, char a7);
  int(__thiscall *j_IFFResFile_00454f69)(_DWORD *this, int a2);
  int(__thiscall *IFFResFile_vtbl_func_32)(_DWORD *this, int a2);
  int(__thiscall *j_IFFResFile_00455611)(_DWORD *this, int a2, __int16 a3,
                                         int a4, char a5);
  int(__thiscall *iResFile_vtbl_func_34)(void *this, void *a2, __int16 a3,
                                         __int16 a4);
};

/* 549 */
struct __cppobj IFFResFile : iResFile, FlatFile {
  _BYTE gap_14[4];
  _DWORD field_18;
  _DWORD field_1C;
  _DWORD field_20;
  _DWORD field_24;
  _DWORD field_28;
  int x2C;
  int x30;
  int x34;
  int x38;
  char x3C;
  _BYTE gap_3D[3];
  int x40;
};

/* 550 */
struct FileChunkHeader {
  int type;
  _DWORD size;
  __int16 chunkID;
  __int16 flags;
  char label[64];
};

/* 551 */
struct /*VFT*/ CTGString_vtbl {
  void *(__thiscall *CTGString_vtbl_func_0)(void *this, char a2);
  size_t(__thiscall *CTGString_vtbl_func_1)(int this);
  size_t(__thiscall *CTGString_vtbl_func_2)(int this);
  int(__thiscall *CTGString_vtbl_func_3)(void *this);
};

/* 552 */
struct __cppobj CTGString {
  CTGString_vtbl *__vftable /*VFT*/;
  string base;
};

/* 553 */
struct CTGFile {
  CTGString field_0;
  int mhFile;
  int mnSize;
  int dword_14;
  int dword_18;
  char mbFAR;
  char byte_1d;
  _BYTE gap_1E[2];
  void *mpCTGFileManager;
  int dword_24;
  int dword_28;
  int mnCacheOffset;
  int mnCachePos;
};

/* 557 */
struct __cppobj CTGFileManager {
  _DWORD field_0;
  _BYTE gap_4[8];
  _DWORD field_C;
  _BYTE gap_10[32];
};

/* 558 */
struct __unaligned __declspec(align(1)) FAREntry {
  _BYTE byte_0[1];
  _BYTE gap_1[3];
  string szFileName;
  HANDLE hFile;
  int nFileOffset;
  _BYTE gap_14[4];
  int nFileLength;
  char byte_1c;
  char byte_1d;
  char byte_1e;
};

/* 559 */
enum IFFChunkTypes {
  kBCON = 0x42434F4E,
  kTCRN = 0x5452434E,
  kSTR_ = 0x53545223,
};

/* 572 */
struct CheatCode {
  _DWORD id;
  int name;
  int dword_8;
  int dword_c;
  int argc;
};

/* 573 */
struct stru_FEE158 {
  _DWORD dword_0;
  _DWORD field_4;
  int field_8;
  int field_C;
};

/* 578 */
struct __declspec(align(4)) cGlobs {
  House *gHouse;
  _DWORD gHouseViewer;
  _BYTE gap_8[4];
  StdResFile *field_C;
  _DWORD gSound;
  PalWrap *gPalWrap;
  _DWORD gGameTools;
  cSimulator *gSimulator;
  _DWORD gTerrain;
  _DWORD gNeighborhood;
  ObjectFolder *gObjectFolder;
  _BYTE *gAnimDevice;
  _DWORD gDevice3D;
  int dword_34;
  int dword_38;
  _DWORD field_3C;
  _DWORD gSimsView;
  _BYTE gap_44[8];
  _DWORD dword_4c;
  cGZWinMgrW95 *gWinMgr;
  int field_54;
  int field_58;
  int field_5C;
  int field_60;
  int field_64;
  int field_68;
  int field_6C;
};

/* 622 */
struct __cppobj House : Commander {
  int fFamily;
  ObjectModule *mObjectModule;
  int dword_18;
  int dword_1c;
  cSimulator *simulator;
  int mpRoomManager;
  string field_28;
  int dword_30;
  int dword_34;
  _BYTE gap_38[36];
  _DWORD dword_5c;
  _BYTE gap_60[4];
  int dword_64;
  int dword_68;
};

/* 611 */
#pragma pack(push, 1)
struct __cppobj ChainResFile : iResFile {
  char byte_c;
};
#pragma pack(pop)

/* 602 */
struct cStringBuffer {
  char *buf;
  _DWORD fCapacity;
};

/* 612 */
struct __cppobj SeqResFile : ChainResFile {
  _BYTE gap_D[159];
  _DWORD field_AC;
  cStringBuffer field_B0;
  _BYTE gapB8;
  char field_B9[167];
};

/* 614 */
#pragma pack(push, 1)
struct __cppobj StdResFile : SeqResFile {};
#pragma pack(pop)

/* 597 */
struct __cppobj PalWrap {
  PalWrap_vtbl *__vftable /*VFT*/;
  HPALETTE fPalette;
  int dword_8;
  _BYTE gap_C[8];
  int dword_14;
  float dword_18;
  int dword_1c;
};

/* 643 */
struct __cppobj cSimulator : Commander {
  _WORD fGlobals[32];
  _DWORD funds1;
  _DWORD funds2;
  _DWORD field_58;
  int dword_5c;
  _DWORD dword_60;
  int dword_64;
  _DWORD field_68;
  _DWORD field_6C;
  ObjectModule *mObjectModule;
  int dword_74;
  int dword_78;
  int dword_7c;
  _DWORD dword_80;
  int dword_84;
  char byte_88;
  _BYTE gap_89[3];
  int dword_8c;
  _BYTE gap_90[144];
  _DWORD dword_120;
  _BYTE gap_124[8];
  _DWORD mExpenseReport;
  int field_130;
  int field_134;
  int field_138;
  int field_13C;
  int field_140;
  int field_144;
  int field_148;
  int field_14C;
};

/* 600 */
#pragma pack(push, 1)
struct __cppobj BehaviorFinder {
  BehaviorFinder_vtbl *__vftable /*VFT*/;
};
#pragma pack(pop)

/* 601 */
#pragma pack(push, 1)
struct struc_4989F0 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 603 */
#pragma pack(push, 1)
struct cPathBuffer {
  cStringBuffer buf;
  char *c_str;
};
#pragma pack(pop)

/* 604 */
#pragma pack(push, 1)
struct struc_498BF0 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 605 */
#pragma pack(push, 1)
struct struc_498DE0 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 606 */
#pragma pack(push, 1)
struct struc_434CF0 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 607 */
#pragma pack(push, 1)
struct struc_43F740 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 608 */
struct __cppobj ObjectFolder : BehaviorFinder, Commander {
  char byte_14;
  _BYTE gap_15[3];
  int dword_18;
  int dword_1c;
  struc_4989F0 field_20;
  ObjResFile *fGlobalFile;
  cPathBuffer field_30;
  _BYTE gap_3C[256];
  cPathBuffer field_13c;
  _BYTE gap_148[256];
  cPathBuffer field_248;
  _BYTE gap_254[256];
  cPathBuffer field_354;
  _BYTE gap_360[256];
  cPathBuffer field_460;
  _BYTE gap_46C[256];
  cPathBuffer field_56c;
  _BYTE gap_578[256];
  char byte_678;
  _BYTE gap_679[3];
  struc_498BF0 field_67c;
  struc_498DE0 field_688;
  _BYTE byte_694[12];
  struc_434CF0 field_6a0;
  struc_43F740 field_6ac;
};

/* 596 */
struct /*VFT*/ PalWrap_vtbl {
  void *(__thiscall *PalWrap_vtbl_func_0)(void *this, char a2);
};

/* 599 */
struct /*VFT*/ BehaviorFinder_vtbl {
  void(__stdcall __noreturn *__purecall)();
};

/* 616 */
#pragma pack(push, 1)
struct stru_4C13F0 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 617 */
#pragma pack(push, 1)
struct stru_4C10B0 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 618 */
#pragma pack(push, 1)
struct stru_4C1270 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 620 */
#pragma pack(push, 1)
struct __cppobj ObjResFile : StdResFile {
  stru_4C13F0 field_160;
  stru_4C10B0 field_16c;
  stru_4C1270 field_178;
};
#pragma pack(pop)

/* 579 */
struct /*VFT*/ cIGZUnknown_vtbl {
  void(__stdcall __noreturn *__purecall)();
  void *(__stdcall *duplicate_0_1)();
};

/* 580 */
#pragma pack(push, 1)
struct __cppobj cIGZUnknown {
  cIGZUnknown_vtbl *__vftable /*VFT*/;
};
#pragma pack(pop)

/* 581 */
struct /*VFT*/ cIGZWinDlg_vtbl {
  void(__stdcall __noreturn *__purecall)();
  void *(__stdcall *duplicate_0_1)();
  void *(__stdcall *duplicate_0_2)();
};

/* 582 */
#pragma pack(push, 1)
struct __cppobj cIGZWinDlg : cIGZUnknown {};
#pragma pack(pop)

/* 583 */
#pragma pack(push, 1)
struct __cppobj cGZWinDlg : cGZWin, cIGZWinDlg {};
#pragma pack(pop)

/* 584 */
struct /*VFT*/ cGZWinDlg_vtbl {
  char(__thiscall *cWinMemView_vtbl_func_0)(void *this, _DWORD *a2);
  int(__thiscall *cGZWinDlg_vtbl_func_1)(void *this);
  int(__thiscall *cGZWinDlg_vtbl_func_2)(void *this);
  char(__thiscall *cGZWin_vtbl_func_3)(cGZWin *this);
  char(__thiscall *cGZWin_vtbl_func_4)(void(__thiscall ****this)(_DWORD, int));
  int(__stdcall *cGZWinDlg_vtbl_func_5)(int a1);
  int(__thiscall *cWinMemView_vtbl_func_6)(_DWORD *this);
  char(__thiscall *cWinMemView_vtbl_func_7)(_DWORD *this, int a2);
  int(__thiscall *GZWin_0088a1f5)(void *this, int a2);
  int(__thiscall *GZWin_0088a2a5)(void *this, int a2);
  int(__thiscall *GZWin_0088a355)(void *this, int a2);
  bool(__thiscall *cWinMemView_vtbl_func_11)(void *this, int a2);
  BOOL(__thiscall *cWinMemView_vtbl_func_12)(char *this);
  char(__thiscall *cWinMemView_vtbl_func_13)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_14)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_15)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_16)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_17)(cGZWin *this);
  int(__thiscall *cWinMemView_vtbl_func_18)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_19)(char *this, int a2);
  char(__thiscall *GZWin_0088af45)(void *this, int a2);
  char(__fastcall *GZWin_0088ad71)(int a1, RZFileCreationType a2, cGZWin *a3,
                                   cGZWin *a4);
  char(__thiscall *cWinMemView_vtbl_func_22)(_BYTE *this, char a2, char a3);
  int(__thiscall *cWinMemView_vtbl_func_23)(_BYTE *this, unsigned __int8 a2,
                                            char a3);
  int(__fastcall *GZWin_0088dafc)(char *a1, RZFileCreationType a2, int a3,
                                  int a4, int a5, int a6);
  int(__thiscall *cWinMemView_vtbl_func_25)(void *this, _DWORD *a2);
  void(__thiscall *GZWin_0088a005)(void *this, _DWORD *a2);
  bool(__thiscall *cWinMemView_vtbl_func_27)(char *this, _DWORD *a2, int a3);
  int(__thiscall *cWinMemView_vtbl_func_28)(void *this, int a2, int a3);
  char(__thiscall *cWinMemView_vtbl_func_29)(_DWORD *this, int a2, int a3);
  BOOL(__stdcall *cWinMemView_vtbl_func_30)(int a1, int a2);
  bool(__stdcall *cWinMemView_vtbl_func_31)(int a1, int a2);
  int(__thiscall *cWinMemView_vtbl_func_32)(_DWORD *this, int a2, int a3);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_33)(_DWORD *this, _DWORD *a2,
                                                 _DWORD *a3);
  int(__thiscall *cWinMemView_vtbl_func_34)(_DWORD *this);
  BOOL(__thiscall *cWinMemView_vtbl_func_35)(_DWORD *this, int a2);
  int(__thiscall *cWinMemView_vtbl_func_36)(cGZWin *this, int a2, char a3);
  int(__thiscall *cGZWin_vtbl_func_37)(cGZWin *this);
  int(__thiscall *cGZWin_vtbl_func_38)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_39)(void *this, int a2);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_40)(_DWORD *this, int a2);
  void(__stdcall *cWinMemView_vtbl_func_41)();
  int(__thiscall *GZWin_0088eff5)(cGZWin *this, unsigned __int8 a2, char a3,
                                  int a4);
  int(__thiscall *GZWin_0088f4ae)(cGZWin *this);
  char(__thiscall *GZWin_0088f41b)(float *this);
  char(__stdcall *cWinMemView_vtbl_func_45)();
  int(__thiscall *GZWin_0088d91b)(char *this);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_47)(void *this, _DWORD *a2, int a3,
                                                 char a4);
  int(__thiscall *cWinMemView_vtbl_func_48)(void *this, _DWORD *a2, int a3);
  void *(__thiscall *GZWin_0088df2a)(char *this);
  int(__thiscall *cWinMemView_vtbl_func_50)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_51)(cWinMemView *this, char a2);
  char(__fastcall *GZWin_0088c5f5)(_DWORD *a1, RZFileCreationType a2, int a3,
                                   int a4);
  int(__thiscall *GZWin_0088e8e3)(void *this, int a2, unsigned __int8 a3);
  char(__thiscall *cWinMemView_vtbl_func_54)(_DWORD *this, char a2);
  char(__stdcall *cGZWinDlg_vtbl_func_55)(int a1, int a2);
  char(__thiscall *cWinMemView_vtbl_func_56)(_DWORD **this, int a2, int a3);
  char(__thiscall *cGZWin_vtbl_func_57)(_DWORD *this, int a2, int a3, int a4);
  char(__thiscall *cWinMemView_vtbl_func_58)(_DWORD *this, int a2, int a3,
                                             int a4);
  int(__thiscall *cWinMemView_vtbl_func_59)(void *this, int a2, int a3, int a4);
  int(__thiscall *cWinMemView_vtbl_func_60)(void *this, int a2, int a3, int a4);
  char(__thiscall *cGZWin_vtbl_func_61)(_DWORD *this, int a2, int a3, int a4);
  char(__thiscall *cWinMemView_vtbl_func_62)(_DWORD *this, int a2, int a3,
                                             int a4);
  char(__thiscall *cGZWin_vtbl_func_63)(_DWORD *this, int a2, int a3, int a4);
  char(__thiscall *cWinMemView_vtbl_func_64)(_DWORD *this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_65)(_DWORD *this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_66)(_DWORD **this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_67)(_DWORD **this, int a2, int a3,
                                             int a4);
  int(__thiscall *cWinMemView_vtbl_func_68)(_DWORD **this, int a2, int a3,
                                            int a4, int a5);
  int(__thiscall *cWinMemView_vtbl_func_69)(_DWORD **this, int a2, int a3,
                                            int a4, int a5);
  void(__stdcall *cGZWin_vtbl_func_70)();
  int(__thiscall *cGZWin_vtbl_func_71)(void *this, int a2, int a3, int a4);
  int(__thiscall *cWinMemView_vtbl_func_72)(_DWORD *this, int a2, int a3,
                                            int a4);
  int(__thiscall *cWinMemView_vtbl_func_73)(void *this, int a2, int a3, int a4);
  bool(__thiscall *cWinMemView_vtbl_func_74)(void *this, int a2, int a3);
  char(__thiscall *cGZWin_vtbl_func_75)(_DWORD **this, int a2, int a3);
  char(__stdcall *cWinMemView_vtbl_func_76)(int a1);
  char(__stdcall *cWinMemView_vtbl_func_77)(int a1);
  int(__thiscall *cWinMemView_vtbl_func_78)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_79)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_80)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_81)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_82)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_83)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_84)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_85)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_86)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_87)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_88)(void *this, char a2);
  char(__stdcall *cGZWin_vtbl_func_89)(char a1);
  _BYTE *(__thiscall *cWinMemView_vtbl_func_90)(_BYTE *this);
  int(__thiscall *cWinMemView_vtbl_func_91)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_92)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_93)(_DWORD *this, char a2);
  bool(__thiscall *GZWin_0088c42b)(cGZWin *this, char a2);
  char(__stdcall *cWinMemView_vtbl_func_95)(int a1);
  int(__thiscall *cWinMemView_vtbl_func_96)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_97)(_DWORD *this);
  int(__fastcall *GZWin_0088d9c6)(int a1, RZFileCreationType a2, int a3);
  int(__thiscall *cWinMemView_vtbl_func_99)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_100)(void *this);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_101)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_102)(void *this);
};

/* 585 */
#pragma pack(push, 1)
struct stru_693540 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 586 */
#pragma pack(push, 1)
struct stru_68CB90 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 587 */
#pragma pack(push, 1)
struct stru_488910 {
  _DWORD dword_0;
};
#pragma pack(pop)

/* 588 */
#pragma pack(push, 1)
struct stru_487F40 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
  int dword_c;
};
#pragma pack(pop)

/* 589 */
#pragma pack(push, 1)
struct stru_5F9E60 {
  _DWORD dword_0;
};
#pragma pack(pop)

/* 590 */
#pragma pack(push, 1)
struct stru_487EB0 {
  _DWORD dword_0;
  int dword_4;
};
#pragma pack(pop)

/* 591 */
#pragma pack(push, 1)
struct __cppobj cWinTextWrap : cGZWin {
  stru_5F9E60 field_e0;
  int dword_e4;
  int dword_e8;
  stru_5F9E60 field_ec;
  int dword_f0;
  int dword_f4;
  int dword_f8;
  int dword_fc;
  stru_5F9E60 field_100;
  int dword_104;
  int dword_108;
  int dword_10c;
};
#pragma pack(pop)

/* 592 */
struct /*VFT*/ cWinTextWrap_vtbl {
  char(__thiscall *cWinMemView_vtbl_func_0)(void *this, _DWORD *a2);
  int(__thiscall *cWinMemView_vtbl_func_1)(_DWORD *this);
  int(__fastcall *GZWin_00889c06)(_DWORD *a1, RZFileCreationType a2);
  int(__stdcall *cWinTextWrap_vtbl_func_3)();
  int(__stdcall *cWinTextWrap_vtbl_func_4)();
  int(__stdcall *cWinTextWrap_vtbl_func_5)(int a1);
  int(__thiscall *cWinMemView_vtbl_func_6)(_DWORD *this);
  char(__thiscall *cWinMemView_vtbl_func_7)(_DWORD *this, int a2);
  int(__thiscall *GZWin_0088a1f5)(void *this, int a2);
  int(__thiscall *GZWin_0088a2a5)(void *this, int a2);
  int(__thiscall *GZWin_0088a355)(void *this, int a2);
  bool(__thiscall *cWinMemView_vtbl_func_11)(void *this, int a2);
  BOOL(__thiscall *cWinMemView_vtbl_func_12)(char *this);
  char(__thiscall *cWinMemView_vtbl_func_13)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_14)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_15)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_16)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_17)(cGZWin *this);
  int(__thiscall *cWinMemView_vtbl_func_18)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_19)(char *this, int a2);
  char(__thiscall *GZWin_0088af45)(void *this, int a2);
  char(__fastcall *GZWin_0088ad71)(int a1, RZFileCreationType a2, cGZWin *a3,
                                   cGZWin *a4);
  char(__thiscall *cWinMemView_vtbl_func_22)(_BYTE *this, char a2, char a3);
  int(__thiscall *cWinMemView_vtbl_func_23)(_BYTE *this, unsigned __int8 a2,
                                            char a3);
  int(__stdcall *cWinTextWrap_vtbl_func_24)(int a1, int a2, int a3, int a4);
  int(__thiscall *cWinMemView_vtbl_func_25)(void *this, _DWORD *a2);
  void(__thiscall *GZWin_0088a005)(void *this, _DWORD *a2);
  bool(__thiscall *cWinMemView_vtbl_func_27)(char *this, _DWORD *a2, int a3);
  int(__thiscall *cWinMemView_vtbl_func_28)(void *this, int a2, int a3);
  char(__thiscall *cWinMemView_vtbl_func_29)(_DWORD *this, int a2, int a3);
  BOOL(__stdcall *cWinMemView_vtbl_func_30)(int a1, int a2);
  bool(__stdcall *cWinMemView_vtbl_func_31)(int a1, int a2);
  int(__thiscall *cWinMemView_vtbl_func_32)(_DWORD *this, int a2, int a3);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_33)(_DWORD *this, _DWORD *a2,
                                                 _DWORD *a3);
  int(__thiscall *cWinMemView_vtbl_func_34)(_DWORD *this);
  BOOL(__thiscall *cWinMemView_vtbl_func_35)(_DWORD *this, int a2);
  int(__thiscall *cWinMemView_vtbl_func_36)(cGZWin *this, int a2, char a3);
  int(__thiscall *cGZWin_vtbl_func_37)(cGZWin *this);
  int(__thiscall *cGZWin_vtbl_func_38)(void *this);
  int(__stdcall *cWinTextWrap_vtbl_func_39)(int a1);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_40)(_DWORD *this, int a2);
  void(__stdcall *cWinMemView_vtbl_func_41)();
  int(__thiscall *GZWin_0088eff5)(cGZWin *this, unsigned __int8 a2, char a3,
                                  int a4);
  int(__thiscall *GZWin_0088f4ae)(cGZWin *this);
  char(__thiscall *GZWin_0088f41b)(float *this);
  char(__stdcall *cWinMemView_vtbl_func_45)();
  int(__thiscall *GZWin_0088d91b)(char *this);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_47)(void *this, _DWORD *a2, int a3,
                                                 char a4);
  int(__thiscall *cWinMemView_vtbl_func_48)(void *this, _DWORD *a2, int a3);
  void *(__thiscall *GZWin_0088df2a)(char *this);
  int(__thiscall *cWinMemView_vtbl_func_50)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_51)(cWinMemView *this, char a2);
  char(__fastcall *GZWin_0088c5f5)(_DWORD *a1, RZFileCreationType a2, int a3,
                                   int a4);
  int(__thiscall *GZWin_0088e8e3)(void *this, int a2, unsigned __int8 a3);
  char(__thiscall *cWinMemView_vtbl_func_54)(_DWORD *this, char a2);
  char(__thiscall *cGZWin_vtbl_func_55)(_DWORD **this, int a2, int a3);
  char(__thiscall *cWinMemView_vtbl_func_56)(_DWORD **this, int a2, int a3);
  char(__thiscall *cGZWin_vtbl_func_57)(_DWORD *this, int a2, int a3, int a4);
  char(__thiscall *cWinMemView_vtbl_func_58)(_DWORD *this, int a2, int a3,
                                             int a4);
  int(__thiscall *cWinMemView_vtbl_func_59)(void *this, int a2, int a3, int a4);
  int(__thiscall *cWinMemView_vtbl_func_60)(void *this, int a2, int a3, int a4);
  char(__thiscall *cGZWin_vtbl_func_61)(_DWORD *this, int a2, int a3, int a4);
  char(__thiscall *cWinMemView_vtbl_func_62)(_DWORD *this, int a2, int a3,
                                             int a4);
  char(__thiscall *cGZWin_vtbl_func_63)(_DWORD *this, int a2, int a3, int a4);
  char(__thiscall *cWinMemView_vtbl_func_64)(_DWORD *this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_65)(_DWORD *this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_66)(_DWORD **this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_67)(_DWORD **this, int a2, int a3,
                                             int a4);
  int(__thiscall *cWinMemView_vtbl_func_68)(_DWORD **this, int a2, int a3,
                                            int a4, int a5);
  int(__thiscall *cWinMemView_vtbl_func_69)(_DWORD **this, int a2, int a3,
                                            int a4, int a5);
  void(__stdcall *cGZWin_vtbl_func_70)();
  int(__thiscall *cGZWin_vtbl_func_71)(void *this, int a2, int a3, int a4);
  int(__thiscall *cWinMemView_vtbl_func_72)(_DWORD *this, int a2, int a3,
                                            int a4);
  int(__thiscall *cWinMemView_vtbl_func_73)(void *this, int a2, int a3, int a4);
  bool(__thiscall *cWinMemView_vtbl_func_74)(void *this, int a2, int a3);
  char(__thiscall *cGZWin_vtbl_func_75)(_DWORD **this, int a2, int a3);
  char(__stdcall *cWinMemView_vtbl_func_76)(int a1);
  char(__stdcall *cWinMemView_vtbl_func_77)(int a1);
  int(__thiscall *cWinMemView_vtbl_func_78)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_79)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_80)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_81)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_82)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_83)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_84)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_85)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_86)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_87)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_88)(void *this, char a2);
  int(__stdcall *j_WinTextWrap_006ac435)(int a1);
  _BYTE *(__thiscall *cWinMemView_vtbl_func_90)(_BYTE *this);
  int(__thiscall *cWinMemView_vtbl_func_91)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_92)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_93)(_DWORD *this, char a2);
  bool(__thiscall *GZWin_0088c42b)(cGZWin *this, char a2);
  char(__stdcall *cWinMemView_vtbl_func_95)(int a1);
  int(__thiscall *cWinMemView_vtbl_func_96)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_97)(_DWORD *this);
  int(__fastcall *GZWin_0088d9c6)(int a1, RZFileCreationType a2, int a3);
  int(__thiscall *cWinMemView_vtbl_func_99)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_100)(void *this);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_101)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_102)(void *this);
};

/* 593 */
#pragma pack(push, 1)
struct stru_5F0880 {
  _DWORD dword_0;
  _BYTE gap_4[4];
  int dword_8;
};
#pragma pack(pop)

/* 594 */
struct /*VFT*/ cWinPictureDialog_vtbl {
  char(__thiscall *cWinMemView_vtbl_func_0)(void *this, _DWORD *a2);
  int(__thiscall *cGZWinDlg_vtbl_func_1)(void *this);
  int(__thiscall *cGZWinDlg_vtbl_func_2)(void *this);
  int(__stdcall *cWinPictureDialog_vtbl_func_3)();
  int(__stdcall *cWinPictureDialog_vtbl_func_4)();
  int(__stdcall *cWinPictureDialog_vtbl_func_5)(int a1);
  int(__thiscall *cWinMemView_vtbl_func_6)(_DWORD *this);
  char(__thiscall *cWinMemView_vtbl_func_7)(_DWORD *this, int a2);
  int(__thiscall *GZWin_0088a1f5)(void *this, int a2);
  int(__thiscall *GZWin_0088a2a5)(void *this, int a2);
  int(__thiscall *GZWin_0088a355)(void *this, int a2);
  bool(__thiscall *cWinMemView_vtbl_func_11)(void *this, int a2);
  BOOL(__thiscall *cWinMemView_vtbl_func_12)(char *this);
  char(__thiscall *cWinMemView_vtbl_func_13)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_14)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_15)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_16)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_17)(cGZWin *this);
  int(__thiscall *cWinMemView_vtbl_func_18)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_19)(char *this, int a2);
  char(__thiscall *GZWin_0088af45)(void *this, int a2);
  char(__fastcall *GZWin_0088ad71)(int a1, RZFileCreationType a2, cGZWin *a3,
                                   cGZWin *a4);
  char(__thiscall *cWinMemView_vtbl_func_22)(_BYTE *this, char a2, char a3);
  int(__thiscall *cWinMemView_vtbl_func_23)(_BYTE *this, unsigned __int8 a2,
                                            char a3);
  int(__fastcall *Resize)(char *a1, RZFileCreationType a2, int a3, int a4,
                          int a5, int a6);
  int(__thiscall *cWinMemView_vtbl_func_25)(void *this, _DWORD *a2);
  void(__thiscall *GZWin_0088a005)(void *this, _DWORD *a2);
  bool(__thiscall *cWinMemView_vtbl_func_27)(char *this, _DWORD *a2, int a3);
  int(__thiscall *cWinMemView_vtbl_func_28)(void *this, int a2, int a3);
  char(__thiscall *cWinMemView_vtbl_func_29)(_DWORD *this, int a2, int a3);
  BOOL(__stdcall *cWinMemView_vtbl_func_30)(int a1, int a2);
  bool(__stdcall *cWinMemView_vtbl_func_31)(int a1, int a2);
  int(__thiscall *cWinMemView_vtbl_func_32)(_DWORD *this, int a2, int a3);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_33)(_DWORD *this, _DWORD *a2,
                                                 _DWORD *a3);
  int(__thiscall *cWinMemView_vtbl_func_34)(_DWORD *this);
  BOOL(__thiscall *cWinMemView_vtbl_func_35)(_DWORD *this, int a2);
  int(__thiscall *cWinMemView_vtbl_func_36)(cGZWin *this, int a2, char a3);
  int(__thiscall *cGZWin_vtbl_func_37)(cGZWin *this);
  int(__thiscall *cGZWin_vtbl_func_38)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_39)(void *this, int a2);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_40)(_DWORD *this, int a2);
  void(__stdcall *cWinMemView_vtbl_func_41)();
  int(__thiscall *GZWin_0088eff5)(cGZWin *this, unsigned __int8 a2, char a3,
                                  int a4);
  int(__thiscall *GZWin_0088f4ae)(cGZWin *this);
  char(__thiscall *GZWin_0088f41b)(float *this);
  char(__stdcall *cWinMemView_vtbl_func_45)();
  int(__thiscall *GZWin_0088d91b)(char *this);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_47)(void *this, _DWORD *a2, int a3,
                                                 char a4);
  int(__thiscall *cWinMemView_vtbl_func_48)(void *this, _DWORD *a2, int a3);
  void *(__thiscall *GZWin_0088df2a)(char *this);
  int(__thiscall *cWinMemView_vtbl_func_50)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_51)(cWinMemView *this, char a2);
  char(__fastcall *GZWin_0088c5f5)(_DWORD *a1, RZFileCreationType a2, int a3,
                                   int a4);
  int(__thiscall *GZWin_0088e8e3)(void *this, int a2, unsigned __int8 a3);
  int(__stdcall *cWinPictureDialog_vtbl_func_54)(char a1);
  int(__stdcall *cWinPictureDialog_vtbl_func_55)(int a1, int a2);
  char(__thiscall *cWinMemView_vtbl_func_56)(_DWORD **this, int a2, int a3);
  int(__stdcall *cWinPictureDialog_vtbl_func_57)(int a1, int a2, int a3);
  char(__thiscall *cWinMemView_vtbl_func_58)(_DWORD *this, int a2, int a3,
                                             int a4);
  int(__thiscall *cWinMemView_vtbl_func_59)(void *this, int a2, int a3, int a4);
  int(__thiscall *cWinMemView_vtbl_func_60)(void *this, int a2, int a3, int a4);
  int(__stdcall *cWinPictureDialog_vtbl_func_61)(int a1, int a2, int a3);
  char(__thiscall *cWinMemView_vtbl_func_62)(_DWORD *this, int a2, int a3,
                                             int a4);
  char(__thiscall *cGZWin_vtbl_func_63)(_DWORD *this, int a2, int a3, int a4);
  char(__thiscall *cWinMemView_vtbl_func_64)(_DWORD *this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_65)(_DWORD *this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_66)(_DWORD **this, int a2, int a3,
                                             int a4);
  char(__thiscall *cWinMemView_vtbl_func_67)(_DWORD **this, int a2, int a3,
                                             int a4);
  int(__thiscall *cWinMemView_vtbl_func_68)(_DWORD **this, int a2, int a3,
                                            int a4, int a5);
  int(__thiscall *cWinMemView_vtbl_func_69)(_DWORD **this, int a2, int a3,
                                            int a4, int a5);
  int(__stdcall *cWinPictureDialog_vtbl_func_70)();
  int(__thiscall *cGZWin_vtbl_func_71)(void *this, int a2, int a3, int a4);
  int(__thiscall *cWinMemView_vtbl_func_72)(_DWORD *this, int a2, int a3,
                                            int a4);
  int(__thiscall *cWinMemView_vtbl_func_73)(void *this, int a2, int a3, int a4);
  bool(__thiscall *cWinMemView_vtbl_func_74)(void *this, int a2, int a3);
  int(__stdcall *j_WinPictureDialog_00692da4)(int a1, int a2);
  int(__stdcall *cWinPictureDialog_vtbl_func_76)(int a1);
  char(__stdcall *cWinMemView_vtbl_func_77)(int a1);
  int(__stdcall *j_WinPictureDialog_00691565)();
  int(__stdcall *cWinPictureDialog_vtbl_func_79)();
  int(__thiscall *cWinMemView_vtbl_func_80)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_81)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_82)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_83)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_84)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_85)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_86)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_87)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_88)(void *this, char a2);
  int(__stdcall *cWinPictureDialog_vtbl_func_89)(int a1);
  _BYTE *(__thiscall *cWinMemView_vtbl_func_90)(_BYTE *this);
  int(__thiscall *cWinMemView_vtbl_func_91)(void *this);
  int(__thiscall *cWinMemView_vtbl_func_92)(void *this, int a2);
  char(__thiscall *cWinMemView_vtbl_func_93)(_DWORD *this, char a2);
  bool(__thiscall *GZWin_0088c42b)(cGZWin *this, char a2);
  char(__stdcall *cWinMemView_vtbl_func_95)(int a1);
  int(__thiscall *cWinMemView_vtbl_func_96)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_97)(_DWORD *this);
  int(__fastcall *GZWin_0088d9c6)(int a1, RZFileCreationType a2, int a3);
  int(__thiscall *cWinMemView_vtbl_func_99)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_100)(void *this);
  _DWORD *(__thiscall *cWinMemView_vtbl_func_101)(_DWORD *this);
  int(__thiscall *cWinMemView_vtbl_func_102)(void *this);
};

/* 595 */
struct __cppobj cWinPictureDialog : cGZWinDlg {
  stru_693540 field_e4;
  int dword_f0;
  cWinTextWrap *dword_f4;
  int dword_f8;
  int dword_fc;
  stru_68CB90 field_100;
  int dword_10c;
  stru_488910 field_110;
  _BYTE gap_114[12];
  int dword_120;
  int dword_124;
  int dword_128;
  int dword_12c;
  int dword_130;
  char byte_134;
  char byte_135;
  _BYTE gap_136[2];
  int dword_138;
  stru_488910 field_13c;
  _BYTE gap_140[12];
  float dword_14c;
  int dword_150;
};

/* 598 */
enum GamePath {
  kGameData_Folder = 0x0,
  kSprites_iff = 0x1,
  kTools_rsrc = 0x2,
  kBehavior_iff = 0x3,
  kGlobalCLUT_pal = 0x4,
  kWalls_iff = 0x5,
  kFloors_iff = 0x6,
  kUserData_Folder = 0x7,
  kGameData_Lights_Folder = 0x8,
  kUIText_Folder = 0x9,
  kNeighborhood_iff = 0xA,
  kGameData_Roofs_Folder = 0xB,
  kUIGraphics_Folder = 0xC,
  kUIGraphics_Fonts_Folder = 0xD,
  kFloors_Folder = 0xE,
  kWalls_Folder = 0xF,
  kTextures_Folder = 0x10,
  kTextures2_Folder = 0x11,
  kSkins_Folder = 0x12,
  kGameData_Objects_Folder = 0x13,
  kGameData_Global_Folder = 0x14,
  kGameData_UserObjects_Folder = 0x15,
  kDownloads_Folder = 0x16,
  kHouses_Folder = 0x17,
  kCharacters_Folder = 0x18,
  kWebPages_Folder = 0x19,
  kWebTemplates_Folder = 0x1A,
  kExport_Folder = 0x1B,
  kImport_Folder = 0x1C,
};

/* 609 */
struct /*VFT*/ ObjectFolder_vtbl {
  char *(__thiscall *ObjectFolder_vtbl_func_0)(char *this, char a2);
  __int16(__thiscall *ObjectFolder_vtbl_func_1)(char *this, __int16 a2, int a3);
};

/* 610 */
struct /*VFT*/ ChainResFile_vtbl {
  void *(__thiscall *ChainResFile_vtbl_func_0)(void *this, char a2);
  void(__stdcall __noreturn *__purecall)();
  void *(__stdcall *duplicate_1_1)();
  void *(__stdcall *duplicate_1_2)();
  int(__thiscall *ChainResFile_vtbl_func_4)(_DWORD **this);
  int(__thiscall *ChainResFile_vtbl_func_5)(_DWORD **this);
  int(__thiscall *ChainResFile_vtbl_func_6)(_DWORD **this);
  int(__thiscall *ChainResFile_vtbl_func_7)(_DWORD **this);
  char(__thiscall *ChainResFile_vtbl_func_8)(_DWORD **this);
  void *(__stdcall *duplicate_1_3)();
  char(__thiscall *ChainResFile_vtbl_func_10)(_DWORD **this);
  __int16(__thiscall *ChainResFile_vtbl_func_11)(void *this);
  int(__thiscall *ChainResFile_vtbl_func_12)(void *this, __int16 a2);
  __int16(__thiscall *ChainResFile_vtbl_func_13)(_DWORD **this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_14)(void *this, int a2, __int16 a3,
                                             int a4);
  int(__thiscall *ChainResFile_vtbl_func_15)(_DWORD *this, int a2, int a3,
                                             int a4);
  int(__thiscall *ChainResFile_vtbl_func_16)(_DWORD **this, int a2, __int16 a3,
                                             int a4);
  int(__thiscall *ChainResFile_vtbl_func_17)(_DWORD *this, int a2, __int16 a3,
                                             char a4, int a5);
  int(__thiscall *ChainResFile_vtbl_func_18)(_DWORD *this, int a2, int a3);
  int(__thiscall *ChainResFile_vtbl_func_19)(_DWORD *this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_20)(_DWORD *this, int a2, int a3);
  int(__thiscall *ChainResFile_vtbl_func_21)(_DWORD *this, int a2, int a3);
  char(__thiscall *ChainResFile_vtbl_func_22)(_DWORD *this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_23)(_DWORD **this, int a2, int a3);
  __int16(__thiscall *ChainResFile_vtbl_func_24)(_DWORD **this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_25)(_DWORD *this, int a2);
  int(__stdcall *ChainResFile_vtbl_func_26)(int a1);
  char(__thiscall *ChainResFile_vtbl_func_27)(_DWORD **this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_28)(_DWORD *this, int a2, __int16 a3);
  int(__thiscall *ChainResFile_vtbl_func_29)(void *this, int a2, int a3,
                                             __int16 a4, int a5, char a6);
  int(__thiscall *ChainResFile_vtbl_func_30)(_DWORD *this, int a2, int a3,
                                             __int16 a4, int a5, char a6,
                                             char a7);
  int(__thiscall *ChainResFile_vtbl_func_31)(_DWORD *this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_32)(_DWORD *this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_33)(_DWORD *this, int a2, __int16 a3,
                                             int a4, char a5);
  int(__thiscall *iResFile_vtbl_func_34)(void *this, void *a2, __int16 a3,
                                         __int16 a4);
  __int16(__thiscall *ChainResFile_vtbl_func_35)(_WORD *this, int a2);
};

/* 613 */
#pragma pack(push, 1)
struct struc_4FD850 {
  _DWORD dword_0;
  _BYTE gap_4[168];
  int dword_ac;
};
#pragma pack(pop)

/* 615 */
struct /*VFT*/ StdResFile_vtbl {
  void *(__thiscall *StdResFile_vtbl_func_0)(void *this, char a2);
  int(__thiscall *j_SeqResFile_004fdf7b)(_DWORD *this, int a2);
  int(__thiscall *j_SeqResFile_004fe515)(_DWORD *this, int a2);
  int(__thiscall *StdResFile_vtbl_func_3)(void *this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_4)(_DWORD **this);
  int(__thiscall *ChainResFile_vtbl_func_5)(_DWORD **this);
  int(__thiscall *j_SeqResFile_004feabe)(void *this);
  int(__thiscall *ChainResFile_vtbl_func_7)(_DWORD **this);
  char(__thiscall *ChainResFile_vtbl_func_8)(_DWORD **this);
  int(__thiscall *SeqResFile_vtbl_func_9)(void *this, int a2);
  char(__thiscall *ChainResFile_vtbl_func_10)(_DWORD **this);
  __int16(__thiscall *ChainResFile_vtbl_func_11)(void *this);
  int(__thiscall *ChainResFile_vtbl_func_12)(void *this, __int16 a2);
  __int16(__thiscall *ChainResFile_vtbl_func_13)(_DWORD **this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_14)(void *this, int a2, __int16 a3,
                                             int a4);
  int(__thiscall *ChainResFile_vtbl_func_15)(_DWORD *this, int a2, int a3,
                                             int a4);
  int(__thiscall *ChainResFile_vtbl_func_16)(_DWORD **this, int a2, __int16 a3,
                                             int a4);
  int(__thiscall *ChainResFile_vtbl_func_17)(_DWORD *this, int a2, __int16 a3,
                                             char a4, int a5);
  int(__thiscall *ChainResFile_vtbl_func_18)(_DWORD *this, int a2, int a3);
  int(__thiscall *ChainResFile_vtbl_func_19)(_DWORD *this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_20)(_DWORD *this, int a2, int a3);
  int(__thiscall *ChainResFile_vtbl_func_21)(_DWORD *this, int a2, int a3);
  char(__thiscall *ChainResFile_vtbl_func_22)(_DWORD *this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_23)(_DWORD **this, int a2, int a3);
  __int16(__thiscall *ChainResFile_vtbl_func_24)(_DWORD **this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_25)(_DWORD *this, int a2);
  int(__stdcall *ChainResFile_vtbl_func_26)(int a1);
  char(__thiscall *ChainResFile_vtbl_func_27)(_DWORD **this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_28)(_DWORD *this, int a2, __int16 a3);
  int(__thiscall *ChainResFile_vtbl_func_29)(void *this, int a2, int a3,
                                             __int16 a4, int a5, char a6);
  int(__thiscall *ChainResFile_vtbl_func_30)(_DWORD *this, int a2, int a3,
                                             __int16 a4, int a5, char a6,
                                             char a7);
  int(__thiscall *ChainResFile_vtbl_func_31)(_DWORD *this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_32)(_DWORD *this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_33)(_DWORD *this, int a2, __int16 a3,
                                             int a4, char a5);
  int(__thiscall *iResFile_vtbl_func_34)(void *this, void *a2, __int16 a3,
                                         __int16 a4);
  __int16(__thiscall *ChainResFile_vtbl_func_35)(_WORD *this, int a2);
};

/* 619 */
struct /*VFT*/ ObjResFile_vtbl {
  void *(__thiscall *ObjResFile_vtbl_func_0)(void *this, char a2);
  int(__thiscall *j_SeqResFile_004fdf7b)(_DWORD *this, int a2);
  int(__thiscall *j_SeqResFile_004fe515)(_DWORD *this, int a2);
  int(__thiscall *StdResFile_vtbl_func_3)(void *this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_4)(_DWORD **this);
  int(__thiscall *ChainResFile_vtbl_func_5)(_DWORD **this);
  int(__thiscall *j_SeqResFile_004feabe)(void *this);
  int(__thiscall *ChainResFile_vtbl_func_7)(_DWORD **this);
  char(__thiscall *ChainResFile_vtbl_func_8)(_DWORD **this);
  int(__thiscall *SeqResFile_vtbl_func_9)(void *this, int a2);
  char(__thiscall *ValidFile)(_DWORD **this);
  __int16(__thiscall *ChainResFile_vtbl_func_11)(void *this);
  int(__thiscall *ChainResFile_vtbl_func_12)(void *this, __int16 a2);
  __int16(__thiscall *ChainResFile_vtbl_func_13)(_DWORD **this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_14)(void *this, int a2, __int16 a3,
                                             int a4);
  int(__thiscall *ChainResFile_vtbl_func_15)(_DWORD *this, int a2, int a3,
                                             int a4);
  int(__thiscall *ChainResFile_vtbl_func_16)(_DWORD **this, int a2, __int16 a3,
                                             int a4);
  int(__thiscall *ChainResFile_vtbl_func_17)(_DWORD *this, int a2, __int16 a3,
                                             char a4, int a5);
  int(__thiscall *ChainResFile_vtbl_func_18)(_DWORD *this, int a2, int a3);
  int(__thiscall *ChainResFile_vtbl_func_19)(_DWORD *this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_20)(_DWORD *this, int a2, int a3);
  int(__thiscall *ChainResFile_vtbl_func_21)(_DWORD *this, int a2, int a3);
  char(__thiscall *ChainResFile_vtbl_func_22)(_DWORD *this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_23)(_DWORD **this, int a2, int a3);
  __int16(__thiscall *ChainResFile_vtbl_func_24)(_DWORD **this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_25)(_DWORD *this, int a2);
  int(__stdcall *ChainResFile_vtbl_func_26)(int a1);
  char(__thiscall *ChainResFile_vtbl_func_27)(_DWORD **this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_28)(_DWORD *this, int a2, __int16 a3);
  int(__thiscall *ChainResFile_vtbl_func_29)(void *this, int a2, int a3,
                                             __int16 a4, int a5, char a6);
  int(__thiscall *ChainResFile_vtbl_func_30)(_DWORD *this, int a2, int a3,
                                             __int16 a4, int a5, char a6,
                                             char a7);
  int(__thiscall *ChainResFile_vtbl_func_31)(_DWORD *this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_32)(_DWORD *this, int a2);
  int(__thiscall *ChainResFile_vtbl_func_33)(_DWORD *this, int a2, __int16 a3,
                                             int a4, char a5);
  int(__thiscall *iResFile_vtbl_func_34)(void *this, void *a2, __int16 a3,
                                         __int16 a4);
  __int16(__thiscall *ChainResFile_vtbl_func_35)(_WORD *this, int a2);
};

/* 621 */
struct /*VFT*/ House_vtbl {
  void *(__thiscall *House_vtbl_func_0)(void *this, char a2);
  __int16(__thiscall *House_vtbl_func_1)(_DWORD *this, __int16 a2, int a3);
};

/* 623 */
struct _EH4_SCOPETABLE_RECORD {
  int EnclosingLevel;
  void *FilterFunc;
  void *HandlerFunc;
};

/* 624 */
struct _EH4_SCOPETABLE {
  DWORD GSCookieOffset;
  DWORD GSCookieXOROffset;
  DWORD EHCookieOffset;
  DWORD EHCookieXOROffset;
  struct _EH4_SCOPETABLE_RECORD ScopeRecord[];
};

/* 625 */
enum MACRO_WM {
  WM_NULL = 0x0,
  WM_CREATE = 0x1,
  WM_DESTROY = 0x2,
  WM_MOVE = 0x3,
  WM_SIZEWAIT = 0x4,
  WM_SIZE = 0x5,
  WM_ACTIVATE = 0x6,
  WM_SETFOCUS = 0x7,
  WM_KILLFOCUS = 0x8,
  WM_SETVISIBLE = 0x9,
  WM_ENABLE = 0xA,
  WM_SETREDRAW = 0xB,
  WM_SETTEXT = 0xC,
  WM_GETTEXT = 0xD,
  WM_GETTEXTLENGTH = 0xE,
  WM_PAINT = 0xF,
  WM_CLOSE = 0x10,
  WM_QUERYENDSESSION = 0x11,
  WM_QUIT = 0x12,
  WM_QUERYOPEN = 0x13,
  WM_ERASEBKGND = 0x14,
  WM_SYSCOLORCHANGE = 0x15,
  WM_ENDSESSION = 0x16,
  WM_SYSTEMERROR = 0x17,
  WM_SHOWWINDOW = 0x18,
  WM_CTLCOLOR = 0x19,
  WM_SETTINGCHANGE = 0x1A,
  WM_WININICHANGE = 0x1A,
  WM_DEVMODECHANGE = 0x1B,
  WM_ACTIVATEAPP = 0x1C,
  WM_FONTCHANGE = 0x1D,
  WM_TIMECHANGE = 0x1E,
  WM_CANCELMODE = 0x1F,
  WM_SETCURSOR = 0x20,
  WM_MOUSEACTIVATE = 0x21,
  WM_CHILDACTIVATE = 0x22,
  WM_QUEUESYNC = 0x23,
  WM_GETMINMAXINFO = 0x24,
  WM_LOGOFF = 0x25,
  WM_PAINTICON = 0x26,
  WM_ICONERASEBKGND = 0x27,
  WM_NEXTDLGCTL = 0x28,
  WM_ALTTABACTIVE = 0x29,
  WM_SPOOLERSTATUS = 0x2A,
  WM_DRAWITEM = 0x2B,
  WM_MEASUREITEM = 0x2C,
  WM_DELETEITEM = 0x2D,
  WM_VKEYTOITEM = 0x2E,
  WM_CHARTOITEM = 0x2F,
  WM_SETFONT = 0x30,
  WM_GETFONT = 0x31,
  WM_SETHOTKEY = 0x32,
  WM_GETHOTKEY = 0x33,
  WM_FILESYSCHANGE = 0x34,
  WM_ISACTIVEICON = 0x35,
  WM_QUERYPARKICON = 0x36,
  WM_QUERYDRAGICON = 0x37,
  WM_WINHELP = 0x38,
  WM_COMPAREITEM = 0x39,
  WM_FULLSCREEN = 0x3A,
  WM_CLIENTSHUTDOWN = 0x3B,
  WM_DDEMLEVENT = 0x3C,
  WM_GETOBJECT = 0x3D,
  MM_CALCSCROLL = 0x3F,
  WM_TESTING = 0x40,
  WM_COMPACTING = 0x41,
  WM_OTHERWINDOWCREATED = 0x42,
  WM_OTHERWINDOWDESTROYED = 0x43,
  WM_COMMNOTIFY = 0x44,
  WM_MEDIASTATUSCHANGE = 0x45,
  WM_WINDOWPOSCHANGING = 0x46,
  WM_WINDOWPOSCHANGED = 0x47,
  WM_POWER = 0x48,
  WM_COPYGLOBALDATA = 0x49,
  WM_COPYDATA = 0x4A,
  WM_CANCELJOURNAL = 0x4B,
  WM_LOGONNOTIFY = 0x4C,
  WM_KEYF1 = 0x4D,
  WM_NOTIFY = 0x4E,
  WM_ACCESS_WINDOW = 0x4F,
  WM_INPUTLANGCHANGEREQUEST = 0x50,
  WM_INPUTLANGCHANGE = 0x51,
  WM_TCARD = 0x52,
  WM_HELP = 0x53,
  WM_USERCHANGED = 0x54,
  WM_NOTIFYFORMAT = 0x55,
  WM_QM_ACTIVATE = 0x60,
  WM_HOOK_DO_CALLBACK = 0x61,
  WM_SYSCOPYDATA = 0x62,
  WM_FINALDESTROY = 0x70,
  WM_MEASUREITEM_CLIENTDATA = 0x71,
  WM_CONTEXTMENU = 0x7B,
  WM_STYLECHANGING = 0x7C,
  WM_STYLECHANGED = 0x7D,
  WM_DISPLAYCHANGE = 0x7E,
  WM_GETICON = 0x7F,
  WM_SETICON = 0x80,
  WM_NCCREATE = 0x81,
  WM_NCDESTROY = 0x82,
  WM_NCCALCSIZE = 0x83,
  WM_NCHITTEST = 0x84,
  WM_NCPAINT = 0x85,
  WM_NCACTIVATE = 0x86,
  WM_GETDLGCODE = 0x87,
  WM_SYNCPAINT = 0x88,
  WM_SYNCTASK = 0x89,
  WM_NCMOUSEMOVE = 0xA0,
  WM_NCLBUTTONDOWN = 0xA1,
  WM_NCLBUTTONUP = 0xA2,
  WM_NCLBUTTONDBLCLK = 0xA3,
  WM_NCRBUTTONDOWN = 0xA4,
  WM_NCRBUTTONUP = 0xA5,
  WM_NCRBUTTONDBLCLK = 0xA6,
  WM_NCMBUTTONDOWN = 0xA7,
  WM_NCMBUTTONUP = 0xA8,
  WM_NCMBUTTONDBLCLK = 0xA9,
  WM_NCXBUTTONDOWN = 0xAB,
  WM_NCXBUTTONUP = 0xAC,
  WM_NCXBUTTONDBLCLK = 0xAD,
  EM_GETSEL = 0xB0,
  EM_SETSEL = 0xB1,
  EM_GETRECT = 0xB2,
  EM_SETRECT = 0xB3,
  EM_SETRECTNP = 0xB4,
  EM_SCROLL = 0xB5,
  EM_LINESCROLL = 0xB6,
  EM_SCROLLCARET = 0xB7,
  EM_GETMODIFY = 0xB8,
  EM_SETMODIFY = 0xB9,
  EM_GETLINECOUNT = 0xBA,
  EM_LINEINDEX = 0xBB,
  EM_SETHANDLE = 0xBC,
  EM_GETHANDLE = 0xBD,
  EM_GETTHUMB = 0xBE,
  EM_LINELENGTH = 0xC1,
  EM_REPLACESEL = 0xC2,
  EM_SETFONT = 0xC3,
  EM_GETLINE = 0xC4,
  EM_LIMITTEXT = 0xC5,
  EM_SETLIMITTEXT = 0xC5,
  EM_CANUNDO = 0xC6,
  EM_UNDO = 0xC7,
  EM_FMTLINES = 0xC8,
  EM_LINEFROMCHAR = 0xC9,
  EM_SETWORDBREAK = 0xCA,
  EM_SETTABSTOPS = 0xCB,
  EM_SETPASSWORDCHAR = 0xCC,
  EM_EMPTYUNDOBUFFER = 0xCD,
  EM_GETFIRSTVISIBLELINE = 0xCE,
  EM_SETREADONLY = 0xCF,
  EM_SETWORDBREAKPROC = 0xD0,
  EM_GETWORDBREAKPROC = 0xD1,
  EM_GETPASSWORDCHAR = 0xD2,
  EM_SETMARGINS = 0xD3,
  EM_GETMARGINS = 0xD4,
  EM_GETLIMITTEXT = 0xD5,
  EM_POSFROMCHAR = 0xD6,
  EM_CHARFROMPOS = 0xD7,
  EM_SETIMESTATUS = 0xD8,
  EM_GETIMESTATUS = 0xD9,
  SBM_SETPOS = 0xE0,
  SBM_GETPOS = 0xE1,
  SBM_SETRANGE = 0xE2,
  SBM_GETRANGE = 0xE3,
  SBM_ENABLE_ARROWS = 0xE4,
  SBM_SETRANGEREDRAW = 0xE6,
  SBM_SETSCROLLINFO = 0xE9,
  SBM_GETSCROLLINFO = 0xEA,
  SBM_GETSCROLLBARINFO = 0xEB,
  BM_GETCHECK = 0xF0,
  BM_SETCHECK = 0xF1,
  BM_GETSTATE = 0xF2,
  BM_SETSTATE = 0xF3,
  BM_SETSTYLE = 0xF4,
  BM_CLICK = 0xF5,
  BM_GETIMAGE = 0xF6,
  BM_SETIMAGE = 0xF7,
  BM_SETDONTCLICK = 0xF8,
  WM_INPUT = 0xFF,
  WM_KEYDOWN = 0x100,
  WM_KEYFIRST = 0x100,
  WM_KEYUP = 0x101,
  WM_CHAR = 0x102,
  WM_DEADCHAR = 0x103,
  WM_SYSKEYDOWN = 0x104,
  WM_SYSKEYUP = 0x105,
  WM_SYSCHAR = 0x106,
  WM_SYSDEADCHAR = 0x107,
  WM_KEYLAST = 0x109,
  WM_YOMICHAR = 0x108,
  WM_UNICHAR = 0x109,
  WM_WNT_CONVERTREQUESTEX = 0x109,
  WM_CONVERTREQUEST = 0x10A,
  WM_CONVERTRESULT = 0x10B,
  WM_INTERIM = 0x10C,
  WM_IM_INFO = 0x10C,
  WM_IME_STARTCOMPOSITION = 0x10D,
  WM_IME_ENDCOMPOSITION = 0x10E,
  WM_IME_COMPOSITION = 0x10F,
  WM_IME_KEYLAST = 0x10F,
  WM_INITDIALOG = 0x110,
  WM_COMMAND = 0x111,
  WM_SYSCOMMAND = 0x112,
  WM_TIMER = 0x113,
  WM_HSCROLL = 0x114,
  WM_VSCROLL = 0x115,
  WM_INITMENU = 0x116,
  WM_INITMENUPOPUP = 0x117,
  WM_SYSTIMER = 0x118,
  WM_MENUSELECT = 0x11F,
  WM_MENUCHAR = 0x120,
  WM_ENTERIDLE = 0x121,
  WM_MENURBUTTONUP = 0x122,
  WM_MENUDRAG = 0x123,
  WM_MENUGETOBJECT = 0x124,
  WM_UNINITMENUPOPUP = 0x125,
  WM_MENUCOMMAND = 0x126,
  WM_CHANGEUISTATE = 0x127,
  WM_UPDATEUISTATE = 0x128,
  WM_QUERYUISTATE = 0x129,
  WM_LBTRACKPOINT = 0x131,
  WM_CTLCOLORMSGBOX = 0x132,
  WM_CTLCOLOREDIT = 0x133,
  WM_CTLCOLORLISTBOX = 0x134,
  WM_CTLCOLORBTN = 0x135,
  WM_CTLCOLORDLG = 0x136,
  WM_CTLCOLORSCROLLBAR = 0x137,
  WM_CTLCOLORSTATIC = 0x138,
  CB_GETEDITSEL = 0x140,
  CB_LIMITTEXT = 0x141,
  CB_SETEDITSEL = 0x142,
  CB_ADDSTRING = 0x143,
  CB_DELETESTRING = 0x144,
  CB_DIR = 0x145,
  CB_GETCOUNT = 0x146,
  CB_GETCURSEL = 0x147,
  CB_GETLBTEXT = 0x148,
  CB_GETLBTEXTLEN = 0x149,
  CB_INSERTSTRING = 0x14A,
  CB_RESETCONTENT = 0x14B,
  CB_FINDSTRING = 0x14C,
  CB_SELECTSTRING = 0x14D,
  CB_SETCURSEL = 0x14E,
  CB_SHOWDROPDOWN = 0x14F,
  CB_GETITEMDATA = 0x150,
  CB_SETITEMDATA = 0x151,
  CB_GETDROPPEDCONTROLRECT = 0x152,
  CB_SETITEMHEIGHT = 0x153,
  CB_GETITEMHEIGHT = 0x154,
  CB_SETEXTENDEDUI = 0x155,
  CB_GETEXTENDEDUI = 0x156,
  CB_GETDROPPEDSTATE = 0x157,
  CB_FINDSTRINGEXACT = 0x158,
  CB_SETLOCALE = 0x159,
  CB_GETLOCALE = 0x15A,
  CB_GETTOPINDEX = 0x15B,
  CB_SETTOPINDEX = 0x15C,
  CB_GETHORIZONTALEXTENT = 0x15D,
  CB_SETHORIZONTALEXTENT = 0x15E,
  CB_GETDROPPEDWIDTH = 0x15F,
  CB_SETDROPPEDWIDTH = 0x160,
  CB_INITSTORAGE = 0x161,
  CB_MULTIPLEADDSTRING = 0x163,
  CB_GETCOMBOBOXINFO = 0x164,
  CB_SETMINVISIBLE = 0x1701,
  CB_GETMINVISIBLE = 0x1702,
  CB_SETCUEBANNER = 0x1703,
  CB_GETCUEBANNER = 0x1704,
  STM_SETICON = 0x170,
  STM_GETICON = 0x171,
  STM_SETIMAGE = 0x172,
  STM_GETIMAGE = 0x173,
  LB_ADDSTRING = 0x180,
  LB_INSERTSTRING = 0x181,
  LB_DELETESTRING = 0x182,
  LB_SELITEMRANGEEX = 0x183,
  LB_RESETCONTENT = 0x184,
  LB_SETSEL = 0x185,
  LB_SETCURSEL = 0x186,
  LB_GETSEL = 0x187,
  LB_GETCURSEL = 0x188,
  LB_GETTEXT = 0x189,
  LB_GETTEXTLEN = 0x18A,
  LB_GETCOUNT = 0x18B,
  LB_SELECTSTRING = 0x18C,
  LB_DIR = 0x18D,
  LB_GETTOPINDEX = 0x18E,
  LB_FINDSTRING = 0x18F,
  LB_GETSELCOUNT = 0x190,
  LB_GETSELITEMS = 0x191,
  LB_SETTABSTOPS = 0x192,
  LB_GETHORIZONTALEXTENT = 0x193,
  LB_SETHORIZONTALEXTENT = 0x194,
  LB_SETCOLUMNWIDTH = 0x195,
  LB_ADDFILE = 0x196,
  LB_SETTOPINDEX = 0x197,
  LB_GETITEMRECT = 0x198,
  LB_GETITEMDATA = 0x199,
  LB_SETITEMDATA = 0x19A,
  LB_SELITEMRANGE = 0x19B,
  LB_SETANCHORINDEX = 0x19C,
  LB_GETANCHORINDEX = 0x19D,
  LB_SETCARETINDEX = 0x19E,
  LB_GETCARETINDEX = 0x19F,
  LB_SETITEMHEIGHT = 0x1A0,
  LB_GETITEMHEIGHT = 0x1A1,
  LB_FINDSTRINGEXACT = 0x1A2,
  LBCB_CARETON = 0x1A3,
  LBCB_CARETOFF = 0x1A4,
  LB_SETLOCALE = 0x1A5,
  LB_GETLOCALE = 0x1A6,
  LB_SETCOUNT = 0x1A7,
  LB_INITSTORAGE = 0x1A8,
  LB_ITEMFROMPOINT = 0x1A9,
  LB_INSERTSTRINGUPPER = 0x1AA,
  LB_INSERTSTRINGLOWER = 0x1AB,
  LB_ADDSTRINGUPPER = 0x1AC,
  LB_ADDSTRINGLOWER = 0x1AD,
  LB_MULTIPLEADDSTRING = 0x1B1,
  LB_GETLISTBOXINFO = 0x1B2,
  MN_SETHMENU = 0x1E0,
  MN_GETHMENU = 0x1E1,
  MN_SIZEWINDOW = 0x1E2,
  MN_OPENHIERARCHY = 0x1E3,
  MN_CLOSEHIERARCHY = 0x1E4,
  MN_SELECTITEM = 0x1E5,
  MN_CANCELMENUS = 0x1E6,
  MN_SELECTFIRSTVALIDITEM = 0x1E7,
  MN_GETPPOPUPMENU = 0x1EA,
  MN_FINDMENUWINDOWFROMPOINT = 0x1EB,
  MN_SHOWPOPUPWINDOW = 0x1EC,
  MN_BUTTONDOWN = 0x1ED,
  MN_MOUSEMOVE = 0x1EE,
  MN_BUTTONUP = 0x1EF,
  MN_SETTIMERTOOPENHIERARCHY = 0x1F0,
  MN_DBLCLK = 0x1F1,
  WM_MOUSEFIRST = 0x200,
  WM_MOUSEMOVE = 0x200,
  WM_LBUTTONDOWN = 0x201,
  WM_LBUTTONUP = 0x202,
  WM_LBUTTONDBLCLK = 0x203,
  WM_RBUTTONDOWN = 0x204,
  WM_RBUTTONUP = 0x205,
  WM_RBUTTONDBLCLK = 0x206,
  WM_MBUTTONDOWN = 0x207,
  WM_MBUTTONUP = 0x208,
  WM_MBUTTONDBLCLK = 0x209,
  WM_MOUSELAST = 0x20E,
  WM_MOUSEWHEEL = 0x20A,
  WM_XBUTTONDOWN = 0x20B,
  WM_XBUTTONUP = 0x20C,
  WM_XBUTTONDBLCLK = 0x20D,
  WM_PARENTNOTIFY = 0x210,
  WM_ENTERMENULOOP = 0x211,
  WM_EXITMENULOOP = 0x212,
  WM_NEXTMENU = 0x213,
  WM_SIZING = 0x214,
  WM_CAPTURECHANGED = 0x215,
  WM_MOVING = 0x216,
  WM_POWERBROADCAST = 0x218,
  WM_DEVICECHANGE = 0x219,
  WM_MDICREATE = 0x220,
  WM_MDIDESTROY = 0x221,
  WM_MDIACTIVATE = 0x222,
  WM_MDIRESTORE = 0x223,
  WM_MDINEXT = 0x224,
  WM_MDIMAXIMIZE = 0x225,
  WM_MDITILE = 0x226,
  WM_MDICASCADE = 0x227,
  WM_MDIICONARRANGE = 0x228,
  WM_MDIGETACTIVE = 0x229,
  WM_DROPOBJECT = 0x22A,
  WM_QUERYDROPOBJECT = 0x22B,
  WM_BEGINDRAG = 0x22C,
  WM_DRAGLOOP = 0x22D,
  WM_DRAGSELECT = 0x22E,
  WM_DRAGMOVE = 0x22F,
  WM_MDISETMENU = 0x230,
  WM_ENTERSIZEMOVE = 0x231,
  WM_EXITSIZEMOVE = 0x232,
  WM_DROPFILES = 0x233,
  WM_MDIREFRESHMENU = 0x234,
  WM_IME_REPORT = 0x280,
  WM_HANGEULFIRST = 0x280,
  WM_KANJIFIRST = 0x280,
  WM_IME_SETCONTEXT = 0x281,
  WM_IME_NOTIFY = 0x282,
  WM_IME_CONTROL = 0x283,
  WM_IME_COMPOSITIONFULL = 0x284,
  WM_IME_SELECT = 0x285,
  WM_IME_CHAR = 0x286,
  WM_IME_SYSTEM = 0x287,
  WM_IME_REQUEST = 0x288,
  WM_IMEKEYDOWN = 0x290,
  WM_IME_KEYDOWN = 0x290,
  WM_IMEKEYUP = 0x291,
  WM_IME_KEYUP = 0x291,
  WM_HANGEULLAST = 0x29F,
  WM_KANJILAST = 0x29F,
  WM_NCMOUSEHOVER = 0x2A0,
  WM_MOUSEHOVER = 0x2A1,
  WM_NCMOUSELEAVE = 0x2A2,
  WM_MOUSELEAVE = 0x2A3,
  WM_TRACKMOUSEEVENT_LAST = 0x2AF,
  WM_WTSSESSION_CHANGE = 0x2B1,
  WM_TABLET_FIRST = 0x2C0,
  WM_TABLET_LAST = 0x2DF,
  WM_CUT = 0x300,
  WM_COPY = 0x301,
  WM_PASTE = 0x302,
  WM_CLEAR = 0x303,
  WM_UNDO = 0x304,
  WM_RENDERFORMAT = 0x305,
  WM_RENDERALLFORMATS = 0x306,
  WM_DESTROYCLIPBOARD = 0x307,
  WM_DRAWCLIPBOARD = 0x308,
  WM_PAINTCLIPBOARD = 0x309,
  WM_VSCROLLCLIPBOARD = 0x30A,
  WM_SIZECLIPBOARD = 0x30B,
  WM_ASKCBFORMATNAME = 0x30C,
  WM_CHANGECBCHAIN = 0x30D,
  WM_HSCROLLCLIPBOARD = 0x30E,
  WM_QUERYNEWPALETTE = 0x30F,
  WM_PALETTEISCHANGING = 0x310,
  WM_PALETTECHANGED = 0x311,
  WM_HOTKEY = 0x312,
  WM_SYSMENU = 0x313,
  WM_HOOKMSG = 0x314,
  WM_EXITPROCESS = 0x315,
  WM_WAKETHREAD = 0x316,
  WM_PRINT = 0x317,
  WM_PRINTCLIENT = 0x318,
  WM_APPCOMMAND = 0x319,
  WM_THEMECHANGED = 0x31A,
  WM_HANDHELDFIRST = 0x358,
  WM_HANDHELDLAST = 0x35F,
  WM_AFXFIRST = 0x360,
  WM_AFXLAST = 0x37F,
  WM_PENWINFIRST = 0x380,
  WM_RCRESULT = 0x381,
  WM_HOOKRCRESULT = 0x382,
  WM_GLOBALRCCHANGE = 0x383,
  WM_PENMISCINFO = 0x383,
  WM_SKB = 0x384,
  WM_HEDITCTL = 0x385,
  WM_PENCTL = 0x385,
  WM_PENMISC = 0x386,
  WM_CTLINIT = 0x387,
  WM_PENEVENT = 0x388,
  WM_PENWINLAST = 0x38F,
  WM_INTERNAL_COALESCE_FIRST = 0x390,
  WM_COALESCE_FIRST = 0x390,
  WM_COALESCE_LAST = 0x39F,
  WM_MM_RESERVED_FIRST = 0x3A0,
  WM_INTERNAL_COALESCE_LAST = 0x3B0,
  WM_MM_RESERVED_LAST = 0x3DF,
  WM_DDE_INITIATE = 0x3E0,
  WM_DDE_TERMINATE = 0x3E1,
  WM_DDE_ADVISE = 0x3E2,
  WM_DDE_UNADVISE = 0x3E3,
  WM_DDE_ACK = 0x3E4,
  WM_DDE_DATA = 0x3E5,
  WM_DDE_REQUEST = 0x3E6,
  WM_DDE_POKE = 0x3E7,
  WM_DDE_EXECUTE = 0x3E8,
  WM_DBNOTIFICATION = 0x3FD,
  WM_NETCONNECT = 0x3FE,
  WM_HIBERNATE = 0x3FF,
  WM_USER = 0x400,
  DDM_SETFMT = 0x400,
  DDM_DRAW = 0x401,
  DDM_CLOSE = 0x402,
  DDM_BEGIN = 0x403,
  DDM_END = 0x404,
  DM_GETDEFID = 0x400,
  DM_SETDEFID = 0x401,
  DM_REPOSITION = 0x402,
  NIN_SELECT = 0x400,
  NIN_KEYSELECT = 0x401,
  NIN_BALLOONSHOW = 0x402,
  NIN_BALLOONHIDE = 0x403,
  NIN_BALLOONTIMEOUT = 0x404,
  NIN_BALLOONUSERCLICK = 0x405,
  NIN_POPUPOPEN = 0x406,
  NIN_POPUPCLOSE = 0x407,
  TBM_GETPOS = 0x400,
  TBM_GETRANGEMIN = 0x401,
  TBM_GETRANGEMAX = 0x402,
  TBM_GETTIC = 0x403,
  TBM_SETTIC = 0x404,
  TBM_SETPOS = 0x405,
  TBM_SETRANGE = 0x406,
  TBM_SETRANGEMIN = 0x407,
  TBM_SETRANGEMAX = 0x408,
  TBM_CLEARTICS = 0x409,
  TBM_SETSEL = 0x40A,
  TBM_SETSELSTART = 0x40B,
  TBM_SETSELEND = 0x40C,
  TBM_GETPTICS = 0x40E,
  TBM_GETTICPOS = 0x40F,
  TBM_GETNUMTICS = 0x410,
  TBM_GETSELSTART = 0x411,
  TBM_GETSELEND = 0x412,
  TBM_CLEARSEL = 0x413,
  TBM_SETTICFREQ = 0x414,
  TBM_SETPAGESIZE = 0x415,
  TBM_GETPAGESIZE = 0x416,
  TBM_SETLINESIZE = 0x417,
  TBM_GETLINESIZE = 0x418,
  TBM_GETTHUMBRECT = 0x419,
  TBM_GETCHANNELRECT = 0x41A,
  TBM_SETTHUMBLENGTH = 0x41B,
  TBM_GETTHUMBLENGTH = 0x41C,
  TBM_SETTOOLTIPS = 0x41D,
  TBM_GETTOOLTIPS = 0x41E,
  TBM_SETTIPSIDE = 0x41F,
  TBM_SETBUDDY = 0x420,
  TBM_GETBUDDY = 0x421,
  TBM_SETPOSNOTIFY = 0x422,
  WM_PSD_PAGESETUPDLG = 0x400,
  WM_PSD_FULLPAGERECT = 0x401,
  WM_PSD_MINMARGINRECT = 0x402,
  WM_PSD_MARGINRECT = 0x403,
  WM_PSD_GREEKTEXTRECT = 0x404,
  WM_PSD_ENVSTAMPRECT = 0x405,
  WM_PSD_YAFULLPAGERECT = 0x406,
  WM_CHOOSEFONT_GETLOGFONT = 0x401,
  WM_CHOOSEFONT_SETLOGFONT = 0x465,
  WM_CHOOSEFONT_SETFLAGS = 0x466,
  HKM_SETHOTKEY = 0x401,
  HKM_GETHOTKEY = 0x402,
  HKM_SETRULES = 0x403,
  PBM_SETRANGE = 0x401,
  PBM_SETPOS = 0x402,
  PBM_DELTAPOS = 0x403,
  PBM_SETSTEP = 0x404,
  PBM_STEPIT = 0x405,
  PBM_SETRANGE32 = 0x406,
  PBM_GETRANGE = 0x407,
  PBM_GETPOS = 0x408,
  PBM_SETBARCOLOR = 0x409,
  PBM_SETMARQUEE = 0x40A,
  PBM_GETSTEP = 0x40D,
  PBM_GETBKCOLOR = 0x40E,
  PBM_GETBARCOLOR = 0x40F,
  PBM_SETSTATE = 0x410,
  PBM_GETSTATE = 0x411,
  RB_INSERTBANDA = 0x401,
  RB_DELETEBAND = 0x402,
  RB_GETBARINFO = 0x403,
  RB_SETBARINFO = 0x404,
  RB_SETBANDINFOA = 0x406,
  RB_SETPARENT = 0x407,
  RB_HITTEST = 0x408,
  RB_GETRECT = 0x409,
  RB_INSERTBANDW = 0x40A,
  RB_SETBANDINFOW = 0x40B,
  RB_GETBANDCOUNT = 0x40C,
  RB_GETROWCOUNT = 0x40D,
  RB_GETROWHEIGHT = 0x40E,
  RB_IDTOINDEX = 0x410,
  RB_GETTOOLTIPS = 0x411,
  RB_SETTOOLTIPS = 0x412,
  RB_SETBKCOLOR = 0x413,
  RB_GETBKCOLOR = 0x414,
  RB_SETTEXTCOLOR = 0x415,
  RB_GETTEXTCOLOR = 0x416,
  RB_SIZETORECT = 0x417,
  RB_BEGINDRAG = 0x418,
  RB_ENDDRAG = 0x419,
  RB_DRAGMOVE = 0x41A,
  RB_GETBARHEIGHT = 0x41B,
  RB_GETBANDINFOW = 0x41C,
  RB_GETBANDINFOA = 0x41D,
  RB_MINIMIZEBAND = 0x41E,
  RB_MAXIMIZEBAND = 0x41F,
  RB_GETBANDBORDERS = 0x422,
  RB_SHOWBAND = 0x423,
  RB_SETPALETTE = 0x425,
  RB_GETPALETTE = 0x426,
  RB_MOVEBAND = 0x427,
  RB_PUSHCHEVRON = 0x42B,
  RB_GETBANDMARGINS = 0x428,
  RB_SETEXTENDEDSTYLE = 0x429,
  RB_GETEXTENDEDSTYLE = 0x42A,
  RB_SETBANDWIDTH = 0x42C,
  RB_SETWINDOWTHEME = 0x200B,
  CBEM_INSERTITEMA = 0x401,
  CBEM_SETIMAGELIST = 0x402,
  CBEM_GETIMAGELIST = 0x403,
  CBEM_GETITEMA = 0x404,
  CBEM_SETITEMA = 0x405,
  CBEM_GETCOMBOCONTROL = 0x406,
  CBEM_GETEDITCONTROL = 0x407,
  CBEM_SETEXSTYLE = 0x408,
  CBEM_GETEXSTYLE = 0x409,
  CBEM_GETEXTENDEDSTYLE = 0x409,
  CBEM_HASEDITCHANGED = 0x40A,
  CBEM_INSERTITEMW = 0x40B,
  CBEM_SETITEMW = 0x40C,
  CBEM_GETITEMW = 0x40D,
  CBEM_SETEXTENDEDSTYLE = 0x40E,
  SB_SETTEXTA = 0x401,
  SB_GETTEXTA = 0x402,
  SB_GETTEXTLENGTHA = 0x403,
  SB_SETPARTS = 0x404,
  SB_GETPARTS = 0x406,
  SB_GETBORDERS = 0x407,
  SB_SETMINHEIGHT = 0x408,
  SB_SIMPLE = 0x409,
  SB_GETRECT = 0x40A,
  SB_SETTEXTW = 0x40B,
  SB_GETTEXTLENGTHW = 0x40C,
  SB_GETTEXTW = 0x40D,
  SB_ISSIMPLE = 0x40E,
  SB_SETICON = 0x40F,
  SB_SETTIPTEXTA = 0x410,
  SB_SETTIPTEXTW = 0x411,
  SB_GETTIPTEXTA = 0x412,
  SB_GETTIPTEXTW = 0x413,
  SB_GETICON = 0x414,
  TTM_ACTIVATE = 0x401,
  TTM_SETDELAYTIME = 0x403,
  TTM_ADDTOOLA = 0x404,
  TTM_DELTOOLA = 0x405,
  TTM_NEWTOOLRECTA = 0x406,
  TTM_RELAYEVENT = 0x407,
  TTM_GETTOOLINFOA = 0x408,
  TTM_SETTOOLINFOA = 0x409,
  TTM_HITTESTA = 0x40A,
  TTM_GETTEXTA = 0x40B,
  TTM_UPDATETIPTEXTA = 0x40C,
  TTM_GETTOOLCOUNT = 0x40D,
  TTM_ENUMTOOLSA = 0x40E,
  TTM_GETCURRENTTOOLA = 0x40F,
  TTM_WINDOWFROMPOINT = 0x410,
  TTM_TRACKACTIVATE = 0x411,
  TTM_TRACKPOSITION = 0x412,
  TTM_SETTIPBKCOLOR = 0x413,
  TTM_SETTIPTEXTCOLOR = 0x414,
  TTM_GETDELAYTIME = 0x415,
  TTM_GETTIPBKCOLOR = 0x416,
  TTM_GETTIPTEXTCOLOR = 0x417,
  TTM_SETMAXTIPWIDTH = 0x418,
  TTM_GETMAXTIPWIDTH = 0x419,
  TTM_SETMARGIN = 0x41A,
  TTM_GETMARGIN = 0x41B,
  TTM_POP = 0x41C,
  TTM_UPDATE = 0x41D,
  TTM_GETBUBBLESIZE = 0x41E,
  TTM_ADJUSTRECT = 0x41F,
  TTM_SETTITLEA = 0x420,
  TTM_SETTITLEW = 0x421,
  TTM_ADDTOOLW = 0x432,
  TTM_DELTOOLW = 0x433,
  TTM_NEWTOOLRECTW = 0x434,
  TTM_GETTOOLINFOW = 0x435,
  TTM_SETTOOLINFOW = 0x436,
  TTM_HITTESTW = 0x437,
  TTM_GETTEXTW = 0x438,
  TTM_UPDATETIPTEXTW = 0x439,
  TTM_ENUMTOOLSW = 0x43A,
  TTM_GETCURRENTTOOLW = 0x43B,
  WIZ_QUERYNUMPAGES = 0x40A,
  WIZ_NEXT = 0x40B,
  WIZ_PREV = 0x40C,
  MSG_FTS_JUMP_VA = 0x421,
  MSG_FTS_JUMP_QWORD = 0x423,
  MSG_REINDEX_REQUEST = 0x424,
  MSG_FTS_WHERE_IS_IT = 0x425,
  MSG_GET_DEFFONT = 0x42D,
  TB_ENABLEBUTTON = 0x401,
  TB_CHECKBUTTON = 0x402,
  TB_PRESSBUTTON = 0x403,
  TB_HIDEBUTTON = 0x404,
  TB_INDETERMINATE = 0x405,
  TB_MARKBUTTON = 0x406,
  TB_ISBUTTONENABLED = 0x409,
  TB_ISBUTTONCHECKED = 0x40A,
  TB_ISBUTTONPRESSED = 0x40B,
  TB_ISBUTTONHIDDEN = 0x40C,
  TB_ISBUTTONINDETERMINATE = 0x40D,
  TB_ISBUTTONHIGHLIGHTED = 0x40E,
  TB_SETSTATE = 0x411,
  TB_GETSTATE = 0x412,
  TB_ADDBITMAP = 0x413,
  TB_ADDBUTTONSA = 0x414,
  TB_INSERTBUTTONA = 0x415,
  TB_DELETEBUTTON = 0x416,
  TB_GETBUTTON = 0x417,
  TB_BUTTONCOUNT = 0x418,
  TB_COMMANDTOINDEX = 0x419,
  TB_SAVERESTOREA = 0x41A,
  TB_CUSTOMIZE = 0x41B,
  TB_ADDSTRINGA = 0x41C,
  TB_GETITEMRECT = 0x41D,
  TB_BUTTONSTRUCTSIZE = 0x41E,
  TB_SETBUTTONSIZE = 0x41F,
  TB_SETBITMAPSIZE = 0x420,
  TB_AUTOSIZE = 0x421,
  TB_GETTOOLTIPS = 0x423,
  TB_SETTOOLTIPS = 0x424,
  TB_SETPARENT = 0x425,
  TB_SETROWS = 0x427,
  TB_GETROWS = 0x428,
  TB_GETBITMAPFLAGS = 0x429,
  TB_SETCMDID = 0x42A,
  TB_CHANGEBITMAP = 0x42B,
  TB_GETBITMAP = 0x42C,
  TB_GETBUTTONTEXTA = 0x42D,
  TB_REPLACEBITMAP = 0x42E,
  TB_SETINDENT = 0x42F,
  TB_SETIMAGELIST = 0x430,
  TB_GETIMAGELIST = 0x431,
  TB_LOADIMAGES = 0x432,
  TB_GETRECT = 0x433,
  TB_SETHOTIMAGELIST = 0x434,
  TB_GETHOTIMAGELIST = 0x435,
  TB_SETDISABLEDIMAGELIST = 0x436,
  TB_GETDISABLEDIMAGELIST = 0x437,
  TB_SETSTYLE = 0x438,
  TB_GETSTYLE = 0x439,
  TB_GETBUTTONSIZE = 0x43A,
  TB_SETBUTTONWIDTH = 0x43B,
  TB_SETMAXTEXTROWS = 0x43C,
  TB_GETTEXTROWS = 0x43D,
  TB_GETOBJECT = 0x43E,
  TB_GETBUTTONINFOW = 0x43F,
  TB_SETBUTTONINFOW = 0x440,
  TB_GETBUTTONINFOA = 0x441,
  TB_SETBUTTONINFOA = 0x442,
  TB_INSERTBUTTONW = 0x443,
  TB_ADDBUTTONSW = 0x444,
  TB_HITTEST = 0x445,
  TB_SETDRAWTEXTFLAGS = 0x446,
  TB_GETHOTITEM = 0x447,
  TB_SETHOTITEM = 0x448,
  TB_SETANCHORHIGHLIGHT = 0x449,
  TB_GETANCHORHIGHLIGHT = 0x44A,
  TB_GETBUTTONTEXTW = 0x44B,
  TB_SAVERESTOREW = 0x44C,
  TB_ADDSTRINGW = 0x44D,
  TB_MAPACCELERATORA = 0x44E,
  TB_GETINSERTMARK = 0x44F,
  TB_SETINSERTMARK = 0x450,
  TB_INSERTMARKHITTEST = 0x451,
  TB_MOVEBUTTON = 0x452,
  TB_GETMAXSIZE = 0x453,
  TB_SETEXTENDEDSTYLE = 0x454,
  TB_GETEXTENDEDSTYLE = 0x455,
  TB_GETPADDING = 0x456,
  TB_SETPADDING = 0x457,
  TB_SETINSERTMARKCOLOR = 0x458,
  TB_GETINSERTMARKCOLOR = 0x459,
  TB_MAPACCELERATORW = 0x45A,
  TB_GETSTRINGW = 0x45B,
  TB_GETSTRINGA = 0x45C,
  TB_SETBOUNDINGSIZE = 0x45D,
  TB_SETHOTITEM2 = 0x45E,
  TB_HASACCELERATOR = 0x45F,
  TB_SETLISTGAP = 0x460,
  TB_GETIMAGELISTCOUNT = 0x462,
  TB_GETIDEALSIZE = 0x463,
  TB_GETMETRICS = 0x465,
  TB_SETMETRICS = 0x466,
  TB_GETITEMDROPDOWNRECT = 0x467,
  TB_SETPRESSEDIMAGELIST = 0x468,
  TB_GETPRESSEDIMAGELIST = 0x469,
  TB_SETWINDOWTHEME = 0x200B,
  EM_CANPASTE = 0x432,
  EM_DISPLAYBAND = 0x433,
  EM_EXGETSEL = 0x434,
  EM_EXLIMITTEXT = 0x435,
  EM_EXLINEFROMCHAR = 0x436,
  EM_EXSETSEL = 0x437,
  EM_FINDTEXT = 0x438,
  EM_FORMATRANGE = 0x439,
  EM_GETCHARFORMAT = 0x43A,
  EM_GETEVENTMASK = 0x43B,
  EM_GETOLEINTERFACE = 0x43C,
  EM_GETPARAFORMAT = 0x43D,
  EM_GETSELTEXT = 0x43E,
  EM_HIDESELECTION = 0x43F,
  EM_PASTESPECIAL = 0x440,
  EM_REQUESTRESIZE = 0x441,
  EM_SELECTIONTYPE = 0x442,
  EM_SETBKGNDCOLOR = 0x443,
  EM_SETCHARFORMAT = 0x444,
  EM_SETEVENTMASK = 0x445,
  EM_SETOLECALLBACK = 0x446,
  EM_SETPARAFORMAT = 0x447,
  EM_SETTARGETDEVICE = 0x448,
  EM_STREAMIN = 0x449,
  EM_STREAMOUT = 0x44A,
  EM_GETTEXTRANGE = 0x44B,
  EM_FINDWORDBREAK = 0x44C,
  EM_SETOPTIONS = 0x44D,
  EM_GETOPTIONS = 0x44E,
  EM_FINDTEXTEX = 0x44F,
  EM_GETWORDBREAKPROCEX = 0x450,
  EM_SETWORDBREAKPROCEX = 0x451,
  EM_SETUNDOLIMIT = 0x452,
  EM_REDO = 0x454,
  EM_CANREDO = 0x455,
  EM_GETUNDONAME = 0x456,
  EM_GETREDONAME = 0x457,
  EM_STOPGROUPTYPING = 0x458,
  EM_SETTEXTMODE = 0x459,
  EM_GETTEXTMODE = 0x45A,
  EM_AUTOURLDETECT = 0x45B,
  EM_GETAUTOURLDETECT = 0x45C,
  EM_SETPALETTE = 0x45D,
  EM_GETTEXTEX = 0x45E,
  EM_GETTEXTLENGTHEX = 0x45F,
  EM_SHOWSCROLLBAR = 0x460,
  EM_SETTEXTEX = 0x461,
  EM_SETPUNCTUATION = 0x464,
  EM_GETPUNCTUATION = 0x465,
  EM_SETWORDWRAPMODE = 0x466,
  EM_GETWORDWRAPMODE = 0x467,
  EM_SETIMECOLOR = 0x468,
  EM_GETIMECOLOR = 0x469,
  EM_SETIMEOPTIONS = 0x46A,
  EM_GETIMEOPTIONS = 0x46B,
  EM_CONVPOSITION = 0x46C,
  EM_SETLANGOPTIONS = 0x478,
  EM_GETLANGOPTIONS = 0x479,
  EM_GETIMECOMPMODE = 0x47A,
  EM_FINDTEXTW = 0x47B,
  EM_FINDTEXTEXW = 0x47C,
  EM_RECONVERSION = 0x47D,
  EM_SETIMEMODEBIAS = 0x47E,
  EM_GETIMEMODEBIAS = 0x47F,
  EM_SETBIDIOPTIONS = 0x4C8,
  EM_GETBIDIOPTIONS = 0x4C9,
  EM_SETTYPOGRAPHYOPTIONS = 0x4CA,
  EM_GETTYPOGRAPHYOPTIONS = 0x4CB,
  EM_SETEDITSTYLE = 0x4CC,
  EM_GETEDITSTYLE = 0x4CD,
  EM_OUTLINE = 0x4DC,
  EM_GETSCROLLPOS = 0x4DD,
  EM_SETSCROLLPOS = 0x4DE,
  EM_SETFONTSIZE = 0x4DF,
  EM_GETZOOM = 0x4E0,
  EM_SETZOOM = 0x4E1,
  EM_GETVIEWKIND = 0x4E2,
  EM_SETVIEWKIND = 0x4E3,
  EM_GETPAGE = 0x4E4,
  EM_SETPAGE = 0x4E5,
  EM_GETHYPHENATEINFO = 0x4E6,
  EM_SETHYPHENATEINFO = 0x4E7,
  EM_INSERTTABLE = 0x4E8,
  EM_GETAUTOCORRECTPROC = 0x4E9,
  EM_SETAUTOCORRECTPROC = 0x4EA,
  EM_GETPAGEROTATE = 0x4EB,
  EM_SETPAGEROTATE = 0x4EC,
  EM_GETCTFMODEBIAS = 0x4ED,
  EM_SETCTFMODEBIAS = 0x4EE,
  EM_GETCTFOPENSTATUS = 0x4F0,
  EM_SETCTFOPENSTATUS = 0x4F1,
  EM_GETIMECOMPTEXT = 0x4F2,
  EM_ISIME = 0x4F3,
  EM_GETIMEPROPERTY = 0x4F4,
  EM_CALLAUTOCORRECTPROC = 0x4FF,
  EM_GETTABLEPARMS = 0x509,
  EM_GETQUERYRTFOBJ = 0x50D,
  EM_SETQUERYRTFOBJ = 0x50E,
  EM_SETEDITSTYLEEX = 0x513,
  EM_GETEDITSTYLEEX = 0x514,
  EM_GETSTORYTYPE = 0x522,
  EM_SETSTORYTYPE = 0x523,
  EM_GETELLIPSISMODE = 0x531,
  EM_SETELLIPSISMODE = 0x532,
  EM_SETTABLEPARMS = 0x533,
  EM_GETTOUCHOPTIONS = 0x536,
  EM_SETTOUCHOPTIONS = 0x537,
  EM_INSERTIMAGE = 0x53A,
  EM_SETUIANAME = 0x540,
  EM_GETELLIPSISSTATE = 0x542,
  TAPI_REPLY = 0x463,
  IPM_CLEARADDRESS = 0x464,
  IPM_SETADDRESS = 0x465,
  IPM_GETADDRESS = 0x466,
  IPM_SETRANGE = 0x467,
  IPM_SETFOCUS = 0x468,
  IPM_ISBLANK = 0x469,
  CDM_FIRST = 0x464,
  CDM_GETSPEC = 0x464,
  CDM_GETFILEPATH = 0x465,
  CDM_GETFOLDERPATH = 0x466,
  CDM_GETFOLDERIDLIST = 0x467,
  CDM_SETCONTROLTEXT = 0x468,
  CDM_HIDECONTROL = 0x469,
  CDM_SETDEFEXT = 0x46A,
  CDM_LAST = 0x4C8,
  BFFM_SETSTATUSTEXTA = 0x464,
  BFFM_ENABLEOK = 0x465,
  BFFM_SETSELECTIONA = 0x466,
  BFFM_SETSELECTIONW = 0x467,
  BFFM_SETSTATUSTEXTW = 0x468,
  BFFM_SETOKTEXT = 0x469,
  BFFM_SETEXPANDED = 0x46A,
  ACM_OPENA = 0x464,
  ACM_PLAY = 0x465,
  ACM_STOP = 0x466,
  ACM_OPENW = 0x467,
  ACM_ISPLAYING = 0x468,
  WM_CAP_UNICODE_START = 0x464,
  WM_CAP_SET_CALLBACK_ERRORW = 0x466,
  WM_CAP_SET_CALLBACK_STATUSW = 0x467,
  WM_CAP_DRIVER_GET_NAMEW = 0x470,
  WM_CAP_DRIVER_GET_VERSIONW = 0x471,
  WM_CAP_FILE_SET_CAPTURE_FILEW = 0x478,
  WM_CAP_FILE_GET_CAPTURE_FILEW = 0x479,
  WM_CAP_FILE_SAVEASW = 0x47B,
  WM_CAP_FILE_SAVEDIBW = 0x47D,
  WM_CAP_SET_MCI_DEVICEW = 0x4A6,
  WM_CAP_GET_MCI_DEVICEW = 0x4A7,
  WM_CAP_PAL_OPENW = 0x4B4,
  WM_CAP_PAL_SAVEW = 0x4B5,
  PSM_SETCURSEL = 0x465,
  PSM_REMOVEPAGE = 0x466,
  PSM_ADDPAGE = 0x467,
  PSM_CHANGED = 0x468,
  PSM_RESTARTWINDOWS = 0x469,
  PSM_REBOOTSYSTEM = 0x46A,
  PSM_CANCELTOCLOSE = 0x46B,
  PSM_QUERYSIBLINGS = 0x46C,
  PSM_UNCHANGED = 0x46D,
  PSM_APPLY = 0x46E,
  PSM_SETTITLEA = 0x46F,
  PSM_SETWIZBUTTONS = 0x470,
  PSM_PRESSBUTTON = 0x471,
  PSM_SETCURSELID = 0x472,
  PSM_SETFINISHTEXTA = 0x473,
  PSM_GETTABCONTROL = 0x474,
  PSM_ISDIALOGMESSAGE = 0x475,
  PSM_GETCURRENTPAGEHWND = 0x476,
  PSM_INSERTPAGE = 0x477,
  PSM_SETTITLEW = 0x478,
  PSM_SETFINISHTEXTW = 0x479,
  PSM_SETHEADERTITLEA = 0x47D,
  PSM_SETHEADERTITLEW = 0x47E,
  PSM_SETHEADERSUBTITLEA = 0x47F,
  PSM_SETHEADERSUBTITLEW = 0x480,
  PSM_HWNDTOINDEX = 0x481,
  PSM_INDEXTOHWND = 0x482,
  PSM_PAGETOINDEX = 0x483,
  PSM_INDEXTOPAGE = 0x484,
  PSM_IDTOINDEX = 0x485,
  PSM_INDEXTOID = 0x486,
  PSM_GETRESULT = 0x487,
  PSM_RECALCPAGESIZES = 0x488,
  PSM_SETNEXTTEXTW = 0x489,
  PSM_SHOWWIZBUTTONS = 0x48A,
  PSM_ENABLEWIZBUTTONS = 0x48B,
  PSM_SETBUTTONTEXTW = 0x48C,
  UDM_SETRANGE = 0x465,
  UDM_GETRANGE = 0x466,
  UDM_SETPOS = 0x467,
  UDM_GETPOS = 0x468,
  UDM_SETBUDDY = 0x469,
  UDM_GETBUDDY = 0x46A,
  UDM_SETACCEL = 0x46B,
  UDM_GETACCEL = 0x46C,
  UDM_SETBASE = 0x46D,
  UDM_GETBASE = 0x46E,
  UDM_SETRANGE32 = 0x46F,
  UDM_GETRANGE32 = 0x470,
  UDM_SETPOS32 = 0x471,
  UDM_GETPOS32 = 0x472,
  MCIWNDM_GETZOOM = 0x46D,
  MCIWNDM_REALIZE = 0x476,
  MCIWNDM_SETTIMEFORMATA = 0x477,
  MCIWNDM_GETTIMEFORMATA = 0x478,
  MCIWNDM_VALIDATEMEDIA = 0x479,
  MCIWNDM_PLAYTO = 0x47B,
  MCIWNDM_GETFILENAMEA = 0x47C,
  MCIWNDM_GETDEVICEA = 0x47D,
  MCIWNDM_GETPALETTE = 0x47E,
  MCIWNDM_SETPALETTE = 0x47F,
  MCIWNDM_GETERRORA = 0x480,
  MCIWNDM_SETINACTIVETIMER = 0x483,
  MCIWNDM_GETINACTIVETIMER = 0x485,
  MCIWNDM_GET_SOURCE = 0x48C,
  MCIWNDM_PUT_SOURCE = 0x48D,
  MCIWNDM_GET_DEST = 0x48E,
  MCIWNDM_PUT_DEST = 0x48F,
  MCIWNDM_CAN_PLAY = 0x490,
  MCIWNDM_CAN_WINDOW = 0x491,
  MCIWNDM_CAN_RECORD = 0x492,
  MCIWNDM_CAN_SAVE = 0x493,
  MCIWNDM_CAN_EJECT = 0x494,
  MCIWNDM_CAN_CONFIG = 0x495,
  MCIWNDM_PALETTEKICK = 0x496,
  MCIWNDM_NOTIFYMODE = 0x4C8,
  MCIWNDM_NOTIFYMEDIA = 0x4CB,
  MCIWNDM_NOTIFYERROR = 0x4CD,
  MCIWNDM_SETTIMEFORMATW = 0x4DB,
  MCIWNDM_GETTIMEFORMATW = 0x4DC,
  MCIWNDM_GETFILENAMEW = 0x4E0,
  MCIWNDM_GETDEVICEW = 0x4E1,
  MCIWNDM_GETERRORW = 0x4E4,
  DL_BEGINDRAG = 0x485,
  DL_DRAGGING = 0x486,
  DL_DROPPED = 0x487,
  DL_CANCELDRAG = 0x488,
  IE_GETINK = 0x496,
  IE_MSGFIRST = 0x496,
  IE_SETINK = 0x497,
  IE_GETPENTIP = 0x498,
  IE_SETPENTIP = 0x499,
  IE_GETERASERTIP = 0x49A,
  IE_SETERASERTIP = 0x49B,
  IE_GETBKGND = 0x49C,
  IE_SETBKGND = 0x49D,
  IE_GETGRIDORIGIN = 0x49E,
  IE_SETGRIDORIGIN = 0x49F,
  IE_GETGRIDPEN = 0x4A0,
  IE_SETGRIDPEN = 0x4A1,
  IE_GETGRIDSIZE = 0x4A2,
  IE_SETGRIDSIZE = 0x4A3,
  IE_GETMODE = 0x4A4,
  IE_SETMODE = 0x4A5,
  IE_GETINKRECT = 0x4A6,
  IE_GETAPPDATA = 0x4B8,
  IE_SETAPPDATA = 0x4B9,
  IE_GETDRAWOPTS = 0x4BA,
  IE_SETDRAWOPTS = 0x4BB,
  IE_GETFORMAT = 0x4BC,
  IE_SETFORMAT = 0x4BD,
  IE_GETINKINPUT = 0x4BE,
  IE_SETINKINPUT = 0x4BF,
  IE_GETNOTIFY = 0x4C0,
  IE_SETNOTIFY = 0x4C1,
  IE_GETRECOG = 0x4C2,
  IE_SETRECOG = 0x4C3,
  IE_GETSECURITY = 0x4C4,
  IE_SETSECURITY = 0x4C5,
  IE_GETSEL = 0x4C6,
  IE_SETSEL = 0x4C7,
  IE_DOCOMMAND = 0x4C8,
  IE_GETCOMMAND = 0x4C9,
  IE_GETCOUNT = 0x4CA,
  IE_GETGESTURE = 0x4CB,
  IE_GETMENU = 0x4CC,
  IE_GETPAINTDC = 0x4CD,
  IE_GETPDEVENT = 0x4CE,
  IE_GETSELCOUNT = 0x4CF,
  IE_GETSELITEMS = 0x4D0,
  IE_GETSTYLE = 0x4D1,
  FM_GETFOCUS = 0x600,
  FM_GETDRIVEINFOA = 0x601,
  FM_GETSELCOUNT = 0x602,
  FM_GETSELCOUNTLFN = 0x603,
  FM_GETFILESELA = 0x604,
  FM_GETFILESELLFNA = 0x605,
  FM_REFRESH_WINDOWS = 0x606,
  FM_RELOAD_EXTENSIONS = 0x607,
  FM_GETDRIVEINFOW = 0x611,
  FM_GETFILESELW = 0x614,
  FM_GETFILESELLFNW = 0x615,
  WLX_WM_SAS = 0x659,
  SM_GETSELCOUNT = 0x7E8,
  SM_GETSERVERSELA = 0x7E9,
  SM_GETSERVERSELW = 0x7EA,
  SM_GETCURFOCUSA = 0x7EB,
  SM_GETCURFOCUSW = 0x7EC,
  SM_GETOPTIONS = 0x7ED,
  WM_CPL_LAUNCH = 0x7E8,
  WM_CPL_LAUNCHED = 0x7E9,
  UM_GETSELCOUNT = 0x7E8,
  UM_GETUSERSELA = 0x7E9,
  UM_GETUSERSELW = 0x7EA,
  UM_GETGROUPSELA = 0x7EB,
  UM_GETGROUPSELW = 0x7EC,
  UM_GETCURFOCUSA = 0x7ED,
  UM_GETCURFOCUSW = 0x7EE,
  UM_GETOPTIONS = 0x7EF,
  UM_GETOPTIONS2 = 0x7F0,
  LVM_FIRST = 0x1000,
  LVM_GETBKCOLOR = 0x1000,
  LVM_SETBKCOLOR = 0x1001,
  LVM_GETIMAGELIST = 0x1002,
  LVM_SETIMAGELIST = 0x1003,
  LVM_GETITEMCOUNT = 0x1004,
  LVM_GETITEMA = 0x1005,
  LVM_SETITEMA = 0x1006,
  LVM_INSERTITEMA = 0x1007,
  LVM_DELETEITEM = 0x1008,
  LVM_DELETEALLITEMS = 0x1009,
  LVM_GETCALLBACKMASK = 0x100A,
  LVM_SETCALLBACKMASK = 0x100B,
  LVM_GETNEXTITEM = 0x100C,
  LVM_FINDITEMA = 0x100D,
  LVM_GETITEMRECT = 0x100E,
  LVM_SETITEMPOSITION = 0x100F,
  LVM_GETITEMPOSITION = 0x1010,
  LVM_GETSTRINGWIDTHA = 0x1011,
  LVM_HITTEST = 0x1012,
  LVM_ENSUREVISIBLE = 0x1013,
  LVM_SCROLL = 0x1014,
  LVM_REDRAWITEMS = 0x1015,
  LVM_ARRANGE = 0x1016,
  LVM_EDITLABELA = 0x1017,
  LVM_GETEDITCONTROL = 0x1018,
  LVM_GETCOLUMNA = 0x1019,
  LVM_SETCOLUMNA = 0x101A,
  LVM_INSERTCOLUMNA = 0x101B,
  LVM_DELETECOLUMN = 0x101C,
  LVM_GETCOLUMNWIDTH = 0x101D,
  LVM_SETCOLUMNWIDTH = 0x101E,
  LVM_GETHEADER = 0x101F,
  LVM_CREATEDRAGIMAGE = 0x1021,
  LVM_GETVIEWRECT = 0x1022,
  LVM_GETTEXTCOLOR = 0x1023,
  LVM_SETTEXTCOLOR = 0x1024,
  LVM_GETTEXTBKCOLOR = 0x1025,
  LVM_SETTEXTBKCOLOR = 0x1026,
  LVM_GETTOPINDEX = 0x1027,
  LVM_GETCOUNTPERPAGE = 0x1028,
  LVM_GETORIGIN = 0x1029,
  LVM_UPDATE = 0x102A,
  LVM_SETITEMSTATE = 0x102B,
  LVM_GETITEMSTATE = 0x102C,
  LVM_GETITEMTEXTA = 0x102D,
  LVM_SETITEMTEXTA = 0x102E,
  LVM_SETITEMCOUNT = 0x102F,
  LVM_SORTITEMS = 0x1030,
  LVM_SETITEMPOSITION32 = 0x1031,
  LVM_GETSELECTEDCOUNT = 0x1032,
  LVM_GETITEMSPACING = 0x1033,
  LVM_GETISEARCHSTRINGA = 0x1034,
  LVM_SETICONSPACING = 0x1035,
  LVM_SETEXTENDEDLISTVIEWSTYLE = 0x1036,
  LVM_GETEXTENDEDLISTVIEWSTYLE = 0x1037,
  LVM_GETSUBITEMRECT = 0x1038,
  LVM_SUBITEMHITTEST = 0x1039,
  LVM_SETCOLUMNORDERARRAY = 0x103A,
  LVM_GETCOLUMNORDERARRAY = 0x103B,
  LVM_SETHOTITEM = 0x103C,
  LVM_GETHOTITEM = 0x103D,
  LVM_SETHOTCURSOR = 0x103E,
  LVM_GETHOTCURSOR = 0x103F,
  LVM_APPROXIMATEVIEWRECT = 0x1040,
  LVM_SETWORKAREAS = 0x1041,
  LVM_GETSELECTIONMARK = 0x1042,
  LVM_SETSELECTIONMARK = 0x1043,
  LVM_SETBKIMAGEA = 0x1044,
  LVM_GETBKIMAGEA = 0x1045,
  LVM_GETWORKAREAS = 0x1046,
  LVM_SETHOVERTIME = 0x1047,
  LVM_GETHOVERTIME = 0x1048,
  LVM_GETNUMBEROFWORKAREAS = 0x1049,
  LVM_SETTOOLTIPS = 0x104A,
  LVM_GETITEMW = 0x104B,
  LVM_SETITEMW = 0x104C,
  LVM_INSERTITEMW = 0x104D,
  LVM_GETTOOLTIPS = 0x104E,
  LVM_SORTITEMSEX = 0x1051,
  LVM_FINDITEMW = 0x1053,
  LVM_GETSTRINGWIDTHW = 0x1057,
  LVM_GETGROUPSTATE = 0x105C,
  LVM_GETFOCUSEDGROUP = 0x105D,
  LVM_GETCOLUMNW = 0x105F,
  LVM_SETCOLUMNW = 0x1060,
  LVM_INSERTCOLUMNW = 0x1061,
  LVM_GETGROUPRECT = 0x1062,
  LVM_GETITEMTEXTW = 0x1073,
  LVM_SETITEMTEXTW = 0x1074,
  LVM_GETISEARCHSTRINGW = 0x1075,
  LVM_EDITLABELW = 0x1076,
  LVM_GETBKIMAGEW = 0x108B,
  LVM_SETSELECTEDCOLUMN = 0x108C,
  LVM_SETTILEWIDTH = 0x108D,
  LVM_SETVIEW = 0x108E,
  LVM_GETVIEW = 0x108F,
  LVM_INSERTGROUP = 0x1091,
  LVM_SETGROUPINFO = 0x1093,
  LVM_GETGROUPINFO = 0x1095,
  LVM_REMOVEGROUP = 0x1096,
  LVM_MOVEGROUP = 0x1097,
  LVM_GETGROUPCOUNT = 0x1098,
  LVM_GETGROUPINFOBYINDEX = 0x1099,
  LVM_MOVEITEMTOGROUP = 0x109A,
  LVM_SETGROUPMETRICS = 0x109B,
  LVM_GETGROUPMETRICS = 0x109C,
  LVM_ENABLEGROUPVIEW = 0x109D,
  LVM_SORTGROUPS = 0x109E,
  LVM_INSERTGROUPSORTED = 0x109F,
  LVM_REMOVEALLGROUPS = 0x10A0,
  LVM_HASGROUP = 0x10A1,
  LVM_SETTILEVIEWINFO = 0x10A2,
  LVM_GETTILEVIEWINFO = 0x10A3,
  LVM_SETTILEINFO = 0x10A4,
  LVM_GETTILEINFO = 0x10A5,
  LVM_SETINSERTMARK = 0x10A6,
  LVM_GETINSERTMARK = 0x10A7,
  LVM_INSERTMARKHITTEST = 0x10A8,
  LVM_GETINSERTMARKRECT = 0x10A9,
  LVM_SETINSERTMARKCOLOR = 0x10AA,
  LVM_GETINSERTMARKCOLOR = 0x10AB,
  LVM_SETINFOTIP = 0x10AD,
  LVM_GETSELECTEDCOLUMN = 0x10AE,
  LVM_ISGROUPVIEWENABLED = 0x10AF,
  LVM_GETOUTLINECOLOR = 0x10B0,
  LVM_SETOUTLINECOLOR = 0x10B1,
  LVM_CANCELEDITLABEL = 0x10B3,
  LVM_MAPINDEXTOID = 0x10B4,
  LVM_MAPIDTOINDEX = 0x10B5,
  LVM_ISITEMVISIBLE = 0x10B6,
  LVM_GETEMPTYTEXT = 0x10CC,
  LVM_GETFOOTERRECT = 0x10CD,
  LVM_GETFOOTERINFO = 0x10CE,
  LVM_GETFOOTERITEMRECT = 0x10CF,
  LVM_GETFOOTERITEM = 0x10D0,
  LVM_GETITEMINDEXRECT = 0x10D1,
  LVM_SETITEMINDEXSTATE = 0x10D2,
  LVM_GETNEXTITEMINDEX = 0x10D3,
  LVM_SETUNICODEFORMAT = 0x2005,
  LVM_GETUNICODEFORMAT = 0x2006,
  OCM__BASE = 0x2000,
  OCM_CTLCOLOR = 0x2019,
  OCM_DRAWITEM = 0x202B,
  OCM_MEASUREITEM = 0x202C,
  OCM_DELETEITEM = 0x202D,
  OCM_VKEYTOITEM = 0x202E,
  OCM_CHARTOITEM = 0x202F,
  OCM_COMPAREITEM = 0x2039,
  OCM_NOTIFY = 0x204E,
  OCM_COMMAND = 0x2111,
  OCM_HSCROLL = 0x2114,
  OCM_VSCROLL = 0x2115,
  OCM_CTLCOLORMSGBOX = 0x2132,
  OCM_CTLCOLOREDIT = 0x2133,
  OCM_CTLCOLORLISTBOX = 0x2134,
  OCM_CTLCOLORBTN = 0x2135,
  OCM_CTLCOLORDLG = 0x2136,
  OCM_CTLCOLORSCROLLBAR = 0x2137,
  OCM_CTLCOLORSTATIC = 0x2138,
  OCM_PARENTNOTIFY = 0x2210,
  WM_APP = 0x8000,
  WM_RASDIALEVENT = 0xCCCD,
  CBEM_DELETEITEM = 0x144,
  CBEM_SETUNICODEFORMAT = 0x2005,
  CBEM_GETUNICODEFORMAT = 0x2006,
  IE_GETMODIFY = 0xB8,
  IE_SETMODIFY = 0xB9,
  IE_CANUNDO = 0xC6,
  IE_UNDO = 0xC7,
  IE_EMPTYUNDOBUFFER = 0xCD,
  LVM_SETBKIMAGEW = 0x108A,
  MCIWNDM_GETDEVICEID = 0x464,
  MCIWNDM_GETSTART = 0x467,
  MCIWNDM_GETLENGTH = 0x468,
  MCIWNDM_GETEND = 0x469,
  MCIWNDM_EJECT = 0x46B,
  MCIWNDM_SETZOOM = 0x46C,
  MCIWNDM_SETVOLUME = 0x46E,
  MCIWNDM_GETVOLUME = 0x46F,
  MCIWNDM_SETSPEED = 0x470,
  MCIWNDM_GETSPEED = 0x471,
  MCIWNDM_SETREPEAT = 0x472,
  MCIWNDM_GETREPEAT = 0x473,
  MCIWNDM_PLAYFROM = 0x47A,
  MCIWNDM_SETTIMERS = 0x481,
  MCIWNDM_SETACTIVETIMER = 0x482,
  MCIWNDM_GETACTIVETIMER = 0x484,
  MCIWNDM_CHANGESTYLES = 0x487,
  MCIWNDM_GETSTYLES = 0x488,
  MCIWNDM_GETALIAS = 0x489,
  MCIWNDM_PLAYREVERSE = 0x48B,
  MCIWNDM_OPENINTERFACE = 0x497,
  MCIWNDM_SETOWNER = 0x498,
  MCIWNDM_SENDSTRINGA = 0x465,
  MCIWNDM_GETPOSITIONA = 0x466,
  MCIWNDM_GETMODEA = 0x46A,
  MCIWNDM_NEWA = 0x486,
  MCIWNDM_RETURNSTRINGA = 0x48A,
  MCIWNDM_OPENA = 0x499,
  MCIWNDM_SENDSTRINGW = 0x4C9,
  MCIWNDM_GETPOSITIONW = 0x4CA,
  MCIWNDM_GETMODEW = 0x4CE,
  MCIWNDM_NEWW = 0x4EA,
  MCIWNDM_RETURNSTRINGW = 0x4EE,
  MCIWNDM_OPENW = 0x4FC,
  MCIWNDM_NOTIFYPOS = 0x4C9,
  MCIWNDM_NOTIFYSIZE = 0x4CA,
  MSG_FTS_JUMP_HASH = 0x420,
  MSG_FTS_GET_TITLE = 0x422,
  PBM_SETBKCOLOR = 0x2001,
  RB_SETCOLORSCHEME = 0x2002,
  RB_GETCOLORSCHEME = 0x2003,
  RB_GETDROPTARGET = 0x2004,
  RB_SETUNICODEFORMAT = 0x2005,
  RB_GETUNICODEFORMAT = 0x2006,
  SB_SETUNICODEFORMAT = 0x2005,
  SB_GETUNICODEFORMAT = 0x2006,
  SB_SETBKCOLOR = 0x2001,
  STM_MSGMAX = 0x174,
  TBM_SETUNICODEFORMAT = 0x2005,
  TBM_GETUNICODEFORMAT = 0x2006,
  TB_SETCOLORSCHEME = 0x2002,
  TB_GETCOLORSCHEME = 0x2003,
  TB_SETUNICODEFORMAT = 0x2005,
  TB_GETUNICODEFORMAT = 0x2006,
  UDM_SETUNICODEFORMAT = 0x2005,
  UDM_GETUNICODEFORMAT = 0x2006,
  WM_CAP_START = 0x400,
  WM_CAP_GET_CAPSTREAMPTR = 0x401,
  WM_CAP_SET_CALLBACK_ERRORA = 0x402,
  WM_CAP_SET_CALLBACK_STATUSA = 0x403,
  WM_CAP_SET_CALLBACK_YIELD = 0x404,
  WM_CAP_SET_CALLBACK_FRAME = 0x405,
  WM_CAP_SET_CALLBACK_VIDEOSTREAM = 0x406,
  WM_CAP_SET_CALLBACK_WAVESTREAM = 0x407,
  WM_CAP_GET_USER_DATA = 0x408,
  WM_CAP_SET_USER_DATA = 0x409,
  WM_CAP_DRIVER_CONNECT = 0x40A,
  WM_CAP_DRIVER_DISCONNECT = 0x40B,
  WM_CAP_DRIVER_GET_NAMEA = 0x40C,
  WM_CAP_DRIVER_GET_VERSIONA = 0x40D,
  WM_CAP_DRIVER_GET_CAPS = 0x40E,
  WM_CAP_FILE_SET_CAPTURE_FILEA = 0x414,
  WM_CAP_FILE_GET_CAPTURE_FILEA = 0x415,
  WM_CAP_FILE_SAVEASA = 0x417,
  WM_CAP_FILE_SAVEDIBA = 0x419,
  WM_CAP_FILE_ALLOCATE = 0x416,
  WM_CAP_FILE_SET_INFOCHUNK = 0x418,
  WM_CAP_EDIT_COPY = 0x41E,
  WM_CAP_SET_AUDIOFORMAT = 0x423,
  WM_CAP_GET_AUDIOFORMAT = 0x424,
  WM_CAP_DLG_VIDEOFORMAT = 0x429,
  WM_CAP_DLG_VIDEOSOURCE = 0x42A,
  WM_CAP_DLG_VIDEODISPLAY = 0x42B,
  WM_CAP_GET_VIDEOFORMAT = 0x42C,
  WM_CAP_SET_VIDEOFORMAT = 0x42D,
  WM_CAP_DLG_VIDEOCOMPRESSION = 0x42E,
  WM_CAP_SET_PREVIEW = 0x432,
  WM_CAP_SET_OVERLAY = 0x433,
  WM_CAP_SET_PREVIEWRATE = 0x434,
  WM_CAP_SET_SCALE = 0x435,
  WM_CAP_GET_STATUS = 0x436,
  WM_CAP_SET_SCROLL = 0x437,
  WM_CAP_GRAB_FRAME = 0x43C,
  WM_CAP_GRAB_FRAME_NOSTOP = 0x43D,
  WM_CAP_SEQUENCE = 0x43E,
  WM_CAP_SEQUENCE_NOFILE = 0x43F,
  WM_CAP_SET_SEQUENCE_SETUP = 0x440,
  WM_CAP_GET_SEQUENCE_SETUP = 0x441,
  WM_CAP_SET_MCI_DEVICEA = 0x442,
  WM_CAP_GET_MCI_DEVICEA = 0x443,
  WM_CAP_STOP = 0x444,
  WM_CAP_ABORT = 0x445,
  WM_CAP_SINGLE_FRAME_OPEN = 0x446,
  WM_CAP_SINGLE_FRAME_CLOSE = 0x447,
  WM_CAP_SINGLE_FRAME = 0x448,
  WM_CAP_PAL_OPENA = 0x450,
  WM_CAP_PAL_SAVEA = 0x451,
  WM_CAP_PAL_PASTE = 0x452,
  WM_CAP_PAL_AUTOCREATE = 0x453,
  WM_CAP_PAL_MANUALCREATE = 0x454,
  WM_CAP_SET_CALLBACK_CAPCONTROL = 0x455,
  WM_CAP_UNICODE_END = 0x4B5,
  WM_CAP_END = 0x4B5,
  WM_DDE_FIRST = 0x3E0,
  WM_DDE_LAST = 0x3E8,
  WM_DLGBORDER = 0x11EF,
  WM_DLGSUBCLASS = 0x11F0,
  WM_ADSPROP_NOTIFY_PAGEINIT = 0x84D,
  WM_ADSPROP_NOTIFY_PAGEHWND = 0x84E,
  WM_ADSPROP_NOTIFY_CHANGE = 0x84F,
  WM_ADSPROP_NOTIFY_APPLY = 0x850,
  WM_ADSPROP_NOTIFY_SETFOCUS = 0x851,
  WM_ADSPROP_NOTIFY_FOREGROUND = 0x852,
  WM_ADSPROP_NOTIFY_EXIT = 0x853,
  WM_ADSPROP_NOTIFY_ERROR = 0x856,
  WM_TOUCH = 0x240,
  WM_TOUCHHITTESTING = 0x24D,
  WM_DPICHANGED = 0x2E0,
  WM_DPICHANGED_BEFOREPARENT = 0x2E2,
  WM_DPICHANGED_AFTERPARENT = 0x2E3,
  WM_CLIPBOARDUPDATE = 0x31D,
  WM_DWMCOMPOSITIONCHANGED = 0x31E,
  WM_DWMNCRENDERINGCHANGED = 0x31F,
  WM_DWMCOLORIZATIONCOLORCHANGED = 0x320,
  WM_DWMWINDOWMAXIMIZEDCHANGE = 0x321,
  WM_DWMSENDICONICTHUMBNAIL = 0x323,
  WM_DWMSENDICONICLIVEPREVIEWBITMAP = 0x326,
  WM_INPUT_DEVICE_CHANGE = 0xFE,
  WM_GESTURE = 0x119,
  WM_GESTURENOTIFY = 0x11A,
  WM_MOUSEHWHEEL = 0x20E,
  WM_POINTERDEVICECHANGE = 0x238,
  WM_POINTERDEVICEINRANGE = 0x239,
  WM_POINTERDEVICEOUTOFRANGE = 0x23A,
  WM_NCPOINTERUPDATE = 0x241,
  WM_NCPOINTERDOWN = 0x242,
  WM_NCPOINTERUP = 0x243,
  WM_POINTERUPDATE = 0x245,
  WM_POINTERDOWN = 0x246,
  WM_POINTERUP = 0x247,
  WM_POINTERENTER = 0x249,
  WM_POINTERLEAVE = 0x24A,
  WM_POINTERACTIVATE = 0x24B,
  WM_POINTERCAPTURECHANGED = 0x24C,
  WM_POINTERWHEEL = 0x24E,
  WM_POINTERHWHEEL = 0x24F,
  WM_POINTERROUTEDTO = 0x251,
  WM_POINTERROUTEDAWAY = 0x252,
  WM_POINTERROUTEDRELEASED = 0x253,
  WM_TABLET_ADDED = 0x2C8,
  WM_TABLET_DELETED = 0x2C9,
  WM_TABLET_FLICK = 0x2CB,
  WM_TABLET_QUERYSYSTEMGESTURESTATUS = 0x2CC,
  WM_GETDPISCALEDSIZE = 0x2E4,
  WM_GETTITLEBARINFOEX = 0x33F,
};

/* 639 */
typedef unsigned __int16 UInt16;

/* 626 */
typedef UInt16 StdPrm;

/* 627 */
#pragma pack(push, 1)
struct EdithRandomParam {
  StdPrm destData;
  StdPrm destOwner;
  StdPrm rangeData;
  StdPrm rangeOwner;
};
#pragma pack(pop)

/* 628 */
#pragma pack(push, 1)
struct EdithUpdateParam {
  StdPrm who;
  StdPrm what;
};
#pragma pack(pop)

/* 629 */
typedef unsigned __int8 UInt8;

/* 630 */
enum EdithBurnParamFlags : unsigned __int8 {
  kStackObj = 0x0,
  kTileInFrontOfStackObj = 0x1,
  kFloorUnderStackObj = 0x2,
};

/* 631 */
struct EdithBurnParam {
  UInt8 what;
  EdithBurnParamFlags flags;
};

/* 632 */
struct EdithInstruction {
  __int16 opcode;
  UInt8 tDest;
  UInt8 fDest;
  UInt8 operands[8];
};

/* 633 */
struct EdithExpressionParam {
  StdPrm lhs;
  StdPrm rhs;
  UInt8 isSigned;
  UInt8 operator;
  UInt8 lhsOwner;
  UInt8 rhsOwner;
};

/* 634 */
enum DialogType : unsigned __int8 {
  kMessage = 0x0,
  kChoice = 0x1,
  kTriChoice = 0x2,
  kTextEntry = 0x3,
  kTutorial = 0x4,
};

/* 635 */
enum DialogIconType : unsigned __int8 {
  kAuto = 0x0,
  kNone = 0x1,
  kNeighbor = 0x2,
  kPrivateIndexed = 0x3,
  kGlobalNamed = 0x4,
};

/* 636 */
enum DialogBehavior {
  kEngageAndPause = 0x0,
  kReturnAndPause = 0x1,
  kEngageAndContinue = 0x2,
  kReturnAndContinue = 0x3,
};

/* 637 */
union DialogParam::$80FCA22150BDCCF58BF705F0435E4F99 {
  DialogIconType iconIndex;
  UInt8 iconNameStr;
};

/* 638 */
struct DialogParam {
  UInt8 cancelStr;
  union {
    DialogIconType iconIndex;
    UInt8 iconNameStr;
  };
  UInt8 messageStr;
  UInt8 yesStr;
  UInt8 noStr;
  DialogType type;
  UInt8 titleStr;
  UInt8 flags;
};

/* 640 */
typedef char SInt8;

/* 641 */
struct PlaySoundParam {
  StdPrm soundID;
  UInt16 sampleRate;
  UInt8 flags;
  SInt8 volume;
};

/* 642 */
struct /*VFT*/ cSimulator_vtbl {
  void *(__thiscall *cSimulator_vtbl_func_0)(void *this, char a2);
  __int16(__thiscall *cSimulator_vtbl_func_1)(int this, __int16 a2, int a3);
};

/* 644 */
enum SimulatorGlobals : unsigned __int16 {
  kHour = 0x0,
  kDayOfMonth = 0x1,
  kZoomLevel = 0x2,
  kSelectedPersonID = 0x3,
  kTimeOfDay = 0x4,
  kMinute = 0x5,
  kSecond = 0x6,
  kMonth = 0x7,
  kYear = 0x8,
  kCurrentFamily = 0x9,
  kCurrentHouse = 0xA,
  kUnused1 = 0xB,
  kLastGZButtonID = 0xC,
  kBudgetMod10000 = 0xD,
  kBudgetDiv10000 = 0xE,
  kCurrentLanguage = 0xF,
  kSpeed = 0x10,
  kPaused = 0x11,
  kHeldSimSpeed = 0x12,
  kMode = 0x13,
  kLotPriceDiv1000 = 0x14,
  kInhibitMoveIn = 0x15,
  kLotSize = 0x16,
  kDemo = 0x17,
  kDebugFlags = 0x18,
  kIsTutorialHouse = 0x19,
  kIndoorTiles = 0x1A,
  kDaysRunning = 0x1B,
  kMaxDayNumber = 0x1C,
  kFreeWill = 0x1D,
  kHouseRadioStation = 0x1E,
  kLotValue = 0x1F,
  kArchitectureValue = 0x20,
  kObjectsValue = 0x21,
  kFunds = 0x22,
};

/* 661 */
struct __cppobj __declspec(align(2)) cFixedWorld : Commander {
  int fSize;
  int dword_14;
  int dword_18;
  int dword_1c;
  int dword_20;
  _BYTE x24[48];
  WallManager *mpWallManager;
  _BYTE x58[8];
  int dword_60;
  int dword_64;
  _BYTE x68[24];
  char byte_80;
  char byte_81;
  __int16 field_82;
  int fRotation;
  int field_88;
  int field_8C;
  int field_90;
  int field_94;
  int field_98;
  int field_9C;
  int field_A0;
};

/* 670 */
#pragma pack(push, 1)
struct WallManager {
  WallManager_vtbl *__vftable /*VFT*/;
  int dword_4;
  _BYTE gap_8[16];
  stru_73EA40 *field_18;
  int dword_1c;
  int dword_20;
  int dword_24;
  int dword_28;
  int dword_2c;
  int dword_30;
  int dword_34;
};
#pragma pack(pop)

/* 669 */
struct /*VFT*/ WallManager_vtbl {
  int(__stdcall *WallManager_vtbl_func_0)(int a1);
};

/* 667 */
struct CTilePt {
  _BYTE mX;
  _BYTE mY;
  _BYTE mLevel;
  _BYTE byte_3;
};

/* 666 */
#pragma pack(push, 1)
struct stru_48D5A0 {
  _BYTE gap_0[2];
  char byte_2;
};
#pragma pack(pop)

/* 668 */
#pragma pack(push, 1)
struct stru_73EA40 {
  CTilePt field_0;
  int dword_4;
  _BYTE byte_8[1];
  _BYTE byte_9[1];
  _BYTE byte_a[1];
  _BYTE byte_b[1];
  _BYTE byte_c[4];
  int dword_10;
  int dword_14;
  int dword_18;
  int dword_1c;
  int dword_20;
  char byte_24;
  char byte_25;
  _BYTE gap_26[2];
  stru_48D5A0 field_28;
  _BYTE gap_2B[17];
  stru_48D5A0 field_3c;
  _BYTE gap_3F[17];
  char byte_50;
};
#pragma pack(pop)

/* 662 */
struct /*VFT*/ cFixedWorld_vtbl {
  void *(__thiscall *cFixedWorld_vtbl_func_0)(void *this, char a2);
  __int16(__thiscall *cFixedWorld_vtbl_func_1)(_DWORD *this, __int16 a2,
                                               unsigned int a3);
};

/* 663 */
#pragma pack(push, 1)
struct stru_74D8A0 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 664 */
#pragma pack(push, 1)
struct stru_74DA90 {
  _DWORD dword_0;
  int dword_4;
  int dword_8;
};
#pragma pack(pop)

/* 665 */
#pragma pack(push, 1)
struct stru_5282D0 {
  char byte_0;
};
#pragma pack(pop)

/* 679 */
struct RTTICompleteObjectLocator {
  int signature;
  int offset;
  int cdOffset;
  void *pTypeDescriptor;
  void *pClassDescriptor;
};

/* 680 */
struct RTTITypeDescriptor {
  void *pVFTable;
  int spare;
  char name[];
};

/* 681 */
struct RTTIClassHierarchyDescriptor {
  int signature;
  int attribute;
  int numBaseClasses;
  void *pBaseClassArray;
};

/* 682 */
struct RTTIBaseClassDescriptor {
  void *pTypeDescriptor;
  int numContainerBases;
  void *PMD;
  int attributes;
};

/* 683 */
struct IFFResNode {
  _DWORD fFileoffset;
  _BYTE gap_4[4];
  __int16 word_8;
  _WORD word_a;
  _DWORD dword_c;
};

/* 686 */
struct HouseStats {
  _DWORD sqFeet;
  _DWORD dword4;
  _DWORD dword8;
  _DWORD dwordC;
  _DWORD dword10;
  _DWORD lotSize;
  _DWORD layoutScore;
  _DWORD dword1C;
  _DWORD dword20;
  _DWORD dword24;
  _DWORD objectCount;
};
